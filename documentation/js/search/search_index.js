var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.951,1,1.717]],["body/controllers/AppController.html",[0,1.52,1,2.745,2,1.211,3,0.413,4,0.34,5,0.34,6,2.956,7,0.571,8,1.206,9,4.25,10,1.52,11,0.044,12,0.752,13,3.624,14,0.962,15,2.142,16,0.518,17,0.571,18,2.341,19,2.956,20,0.413,21,0.084,22,2.516,23,2.188,24,1.211,25,3.624,26,0.028,27,0.035,28,0.028]],["title/modules/AppModule.html",[29,0.951,30,1.717]],["body/modules/AppModule.html",[1,2.613,2,1.263,3,0.312,4,0.257,5,0.257,11,0.044,16,0.602,17,0.432,18,2.385,19,2.232,20,0.312,21,0.064,26,0.021,27,0.029,28,0.021,29,1.446,30,3.386,31,1.148,32,1.148,33,1.454,34,1.454,35,1.148,36,2.299,37,1.454,38,2.232,39,2.232,40,2.232,41,2.69,42,2.69,43,2.69,44,1.51,45,2.008,46,1.454,47,1.454,48,2.737,49,2.281,50,2.737,51,2.737,52,1.652,53,1.148,54,2.737,55,2.737,56,2.737,57,2.737]],["title/injectables/AppService.html",[18,1.34,58,0.59]],["body/injectables/AppService.html",[3,0.434,4,0.357,5,0.357,7,0.6,8,1.244,9,4.325,11,0.043,12,0.79,14,1.01,15,2.209,16,0.434,17,0.6,18,2.209,20,0.434,21,0.089,24,1.273,26,0.029,27,0.036,28,0.029,58,0.973,59,1.597,60,3.106,61,3.807,62,3.807,63,3.807]],["title/controllers/AuthController.html",[0,0.951,64,1.717]],["body/controllers/AuthController.html",[0,0.99,2,0.99,3,0.337,4,0.278,5,0.278,7,0.467,8,1.058,10,1.243,11,0.044,12,0.615,14,0.786,16,0.549,17,0.467,20,0.337,21,0.069,22,2.057,24,0.99,26,0.022,27,0.03,28,0.022,64,2.408,65,2.416,66,2.057,67,2.962,68,1.891,69,4.106,70,2.962,71,2.272,72,2.962,73,3.988,74,2.962,75,3.988,76,3.988,77,2.962,78,1.109,79,0.883,80,0.697,81,1.109,82,3.253,83,1.879,84,2.057,85,2.057,86,2.124,87,2.416,88,2.057,89,2.769,90,3.988,91,1.243,92,2.962,93,2.962,94,2.408,95,2.962,96,1.788,97,0.786,98,1.879,99,2.962,100,2.962]],["title/modules/AuthModule.html",[29,0.951,41,1.511]],["body/modules/AuthModule.html",[2,1.26,3,0.311,4,0.256,5,0.256,11,0.045,16,0.611,17,0.43,20,0.311,21,0.063,26,0.021,27,0.029,28,0.021,29,1.444,31,1.144,32,1.144,33,1.449,34,1.449,35,1.144,36,2.295,37,2.003,41,2.885,44,1.508,45,2.003,46,1.449,47,1.449,49,1.647,52,1.647,53,1.144,64,2.608,86,2.383,87,2.225,88,1.894,97,0.724,101,2.225,102,2.225,103,2.688,104,2.728,105,2.728,106,1.894,107,2.728,108,2.225,109,1.894,110,1.021,111,2.728,112,2.618,113,2.618,114,2.003,115,2.225,116,2.728,117,2.728,118,2.225]],["title/injectables/AuthService.html",[58,0.59,86,1.34]],["body/injectables/AuthService.html",[3,0.295,4,0.243,5,0.243,7,0.409,8,0.965,11,0.044,12,0.872,14,0.965,16,0.519,17,0.409,20,0.295,21,0.06,23,2.196,24,1.216,26,0.02,27,0.028,28,0.02,44,1.484,58,0.755,59,1.087,68,2.088,69,2.114,71,2.147,78,1.573,79,1.253,80,0.989,81,1.573,82,2.114,83,1.714,86,1.714,88,1.799,96,1.564,97,1.426,98,1.221,106,1.799,108,2.114,119,2.114,120,3.637,121,3.637,122,1.933,123,2.114,124,5.111,125,2.591,126,3.637,127,2.591,128,3.637,129,2.591,130,1.799,131,1.933,132,2.591,133,2.591,134,2.591,135,2.591,136,2.114,137,2.591,138,2.591,139,1.799,140,1.564,141,2.591,142,2.591]],["title/classes/Client.html",[21,0.066,143,1.34]],["body/classes/Client.html",[3,0.357,4,0.294,5,0.294,7,0.494,10,2.068,11,0.044,12,1.023,15,2.481,16,0.471,20,0.357,21,0.073,26,0.024,27,0.031,28,0.024,80,1.16,91,1.313,143,1.949,144,1.89,145,2.553,146,2.498,147,4.634,148,4.634,149,1.735,150,4.634,151,3.78,152,3.13,153,3.13,154,1.949,155,3.218,156,3.13,157,3.13,158,2.873,159,3.424,160,1.475,161,3.424]],["title/controllers/ClientController.html",[0,0.951,162,1.717]],["body/controllers/ClientController.html",[0,0.584,2,0.584,3,0.199,4,0.164,5,0.164,7,0.276,8,0.721,10,1.708,11,0.044,12,0.845,14,1.081,16,0.464,17,0.276,20,0.199,21,0.041,24,1.361,26,0.013,27,0.021,28,0.013,66,1.214,68,2.195,78,1.408,79,1.342,80,0.958,81,1.408,83,2.301,84,1.887,85,1.887,89,1.214,91,0.733,94,2.459,98,1.919,110,0.654,122,0.929,131,0.929,143,2.44,149,1.789,154,2.251,162,1.641,163,1.426,164,1.748,165,2.717,166,2.315,167,2.27,168,1.887,169,1.887,170,1.748,171,1.426,172,1.748,173,3.984,174,3.322,175,3.984,176,1.748,177,1.426,178,1.748,179,3.334,180,1.748,181,1.748,182,1.748,183,1.214,184,1.748,185,1.748,186,1.426,187,1.748,188,1.748,189,1.426,190,1.426,191,1.426,192,1.571,193,1.426,194,1.214,195,1.426,196,3.517,197,3.517,198,3.067,199,2.217,200,1.214,201,1.748,202,1.748,203,3.322,204,3.322,205,1.748,206,1.748,207,1.748,208,1.426,209,1.748,210,1.748,211,1.426,212,1.748,213,1.748,214,1.426,215,1.748,216,1.748]],["title/modules/ClientModule.html",[29,0.951,42,1.511]],["body/modules/ClientModule.html",[2,1.386,3,0.358,4,0.295,5,0.295,11,0.044,16,0.601,17,0.495,20,0.358,21,0.073,26,0.024,27,0.031,28,0.024,29,1.552,31,1.318,32,1.318,33,1.67,34,1.67,35,1.318,36,2.467,37,2.204,42,2.802,45,2.204,46,1.67,47,1.67,49,1.897,52,2.504,53,1.318,109,2.182,110,1.176,112,2.182,113,2.182,114,1.67,143,1.48,162,2.803,192,2.484,193,2.563,194,2.182,217,2.563,218,2.563,219,3.142,220,3.142,221,3.142]],["title/injectables/ClientService.html",[58,0.59,192,1.34]],["body/injectables/ClientService.html",[3,0.256,4,0.211,5,0.211,7,0.354,8,0.871,11,0.044,12,0.984,14,1.205,16,0.486,17,0.354,20,0.256,21,0.052,24,1.518,26,0.017,27,0.025,28,0.017,53,0.942,58,0.681,59,0.942,68,2.296,78,1.7,79,1.354,80,1.069,81,1.7,83,2.453,98,2.14,122,1.194,131,1.194,143,2.514,149,1.453,154,2.366,160,1.058,166,2.28,167,2.577,168,2.28,169,2.28,177,2.679,183,2.28,186,1.832,192,1.547,194,1.56,222,1.832,223,3.283,224,2.246,225,2.964,226,2.246,227,3.283,228,3.283,229,2.246,230,2.246,231,2.246,232,2.246,233,2.246,234,1.832,235,1.832,236,1.832,237,2.246,238,2.246,239,2.246,240,2.246,241,2.246,242,2.246,243,2.246]],["title/injectables/JwtAuthGuard.html",[58,0.59,244,1.975]],["body/injectables/JwtAuthGuard.html",[3,0.558,4,0.289,5,0.289,7,0.486,8,1.087,11,0.044,12,0.85,14,1.087,16,0.467,17,0.486,20,0.351,21,0.072,24,1.369,26,0.023,27,0.031,28,0.023,58,0.85,59,1.294,78,1.534,79,1.221,80,0.725,81,1.534,97,1.354,110,1.154,130,2.844,139,2.141,140,1.862,200,2.141,244,2.844,245,3.752,246,2.515,247,4.096,248,4.096,249,4.096,250,4.901,251,3.083,252,3.083,253,4.096,254,3.083,255,4.6,256,2.515,257,3.083,258,3.083]],["title/injectables/JwtStrategy.html",[58,0.59,103,1.511]],["body/injectables/JwtStrategy.html",[3,0.335,4,0.276,5,0.276,7,0.464,8,1.053,11,0.044,12,0.824,14,0.78,16,0.548,17,0.464,20,0.335,21,0.068,23,1.776,26,0.022,27,0.03,28,0.022,44,1.543,58,0.824,59,1.234,68,1.884,78,1.486,79,1.183,80,0.934,81,1.486,96,1.776,103,2.109,110,1.101,114,1.563,118,2.399,122,2.109,123,2.399,130,2.042,131,1.563,149,1.101,256,2.399,259,2.399,260,4.492,261,2.941,262,2.941,263,4.809,264,4.492,265,2.941,266,2.941,267,2.941,268,2.399,269,2.941,270,2.941,271,2.941,272,2.941,273,2.941,274,2.941,275,2.941,276,3.969,277,3.969,278,3.969]],["title/classes/User.html",[21,0.066,97,0.755]],["body/classes/User.html",[3,0.299,4,0.246,5,0.246,7,0.414,8,0.974,10,2.096,11,0.044,12,1.037,14,0.696,15,2.538,16,0.482,20,0.418,21,0.085,26,0.02,27,0.028,28,0.02,71,1.236,79,1.262,80,1.135,91,1.101,97,0.974,144,1.584,146,2.215,149,1.584,151,3.738,154,1.729,155,2.938,158,1.822,159,3.349,160,1.236,161,3.562,279,1.822,280,3.182,281,3.182,282,2.938,283,3.738,284,2.624,285,2.624,286,2.624,287,2.624,288,2.624,289,3.452,290,2.624,291,2.624,292,2.215,293,2.14,294,2.14,295,1.822,296,2.14]],["title/controllers/UserController.html",[0,0.951,297,1.717]],["body/controllers/UserController.html",[0,0.61,2,0.61,3,0.208,4,0.171,5,0.171,7,0.288,8,0.746,10,1.743,11,0.044,12,0.862,14,1.102,16,0.473,17,0.288,20,0.208,21,0.042,22,1.267,24,1.389,26,0.014,27,0.021,28,0.014,44,1.021,66,1.267,68,2.213,78,1.44,79,1.363,80,0.905,81,1.44,83,2.328,84,1.951,85,1.951,89,1.267,91,0.766,94,2.323,97,1.4,98,1.813,110,0.683,136,1.489,149,1.812,166,1.267,167,2.323,168,1.951,171,1.489,173,3.138,174,2.292,175,3.849,183,1.267,189,1.489,190,1.489,191,1.489,195,1.489,196,3.389,197,3.389,198,3.138,199,2.794,200,1.267,203,3.138,204,3.138,208,1.489,211,1.489,214,1.489,297,1.696,298,1.489,299,1.825,300,2.292,301,2.292,302,2.81,303,1.489,304,1.825,305,1.489,306,1.825,307,2.81,308,2.81,309,1.825,310,1.825,311,1.825,312,1.825,313,1.825,314,1.825,315,1.825,316,1.825,317,1.825,318,1.825,319,1.489,320,1.489,321,1.825,322,1.825,323,1.825,324,1.825,325,1.825,326,1.825,327,1.825,328,2.81,329,1.825,330,1.825,331,1.825,332,1.825,333,1.825]],["title/classes/UserLogin.html",[21,0.066,71,1.34]],["body/classes/UserLogin.html",[3,0.346,4,0.285,5,0.285,7,0.479,10,1.702,11,0.044,12,0.842,15,2.552,16,0.52,20,0.462,21,0.094,26,0.023,27,0.031,28,0.023,71,1.911,79,0.906,80,0.954,91,1.275,97,0.806,144,1.834,146,2.449,149,1.137,154,1.431,155,2.817,158,2.11,159,3.525,160,1.431,161,3.809,279,2.11,280,3.383,281,3.383,282,2.11,283,2.478,289,3.309,292,2.449,293,2.478,294,2.478,295,2.11,296,2.478,334,3.038,335,3.038]],["title/modules/UserModule.html",[29,0.951,43,1.511]],["body/modules/UserModule.html",[2,1.386,3,0.358,4,0.295,5,0.295,11,0.044,16,0.601,17,0.495,20,0.358,21,0.073,26,0.024,27,0.031,28,0.024,29,1.552,31,1.318,32,1.318,33,1.67,34,1.67,35,1.318,36,2.467,37,2.204,43,2.802,44,1.572,45,2.204,46,1.67,47,1.67,49,1.897,52,2.504,53,1.318,97,0.834,109,2.182,110,1.176,112,2.182,113,2.182,114,1.67,115,2.563,297,2.803,319,2.563,336,3.142,337,3.142,338,3.142,339,3.142,340,3.142]],["title/injectables/UserService.html",[44,0.848,58,0.59]],["body/injectables/UserService.html",[3,0.179,4,0.148,5,0.148,7,0.248,8,0.663,11,0.045,12,0.983,14,1.19,15,2.318,16,0.441,17,0.248,20,0.179,21,0.037,23,1.879,24,1.499,26,0.012,27,0.019,28,0.012,44,0.745,53,0.659,58,0.519,59,0.659,68,2.285,78,1.679,79,1.337,80,1.087,81,1.679,83,1.671,96,1.879,97,1.358,98,2.231,122,0.835,131,1.884,139,1.736,140,1.509,146,1.509,149,0.936,154,1.942,160,0.741,167,2.141,169,1.736,225,2.463,234,1.282,235,1.282,236,1.282,280,3.001,281,2.463,282,2.463,292,1.509,295,1.092,300,2.039,301,2.039,303,2.039,305,2.039,320,1.282,341,1.282,342,2.5,343,2.5,344,2.5,345,2.5,346,1.572,347,2.5,348,2.5,349,1.572,350,1.572,351,2.5,352,1.572,353,1.572,354,2.5,355,1.572,356,2.5,357,1.572,358,2.5,359,1.572,360,2.5,361,1.572,362,1.572,363,1.572,364,3.112,365,1.572,366,1.572,367,3.112,368,2.5,369,1.572,370,1.572,371,1.572,372,1.572,373,1.572,374,1.572,375,1.572,376,2.5,377,1.572,378,1.572,379,1.572,380,1.572,381,1.572,382,1.572,383,1.572]],["title/coverage.html",[384,2.694]],["body/coverage.html",[0,1.619,1,1.808,5,0.281,6,2.443,11,0.043,18,1.411,21,0.106,26,0.023,27,0.031,28,0.023,35,1.256,44,0.893,58,1.079,60,2.443,64,1.808,65,2.443,71,1.411,80,0.704,86,1.411,97,0.795,103,1.591,119,2.443,140,1.808,143,1.411,145,2.443,162,1.808,163,2.443,192,1.411,222,2.443,244,2.079,245,2.443,246,2.443,259,2.443,279,2.789,297,1.808,298,2.443,341,2.443,384,2.079,385,2.994,386,2.994,387,2.994,388,5.679,389,4.533,390,2.443,391,2.994,392,2.994,393,4.533,394,2.994,395,4.017,396,2.994,397,4.017,398,2.994,399,2.994,400,2.994]],["title/dependencies.html",[32,1.435,401,2.376]],["body/dependencies.html",[11,0.045,17,0.523,21,0.077,26,0.025,27,0.033,28,0.025,32,1.392,53,1.392,91,1.392,106,2.304,110,1.242,114,1.763,160,1.563,268,3.506,292,2.004,402,3.318,403,3.318,404,4.768,405,3.318,406,3.318,407,3.318,408,4.768,409,3.318,410,4.298,411,3.318,412,3.318,413,3.318,414,3.318,415,3.318,416,3.318,417,3.318,418,3.318,419,3.318,420,3.318,421,3.318,422,3.318,423,3.318,424,3.318,425,3.318,426,3.318,427,3.318,428,3.318,429,3.318,430,3.318,431,3.318]],["title/miscellaneous/functions.html",[432,1.938,433,2.79]],["body/miscellaneous/functions.html",[7,0.685,11,0.039,26,0.033,27,0.039,28,0.033,35,2.256,390,3.546,432,3.546,433,3.546,434,4.347]],["title/index.html",[7,0.375,435,2.376,436,2.376]],["body/index.html",[4,0.28,11,0.043,26,0.023,27,0.03,28,0.023,94,1.801,225,2.072,384,2.072,437,2.983,438,2.983,439,4.007,440,2.983,441,2.983,442,2.983,443,2.983,444,2.983,445,2.983,446,2.983,447,2.983,448,2.983,449,4.524,450,2.983,451,2.983,452,2.983,453,5.308,454,2.983,455,2.983,456,2.983,457,5.195,458,2.983,459,2.983,460,4.007,461,2.983,462,2.983,463,2.983,464,2.983,465,4.007,466,4.007,467,2.983,468,2.983,469,2.983,470,4.007,471,4.007,472,2.983,473,2.983,474,2.983,475,2.983,476,2.983,477,2.434,478,2.983,479,2.983,480,2.983,481,2.983,482,2.983,483,2.983,484,2.983,485,2.983,486,2.983,487,2.983,488,2.983,489,2.983,490,2.983,491,2.983,492,2.983,493,2.983,494,2.983,495,2.983]],["title/modules.html",[31,1.627]],["body/modules.html",[11,0.037,26,0.031,27,0.037,28,0.031,30,2.457,31,1.707,41,2.162,42,2.162,43,2.162,477,4.424,496,5.423,497,5.423,498,5.423]],["title/overview.html",[499,3.164]],["body/overview.html",[2,1.035,11,0.043,18,2.171,26,0.024,27,0.031,28,0.024,29,1.035,30,3.407,31,1.298,32,1.298,33,1.645,34,1.645,35,1.298,36,1.645,37,1.645,38,2.525,39,2.525,40,2.525,41,2.926,42,2.714,43,2.714,44,1.523,45,2.182,46,1.645,47,1.645,59,1.298,86,2.171,101,2.525,102,2.525,103,2.449,144,1.869,192,2.171,217,2.525,218,2.525,499,2.525,500,4.106,501,3.095,502,3.095]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["1.0.1",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":502,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["3660",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":500,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":501,"title":{},"body":{"overview.html":{}}}],["6.10.14",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["accesstoken",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":147,"title":{},"body":{"classes/Client.html":{}}}],["all'})@apiunauthorizedresponse({description",{"_index":174,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["already",{"_index":376,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":478,"title":{},"body":{"index.html":{}}}],["angular",{"_index":448,"title":{},"body":{"index.html":{}}}],["api/auth",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/client",{"_index":164,"title":{},"body":{"controllers/ClientController.html":{}}}],["api/user",{"_index":299,"title":{},"body":{"controllers/UserController.html":{}}}],["apibadrequestresponse",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth",{"_index":196,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@delete('/:id')@apiparam({name",{"_index":306,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@get('/')@useguards(undefined)@apiokresponse({description",{"_index":310,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@get('/:id')@apiparam({name",{"_index":312,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@put('/:id')@apiparam({name",{"_index":315,"title":{},"body":{"controllers/UserController.html":{}}}],["apibody",{"_index":199,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apiokresponse",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apiokresponse({description",{"_index":204,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apiparam",{"_index":198,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":161,"title":{},"body":{"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{}}}],["apiproperty()@column",{"_index":151,"title":{},"body":{"classes/Client.html":{},"classes/User.html":{}}}],["apitags",{"_index":195,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apitags('clients",{"_index":202,"title":{},"body":{"controllers/ClientController.html":{}}}],["apitags('user",{"_index":322,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":197,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["app",{"_index":455,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":445,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth.controller",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authcontroller",{"_index":64,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":200,"title":{},"body":{"controllers/ClientController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["authguard('jwt",{"_index":257,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":488,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":86,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":479,"title":{},"body":{"index.html":{}}}],["beforeinsert",{"_index":289,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["body",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":498,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":496,"title":{},"body":{"modules.html":{}}}],["building",{"_index":440,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":247,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":249,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["class",{"_index":21,"title":{"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":144,"title":{},"body":{"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"overview.html":{}}}],["client",{"_index":143,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"coverage.html":{}}}],["client.controller",{"_index":220,"title":{},"body":{"modules/ClientModule.html":{}}}],["client.entity",{"_index":194,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{}}}],["client.service",{"_index":193,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{}}}],["clientcontroller",{"_index":162,"title":{"controllers/ClientController.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"coverage.html":{}}}],["clientmodule",{"_index":42,"title":{"modules/ClientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules.html":{},"overview.html":{}}}],["clientrepo",{"_index":227,"title":{},"body":{"injectables/ClientService.html":{}}}],["clientservice",{"_index":192,"title":{"injectables/ClientService.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"coverage.html":{},"overview.html":{}}}],["client})@apibearerauth()@useguards(undefined)@apiokresponse({description",{"_index":172,"title":{},"body":{"controllers/ClientController.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_clientmodule",{"_index":217,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_providers",{"_index":218,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":336,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":337,"title":{},"body":{"modules/UserModule.html":{}}}],["column",{"_index":159,"title":{},"body":{"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{}}}],["combination",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["company",{"_index":148,"title":{},"body":{"classes/Client.html":{}}}],["compodoc/compodoc",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(@injectrepository(client",{"_index":237,"title":{},"body":{"injectables/ClientService.html":{}}}],["constructor(@injectrepository(user",{"_index":365,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(clientrepo",{"_index":224,"title":{},"body":{"injectables/ClientService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["constructor(userrepo",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":252,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api/client",{"_index":201,"title":{},"body":{"controllers/ClientController.html":{}}}],["controller('api/user",{"_index":321,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":384,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":223,"title":{},"body":{"injectables/ClientService.html":{}}}],["create(client",{"_index":228,"title":{},"body":{"injectables/ClientService.html":{}}}],["createclient",{"_index":165,"title":{},"body":{"controllers/ClientController.html":{}}}],["createclient(@body",{"_index":206,"title":{},"body":{"controllers/ClientController.html":{}}}],["createclient(client",{"_index":170,"title":{},"body":{"controllers/ClientController.html":{}}}],["createtoken",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(user",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser",{"_index":300,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":324,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(user",{"_index":303,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["crypto",{"_index":292,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.createhmac('sha256",{"_index":295,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{}}}],["default",{"_index":362,"title":{},"body":{"injectables/UserService.html":{}}}],["defaultstrategy",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":166,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{}}}],["delete('/:id",{"_index":214,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["delete('/:id')@apiparam({name",{"_index":178,"title":{},"body":{"controllers/ClientController.html":{}}}],["delete(@param('id",{"_index":215,"title":{},"body":{"controllers/ClientController.html":{}}}],["delete(id",{"_index":177,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["deleted",{"_index":328,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted'})@apiunauthorizedresponse({description",{"_index":308,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteresult",{"_index":236,"title":{},"body":{"injectables/ClientService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":301,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@param",{"_index":329,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":305,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["development",{"_index":456,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["duplicateemail",{"_index":371,"title":{},"body":{"injectables/UserService.html":{}}}],["duplicateusername",{"_index":373,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":467,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":441,"title":{},"body":{"index.html":{}}}],["email",{"_index":280,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":158,"title":{},"body":{"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{}}}],["entity('users",{"_index":293,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["err",{"_index":255,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["executioncontext",{"_index":250,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exp",{"_index":277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":256,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findbyid",{"_index":342,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":351,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":439,"title":{},"body":{"index.html":{}}}],["function",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":433,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/')@apibearerauth()@useguards(undefined)@apiokresponse({description",{"_index":181,"title":{},"body":{"controllers/ClientController.html":{}}}],["get('/:id",{"_index":208,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["get('/:id')@apiparam({name",{"_index":184,"title":{},"body":{"controllers/ClientController.html":{}}}],["getall",{"_index":167,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getbyemail",{"_index":343,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyemail(email",{"_index":354,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyemailandpass",{"_index":344,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyemailandpass(email",{"_index":356,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyid",{"_index":168,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{}}}],["getbyid(@param",{"_index":326,"title":{},"body":{"controllers/UserController.html":{}}}],["getbyid(@param('id",{"_index":209,"title":{},"body":{"controllers/ClientController.html":{}}}],["getbyid(id",{"_index":183,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{}}}],["getbyusername",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyusername(username",{"_index":358,"title":{},"body":{"injectables/UserService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":435,"title":{"index.html":{}},"body":{}}],["grow",{"_index":474,"title":{},"body":{"index.html":{}}}],["guard.ts",{"_index":246,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["guard.ts:10",{"_index":254,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guard.ts:6",{"_index":251,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest",{"_index":248,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":253,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hashpassword",{"_index":283,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["heavily",{"_index":446,"title":{},"body":{"index.html":{}}}],["hello",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":485,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":492,"title":{},"body":{"index.html":{}}}],["iat",{"_index":276,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":149,"title":{},"body":{"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["id'})@apibearerauth()@useguards(undefined)@apiokresponse({description",{"_index":179,"title":{},"body":{"controllers/ClientController.html":{}}}],["id'})@apibody({type",{"_index":316,"title":{},"body":{"controllers/UserController.html":{}}}],["id'})@useguards(undefined)@apiokresponse({description",{"_index":307,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["if(duplicateemail",{"_index":375,"title":{},"body":{"injectables/UserService.html":{}}}],["if(duplicateusername",{"_index":378,"title":{},"body":{"injectables/UserService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":234,"title":{},"body":{"injectables/ClientService.html":{},"injectables/UserService.html":{}}}],["inspired",{"_index":447,"title":{},"body":{"index.html":{}}}],["installation",{"_index":452,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":454,"title":{},"body":{"index.html":{}}}],["join",{"_index":481,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientModule.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":244,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":273,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":103,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":489,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":495,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":471,"title":{},"body":{"index.html":{}}}],["login",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login'})@apibadrequestresponse({description",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":432,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":470,"title":{},"body":{"index.html":{}}}],["mode",{"_index":460,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/modules/auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/modules/clients/client.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/modules/users/user.service",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/modules/users/users.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/user.service",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["more",{"_index":484,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":490,"title":{},"body":{"index.html":{}}}],["name",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":449,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":494,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":438,"title":{},"body":{"index.html":{}}}],["notacceptableexception",{"_index":364,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":453,"title":{},"body":{"index.html":{}}}],["number",{"_index":154,"title":{},"body":{"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["number(id",{"_index":332,"title":{},"body":{"controllers/UserController.html":{}}}],["open",{"_index":472,"title":{},"body":{"index.html":{}}}],["optional",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":499,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":401,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":189,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passhash",{"_index":368,"title":{},"body":{"injectables/UserService.html":{}}}],["passport",{"_index":268,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":281,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["password).digest('hex",{"_index":369,"title":{},"body":{"injectables/UserService.html":{}}}],["payload",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["payload.password",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":150,"title":{},"body":{"classes/Client.html":{}}}],["please",{"_index":482,"title":{},"body":{"index.html":{}}}],["post",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["post('/')@apibody({type",{"_index":171,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["post('/login",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login')@apiokresponse({description",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":155,"title":{},"body":{"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{}}}],["primasaver2020",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["private",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["production",{"_index":462,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":437,"title":{},"body":{"index.html":{}}}],["project",{"_index":473,"title":{},"body":{"index.html":{}}}],["promise",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":146,"title":{},"body":{"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":190,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["put('/:id",{"_index":211,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["put('/:id')@apiparam({name",{"_index":187,"title":{},"body":{"controllers/ClientController.html":{}}}],["read",{"_index":483,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":377,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":225,"title":{},"body":{"injectables/ClientService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":457,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":442,"title":{},"body":{"index.html":{}}}],["secret",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":443,"title":{},"body":{"index.html":{}}}],["side",{"_index":444,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":476,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/__utils/jwt",{"_index":245,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/__utils/jwt.strategy",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/__utils/jwt.strategy.ts",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/__utils/jwt.strategy.ts:17",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/__utils/jwt.strategy.ts:7",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/modules/auth/auth.controller.ts",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/modules/auth/auth.controller.ts:13",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/modules/auth/auth.module.ts",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/modules/auth/auth.service.ts",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/modules/auth/auth.service.ts:13",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/modules/auth/auth.service.ts:21",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/modules/auth/auth.service.ts:7",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/modules/clients/client.controller.ts",{"_index":163,"title":{},"body":{"controllers/ClientController.html":{},"coverage.html":{}}}],["src/modules/modules/clients/client.controller.ts:17",{"_index":182,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/modules/clients/client.controller.ts:27",{"_index":176,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/modules/clients/client.controller.ts:37",{"_index":185,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/modules/clients/client.controller.ts:47",{"_index":188,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/modules/clients/client.controller.ts:57",{"_index":180,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/modules/clients/client.entity.ts",{"_index":145,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/modules/modules/clients/client.entity.ts:11",{"_index":153,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/modules/clients/client.entity.ts:15",{"_index":152,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/modules/clients/client.entity.ts:19",{"_index":157,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/modules/clients/client.entity.ts:7",{"_index":156,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/modules/clients/client.module.ts",{"_index":219,"title":{},"body":{"modules/ClientModule.html":{}}}],["src/modules/modules/clients/client.service.ts",{"_index":222,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/modules/modules/clients/client.service.ts:11",{"_index":231,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/modules/clients/client.service.ts:15",{"_index":229,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/modules/clients/client.service.ts:19",{"_index":232,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/modules/clients/client.service.ts:23",{"_index":233,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/modules/clients/client.service.ts:27",{"_index":230,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/modules/clients/client.service.ts:7",{"_index":226,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/modules/users/user.controller.ts",{"_index":298,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/modules/users/user.controller.ts:18",{"_index":311,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/modules/users/user.controller.ts:24",{"_index":304,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/modules/users/user.controller.ts:34",{"_index":313,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/modules/users/user.controller.ts:44",{"_index":309,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/modules/users/user.controller.ts:55",{"_index":318,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/modules/users/user.entity",{"_index":339,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/modules/users/user.entity.ts",{"_index":279,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"coverage.html":{}}}],["src/modules/modules/users/user.entity.ts:12",{"_index":286,"title":{},"body":{"classes/User.html":{}}}],["src/modules/modules/users/user.entity.ts:16",{"_index":288,"title":{},"body":{"classes/User.html":{}}}],["src/modules/modules/users/user.entity.ts:19",{"_index":290,"title":{},"body":{"classes/User.html":{}}}],["src/modules/modules/users/user.entity.ts:24",{"_index":287,"title":{},"body":{"classes/User.html":{}}}],["src/modules/modules/users/user.entity.ts:28",{"_index":284,"title":{},"body":{"classes/User.html":{}}}],["src/modules/modules/users/user.entity.ts:33",{"_index":334,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/modules/modules/users/user.entity.ts:36",{"_index":335,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/modules/modules/users/user.entity.ts:8",{"_index":285,"title":{},"body":{"classes/User.html":{}}}],["src/modules/modules/users/user.service.ts",{"_index":341,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/modules/users/user.service.ts:13",{"_index":353,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:17",{"_index":355,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:25",{"_index":359,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:33",{"_index":357,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:43",{"_index":352,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:47",{"_index":349,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:65",{"_index":361,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:69",{"_index":350,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/user.service.ts:9",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/modules/users/users.module.ts",{"_index":338,"title":{},"body":{"modules/UserModule.html":{}}}],["start",{"_index":458,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":461,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":463,"title":{},"body":{"index.html":{}}}],["started",{"_index":436,"title":{"index.html":{}},"body":{}}],["starter",{"_index":451,"title":{},"body":{"index.html":{}}}],["statements",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":486,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Client.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["successful",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["sucess",{"_index":173,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":272,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":258,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":477,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":497,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":379,"title":{},"body":{"injectables/UserService.html":{}}}],["test",{"_index":466,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":469,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":468,"title":{},"body":{"index.html":{}}}],["tests",{"_index":465,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":475,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.clientrepo.delete(id",{"_index":243,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.find",{"_index":238,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.findone(id",{"_index":240,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.save(client",{"_index":239,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.update(id",{"_index":242,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientservice.create(client",{"_index":207,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.delete(id",{"_index":216,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.getall",{"_index":205,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.getbyid(id",{"_index":210,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.update(id",{"_index":213,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.getbyemail(user.email",{"_index":372,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getbyusername(user.username",{"_index":374,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.sign({id",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.password",{"_index":294,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["this.password).digest('hex",{"_index":296,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["this.userrepo.create(user",{"_index":381,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.delete(id",{"_index":383,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.find",{"_index":366,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findone",{"_index":367,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findone(id",{"_index":370,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.save",{"_index":380,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.update(user.id",{"_index":382,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(user",{"_index":325,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(id",{"_index":330,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(id",{"_index":327,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getall",{"_index":323,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyemailandpass(payload.email",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(user",{"_index":333,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UserService.html":{}}}],["timediff",{"_index":278,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["touch",{"_index":487,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":493,"title":{},"body":{"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typeorm",{"_index":160,"title":{},"body":{"classes/Client.html":{},"injectables/ClientService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([client",{"_index":221,"title":{},"body":{"modules/ClientModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":450,"title":{},"body":{"index.html":{}}}],["ui",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":175,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('wrong",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["unit",{"_index":464,"title":{},"body":{"index.html":{}}}],["update",{"_index":169,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":212,"title":{},"body":{"controllers/ClientController.html":{}}}],["update(id",{"_index":186,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["update(id:number",{"_index":241,"title":{},"body":{"injectables/ClientService.html":{}}}],["update(user",{"_index":360,"title":{},"body":{"injectables/UserService.html":{}}}],["updateresult",{"_index":235,"title":{},"body":{"injectables/ClientService.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":302,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(@param('id",{"_index":331,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(id",{"_index":314,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards",{"_index":191,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":203,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":340,"title":{},"body":{"modules/UserModule.html":{}}}],["user.entity",{"_index":320,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user.service",{"_index":319,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":297,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userlogin",{"_index":71,"title":{"classes/UserLogin.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"coverage.html":{}}}],["usermodule",{"_index":43,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":282,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["userrepo",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["users/user.entity",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["users/user.service",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["userservice",{"_index":44,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@useguards(undefined)@apiokresponse({description",{"_index":317,"title":{},"body":{"controllers/UserController.html":{}}}],["validate",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":363,"title":{},"body":{"injectables/UserService.html":{}}}],["void",{"_index":291,"title":{},"body":{"classes/User.html":{}}}],["watch",{"_index":459,"title":{},"body":{"index.html":{}}}],["website",{"_index":491,"title":{},"body":{"index.html":{}}}],["world",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["you'd",{"_index":480,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ClientModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UserService } from './modules/modules/users/user.service';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './modules/modules/users/users.module';\nimport { AuthModule } from './modules/modules/auth/auth.module';\nimport { ClientModule } from './modules/modules/clients/client.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(),\n    UserModule,\n    AuthModule,\n    ClientModule\n  ],\n  controllers: [AppController],\n  providers: [\n        UserService, AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: UserLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')@ApiOkResponse({description: 'Successful Login'})@ApiBadRequestResponse({description: 'Wrong login credential'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UserLogin } from '../users/user.entity';\nimport { ApiOkResponse, ApiBadRequestResponse } from '@nestjs/swagger';\n\n@Controller('api/auth')\nexport class AuthController {\n    constructor(private authService: AuthService) {}\n\n    @Post('/login')\n    @ApiOkResponse({ description: 'Successful Login' })\n    @ApiBadRequestResponse({ description: 'Wrong login credential' })\n    async login(@Body() payload: UserLogin): Promise {\n        const user = await this.authService.validateUser(payload);\n        return await this.authService.createToken(user);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { User } from '../users/user.entity';\nimport { UserService } from '../users/user.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from 'src/modules/__utils/jwt.strategy';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([User]),\n        JwtModule.register({\n            secret: \"primasaver2020\",\n        })\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, UserService, JwtStrategy],\n    exports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n    ],\n})\nexport class AuthModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/modules/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: UserLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { UserService } from \"../users/user.service\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { User, UserLogin } from \"../users/user.entity\";\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly userService: UserService,\n        private readonly jwtService: JwtService,\n    ) {}\n\n    async createToken(user: User) {\n        return {\n          expiresIn: 3660,\n          accessToken: this.jwtService.sign({id: user.id}),\n          user: user\n        };\n      }\n    \n    async validateUser(payload: UserLogin): Promise {\n      const user = await this.userService.getByEmailAndPass(payload.email, payload.password);\n      if (!user) {\n        throw new UnauthorizedException('Wrong login combination!');\n      }\n      return user;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/clients/client.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                company\n                            \n                            \n                                id\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/clients/client.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/clients/client.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/clients/client.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/clients/client.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Entity, Column } from \"typeorm\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\n@Entity()\nexport class Client {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    company: string;\n\n    @ApiProperty()\n    @Column()\n    address: string;\n\n    @ApiProperty()\n    @Column()\n    phone: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientController.html":{"url":"controllers/ClientController.html","title":"controller - ClientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/clients/client.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/client\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createClient\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createClient(client: Client)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiBody({type: Client})@ApiBearerAuth()@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/clients/client.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiParam({name: 'id'})@ApiBearerAuth()@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/clients/client.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiBearerAuth()@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/clients/client.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiParam({name: 'id'})@ApiBearerAuth()@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/clients/client.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, client: Client)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')@ApiParam({name: 'id'})@ApiBearerAuth()@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/clients/client.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Put, Delete, UseGuards } from \"@nestjs/common\";\nimport { ClientService } from \"./client.service\";\nimport { Client } from \"./client.entity\";\nimport { ApiTags, ApiBearerAuth, ApiOkResponse, ApiUnauthorizedResponse, ApiParam, ApiBody } from \"@nestjs/swagger\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Controller('api/client')\n@ApiTags('Clients')\nexport class ClientController {\n    constructor (private clientService: ClientService) {}\n\n    @Get('/')\n    @ApiBearerAuth()\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getAll(): Promise {\n        return await this.clientService.getAll();\n    }\n\n    @Post('/')\n    @ApiBody({ type: Client })\n    @ApiBearerAuth()\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async createClient(@Body() client: Client): Promise {\n        return await this.clientService.create(client);\n    }\n\n    @Get('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBearerAuth()\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getById(@Param('id') id: number): Promise {\n        return await this.clientService.getById(id);\n    }\n\n    @Put('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBearerAuth()\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async update(@Param('id') id: number, @Body() client: Client): Promise {\n        return await this.clientService.update(id, client);\n    }\n\n    @Delete('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBearerAuth()\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async delete(@Param('id') id: number): Promise {\n        return await this.clientService.delete(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\n\nClientService\n\nClientService\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/modules/clients/client.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientController } from './client.controller';\nimport { ClientService } from './client.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Client } from './client.entity';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([Client])\n    ],\n    controllers: [ClientController],\n    providers: [ClientService],\n    exports: [TypeOrmModule],\n})\nexport class ClientModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/clients/client.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/modules/clients/client.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(client: Client)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/clients/client.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/clients/client.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/clients/client.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/clients/client.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, client: Client)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/clients/client.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Client } from \"./client.entity\";\nimport { Repository, UpdateResult, DeleteResult } from \"typeorm\";\n\n@Injectable()\nexport class ClientService {\n\n    constructor(@InjectRepository(Client) private clientRepo: Repository) {}\n\n    async getAll(): Promise {\n        return await this.clientRepo.find();\n    }\n\n    async create(client: Client): Promise {\n        return await this.clientRepo.save(client);\n    }\n\n    async getById(id: number): Promise {\n        return await this.clientRepo.findOne(id);\n    }\n\n    async update(id:number, client: Client): Promise {\n        return await this.clientRepo.update(id, client);\n    }\n\n    async delete(id: number): Promise {\n        return await this.clientRepo.delete(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/__utils/jwt-guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/jwt-guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/jwt-guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n  \n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    canActivate(context: ExecutionContext) {\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info) {\n        if (err || !user) {\n            throw err || new UnauthorizedException();\n        }\n        return user;\n    }\n}\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/__utils/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/__utils/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: JwtPayload, done)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy, JwtPayload } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserService } from '../modules/users/user.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly userService: UserService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'primasaver2020',\n    });\n  }\n\n  async validate({ iat, exp, id }: JwtPayload, done) {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/users/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \nhashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/users/user.entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, BeforeInsert } from 'typeorm';\nimport * as crypto from 'crypto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity('users')\nexport class User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    name: string;\n\n    @ApiProperty()\n    @Column()\n    username: string;\n\n    @BeforeInsert()\n    hashPassword() {\n        this.password = crypto.createHmac('sha256', this.password).digest('hex');\n      }\n    @ApiProperty()\n    @Column()\n    password: string;\n\n    @ApiProperty()\n    @Column()\n    email: string;\n}\n\nexport class UserLogin {\n    @ApiProperty()\n    email: string;\n\n    @ApiProperty()\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiBody({type: User})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/users/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Delete('/:id')@ApiParam({name: 'id'})@UseGuards(undefined)@ApiOkResponse({description: 'Deleted'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/users/user.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/')@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/users/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/:id')@ApiParam({name: 'id'})@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/users/user.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Put('/:id')@ApiParam({name: 'id'})@ApiBody({type: User})@UseGuards(undefined)@ApiOkResponse({description: 'Deleted'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/modules/users/user.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, UseGuards, Delete, Put } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { User } from './user.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBody, ApiTags, ApiBearerAuth, ApiOkResponse, ApiUnauthorizedResponse, ApiParam } from '@nestjs/swagger';\n\n@Controller('api/user')\n@ApiTags('User')\nexport class UserController {\n    \n    constructor(private userService: UserService){}\n\n    @ApiBearerAuth()\n    @Get('/')\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getAll(): Promise {\n        return await this.userService.getAll();\n    }\n\n    @Post('/')\n    @ApiBody({ type: User })\n    async createUser(@Body() user: User): Promise {\n        return await this.userService.createUser(user);\n    }\n\n    @ApiBearerAuth()\n    @Get('/:id')\n    @ApiParam({ name: 'id' })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getById(@Param() id): Promise {\n        return await this.userService.findById(id)\n    }\n\n    @ApiBearerAuth()\n    @Delete('/:id')\n    @ApiParam({ name: 'id' })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Deleted'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async deleteUser(@Param() id): Promise {\n        return await this.userService.deleteUser(id)\n    }\n\n    @ApiBearerAuth()\n    @Put('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBody({ type: User })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Deleted'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async updateUser(@Param('id') id, @Body() user: User): Promise {\n        user.id = Number(id);\n        return this.userService.update(user);\n    }  \n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLogin.html":{"url":"classes/UserLogin.html","title":"class - UserLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/users/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.entity.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, BeforeInsert } from 'typeorm';\nimport * as crypto from 'crypto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity('users')\nexport class User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    name: string;\n\n    @ApiProperty()\n    @Column()\n    username: string;\n\n    @BeforeInsert()\n    hashPassword() {\n        this.password = crypto.createHmac('sha256', this.password).digest('hex');\n      }\n    @ApiProperty()\n    @Column()\n    password: string;\n\n    @ApiProperty()\n    @Column()\n    email: string;\n}\n\nexport class UserLogin {\n    @ApiProperty()\n    email: string;\n\n    @ApiProperty()\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/modules/modules/users/user.entity';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([User])\n    ],\n    controllers: [UserController],\n    providers: [UserService],\n    exports: [TypeOrmModule],\n})\nexport class UserModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/modules/users/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getByEmailAndPass\n                            \n                            \n                                    Async\n                                getByUsername\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/modules/users/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmailAndPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmailAndPass(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/modules/users/user.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/modules/users/user.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotAcceptableException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './user.entity';\nimport { Repository, UpdateResult, DeleteResult } from 'typeorm';\nimport * as crypto from 'crypto';\n\n@Injectable()\nexport class UserService {\n    private readonly user: User[] = [];\n\n    constructor(@InjectRepository(User) private userRepo: Repository) {}\n\n    async getAll() {\n        return await this.userRepo.find();\n    }\n\n    async getByEmail(email: string) {\n        return await this.userRepo.findOne({\n            where: {\n                email: email\n            }\n        });\n    }\n\n    async getByUsername(username: string) {\n        return await this.userRepo.findOne({\n            where: {\n                username: username\n            }\n        });\n    }\n\n    async getByEmailAndPass(email: string, password: string) {\n        const passHash = crypto.createHmac('sha256', password).digest('hex');\n        return await this.userRepo.findOne({\n            where: {\n                email: email,\n                password: passHash\n            }\n        })\n      }\n\n    async findById(id: number) {\n        return await this.userRepo.findOne(id)\n    }\n\n    async createUser(user: User) {\n        const duplicateEmail = await this.getByEmail(user.email);\n        const duplicateUsername = await this.getByUsername(user.username);\n\n        if(duplicateEmail) {\n            throw new NotAcceptableException(\n                'Email already registered',\n            )\n        } else if(duplicateUsername) {\n            throw new NotAcceptableException(\n                'Username already taken',\n            )\n        }\n        return await this.userRepo.save(\n            this.userRepo.create(user),\n          );\n    }\n\n    async update(user: User): Promise {\n        return await this.userRepo.update(user.id, user);\n    }\n\n    async deleteUser(id: number): Promise {\n        return await this.userRepo.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/__utils/jwt-guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/__utils/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/modules/clients/client.controller.ts\n            \n            controller\n            ClientController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/modules/clients/client.entity.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/modules/clients/client.service.ts\n            \n            injectable\n            ClientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/modules/users/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/modules/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/modules/users/user.entity.ts\n            \n            class\n            UserLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/modules/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^6.10.14\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^6.10.14\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^6.10.14\n        \n            @nestjs/swagger : ^4.5.3\n        \n            @nestjs/typeorm : ^7.0.0\n        \n            class-transformer : ^0.2.3\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.24\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
