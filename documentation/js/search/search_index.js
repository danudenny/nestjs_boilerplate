var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,1.662,1,2.778]],["body/guards/AdminGuard.html",[1,4.364,2,4.482,3,0.277,4,0.16,5,0.16,6,3.843,7,0.391,8,1.327,9,5.682,10,4.901,11,4.901,12,5.682,13,0.625,14,4.482,15,1.469,16,0.02,17,1.135,18,0.49,19,1.469,20,3.843,21,1.327,22,5.715,23,4.901,24,2.795,25,4.482,26,3.843,27,0.214,28,1.135,29,4.482,30,4.482,31,0.597,32,0.187,33,0.159,34,4.482,35,1.545,36,4.482,37,4.482,38,4.482,39,3.108,40,2.857,41,4.482,42,4.482,43,4.482,44,4.482,45,0.012,46,0.015,47,0.012]],["title/modules/AppModule.html",[48,0.935,49,2.522]],["body/modules/AppModule.html",[3,0.148,4,0.127,5,0.127,16,0.02,27,0.342,31,0.473,32,0.148,33,0.126,45,0.009,46,0.013,47,0.009,48,1.439,49,5.202,50,1.372,51,1.372,52,1.531,53,1.531,54,1.372,55,2.417,56,1.531,57,3.041,58,3.041,59,3.041,60,4.175,61,4.175,62,4.175,63,4.175,64,4.175,65,4.175,66,4.175,67,4.175,68,4.175,69,4.175,70,2.112,71,1.531,72,1.531,73,3.547,74,2.236,75,3.547,76,3.547,77,1.621,78,1.008,79,3.547,80,3.547,81,3.547,82,3.547,83,3.547,84,3.547,85,3.547,86,3.547,87,3.547,88,0.959]],["title/controllers/AuthController.html",[89,1.034,90,2.522]],["body/controllers/AuthController.html",[3,0.179,4,0.154,5,0.154,7,0.375,8,1.291,13,0.47,15,1.104,16,0.02,17,0.854,18,0.47,19,1.104,21,0.998,24,1.755,27,0.312,31,0.573,32,0.179,33,0.153,35,1.162,45,0.011,46,0.014,47,0.011,88,1.162,89,1.222,90,3.857,91,3.685,92,2.084,93,4.298,94,1.753,95,5.793,96,4.298,97,3.854,98,1.05,99,4.298,100,5.563,101,4.298,102,5.563,103,5.563,104,4.298,105,4.77,106,1.663,107,2.367,108,2.367,109,3.644,110,3.685,111,3.281,112,2.697,113,5.563,114,2.084,115,1.351,116,4.298,117,4.298,118,4.298,119,2.217,120,4.298,121,2.697,122,4.298,123,2.367,124,1.663,125,4.298,126,4.298]],["title/modules/AuthModule.html",[48,0.935,60,2.319]],["body/modules/AuthModule.html",[3,0.17,4,0.145,5,0.145,16,0.02,24,1.659,27,0.341,31,0.541,32,0.17,33,0.145,45,0.011,46,0.014,47,0.011,48,1.543,50,1.572,51,1.572,52,1.754,53,1.754,54,1.572,55,2.591,56,2.314,60,4.593,70,2.314,71,1.754,72,1.754,74,1.857,77,1.857,78,1.155,88,1.449,90,4.162,109,4.027,110,3.484,111,3.102,127,3.484,128,3.484,129,4.344,130,3.305,131,4.063,132,4.063,133,3.102,134,4.063,135,3.484,136,2.238,137,1.572,138,4.063,139,2.954,140,2.954,141,2.6,142,3.484,143,4.063,144,4.063,145,3.484]],["title/injectables/AuthService.html",[28,0.723,109,2.149]],["body/injectables/AuthService.html",[3,0.163,4,0.14,5,0.14,7,0.34,8,1.212,13,0.643,15,1.512,16,0.02,17,1.168,18,0.643,19,1.512,21,1.212,24,2.921,27,0.3,28,1.037,31,0.52,32,0.163,33,0.139,35,1.411,39,2.705,40,2.486,45,0.01,46,0.014,47,0.01,94,1.915,95,3.345,97,3.711,105,3.345,106,1.56,109,3.084,111,2.978,123,2.149,124,1.166,130,3.267,133,2.978,135,3.345,146,1.509,147,3.345,148,5.219,149,5.219,150,2.253,151,3.345,152,6.88,153,3.901,154,5.219,155,3.901,156,5.219,157,3.901,158,2.978,159,2.385,160,3.327,161,3.901,162,3.901,163,3.901,164,3.901,165,3.345,166,3.901,167,3.901,168,3.901,169,3.901]],["title/classes/Billing.html",[33,0.129,170,2.004]],["body/classes/Billing.html",[3,0.163,4,0.14,5,0.14,7,0.34,13,0.752,16,0.02,18,0.752,27,0.281,32,0.163,33,0.139,45,0.01,46,0.014,47,0.01,98,1.681,115,1.227,170,2.875,171,1.359,172,3.345,173,1.641,174,5.882,175,5.882,176,2.565,177,4.491,178,4.491,179,1.168,180,4.491,181,2.188,182,3.475,183,3.901,184,3.901,185,2.486,186,2.486,187,3.901,188,1.614,189,3.901,190,3.711,191,4.491,192,3.901,193,2.275,194,3.901,195,4.491,196,3.901,197,2.019,198,2.43,199,3.327,200,2.875,201,0.775,202,2.013,203,3.46,204,3.901]],["title/controllers/BillingController.html",[89,1.034,205,2.522]],["body/controllers/BillingController.html",[0,1.226,3,0.112,4,0.096,5,0.096,7,0.496,8,0.929,13,0.621,15,1.365,16,0.02,17,1.226,18,0.58,19,1.365,21,1.319,27,0.285,31,0.357,32,0.112,33,0.095,35,1.535,45,0.007,46,0.01,47,0.007,88,0.725,89,0.763,92,1.301,94,1.984,98,1.388,106,1.974,107,2.205,108,2.205,112,2.889,114,1.301,115,0.844,119,1.384,121,3.202,124,1.698,170,3.898,179,1.288,201,0.533,205,2.776,206,2.3,207,2.292,208,2.776,209,2.776,210,2.067,211,1.226,212,2.3,213,3.433,214,3.356,215,5.042,216,1.86,217,3.407,218,2.683,219,2.048,220,2.065,221,2.683,222,1.86,223,2.3,224,2.683,225,4.003,226,2.048,227,4.003,228,1.829,229,2.683,230,2.683,231,1.226,232,2.3,233,1.585,234,1.86,235,2.683,236,1.384,237,1.585,238,1.585,239,3.185,240,3.074,241,3.137,242,2.829,243,2.821,244,1.384,245,2.829,246,2.3,247,2.048,248,1.478,249,1.301,250,2.683,251,2.683,252,3.282,253,2.683,254,1.585,255,1.86,256,2.683,257,2.683,258,1.585,259,1.71,260,2.683,261,1.585,262,1.71,263,2.683]],["title/modules/BillingModule.html",[48,0.935,61,2.319]],["body/modules/BillingModule.html",[3,0.185,4,0.159,5,0.159,16,0.02,27,0.339,31,0.592,32,0.185,33,0.158,45,0.012,46,0.015,47,0.012,48,1.611,50,1.719,51,1.719,52,1.918,53,1.918,54,1.719,55,2.705,56,1.918,61,4.451,70,2.453,71,1.918,72,1.918,74,2.031,77,2.031,78,1.263,88,1.536,136,2.448,137,1.719,139,2.448,140,2.448,141,2.155,170,2.448,176,2.086,202,2.293,205,4.346,245,4.126,246,3.811,247,3.393,264,3.811,265,3.811,266,4.444,267,4.444,268,4.444]],["title/injectables/BillingService.html",[28,0.723,245,2.149]],["body/injectables/BillingService.html",[3,0.145,4,0.124,5,0.124,7,0.303,8,1.118,13,0.711,15,1.615,16,0.02,17,1.248,18,0.687,19,1.615,21,1.459,27,0.286,28,0.957,31,0.462,32,0.145,33,0.123,35,1.698,45,0.009,46,0.013,47,0.009,78,0.986,94,2.066,106,2.091,124,1.878,146,1.342,150,1.497,159,1.585,170,3.926,179,1.099,188,1.775,201,0.689,207,2.079,210,2.079,211,2.201,228,2.201,231,2.201,245,2.846,247,2.648,248,1.911,249,1.682,269,2.974,270,3.34,271,2.733,272,3.468,273,2.9,274,3.468,275,4.817,276,4.817,277,3.468,278,3.468,279,3.34,280,3.468,281,3.468,282,3.468,283,1.789,284,3.468,285,3.468,286,3.468,287,3.468,288,3.468,289,3.468]],["title/classes/Client.html",[33,0.129,176,1.335]],["body/classes/Client.html",[3,0.138,4,0.118,5,0.118,7,0.289,13,0.735,16,0.02,18,0.735,27,0.306,32,0.138,33,0.118,45,0.009,46,0.012,47,0.009,98,1.642,115,1.04,170,3.702,171,1.152,173,1.465,176,1.71,179,1.072,181,2.231,182,3.187,185,2.97,186,2.97,188,1.197,193,2.087,197,1.802,198,2.266,199,3.439,200,2.972,201,0.657,203,3.227,290,2.835,291,5.395,292,5.395,293,3.741,294,4.626,295,5.395,296,3.702,297,3.307,298,3.307,299,3.307,300,2.927,301,3.995,302,3.995,303,5.022,304,5.763,305,5.022,306,3.307,307,3.307,308,2.927,309,3.307,310,3.307,311,3.307,312,4.626,313,2.293,314,2.525,315,3.307,316,3.307,317,3.307,318,3.307,319,3.307,320,3.307]],["title/controllers/ClientController.html",[89,1.034,321,2.522]],["body/controllers/ClientController.html",[0,1.263,3,0.115,4,0.099,5,0.099,7,0.241,8,0.95,13,0.629,15,1.385,16,0.02,17,1.197,18,0.589,19,1.385,21,1.335,27,0.288,31,0.368,32,0.115,33,0.098,35,1.555,45,0.007,46,0.011,47,0.007,88,0.747,89,0.785,92,1.34,94,1.994,98,1.405,106,1.988,107,2.254,108,1.522,112,1.34,114,1.34,115,0.869,121,2.789,124,1.719,137,1.069,150,1.193,159,1.263,176,2.636,179,1.272,207,2.483,210,2.325,211,1.263,217,3.432,220,2.111,228,2.462,231,1.263,233,1.633,236,1.426,237,1.633,238,1.633,239,3.216,240,3.108,241,2.879,242,2.879,243,1.87,244,1.426,252,1.522,254,1.633,258,1.633,259,1.761,261,1.633,262,1.761,271,2.462,321,2.838,322,2.369,323,2.763,324,3.125,325,2.369,326,2.11,327,4.092,328,4.24,329,4.874,330,2.763,331,1.916,332,3.509,333,2.763,334,2.369,335,2.763,336,2.11,337,1.916,338,2.763,339,1.916,340,2.763,341,2.879,342,2.369,343,2.11,344,1.916,345,2.763,346,2.763,347,4.932,348,3.666,349,2.763,350,2.369,351,2.763,352,2.763,353,2.763,354,2.763,355,2.369,356,2.763,357,2.763]],["title/modules/ClientModule.html",[48,0.935,62,2.319]],["body/modules/ClientModule.html",[3,0.186,4,0.16,5,0.16,16,0.02,27,0.34,31,0.594,32,0.186,33,0.159,45,0.012,46,0.015,47,0.012,48,1.613,50,1.724,51,1.724,52,1.924,53,1.924,54,1.724,55,2.708,56,2.458,62,4.454,70,2.458,71,1.924,72,1.924,74,2.037,77,2.602,78,1.267,88,1.539,136,2.455,137,1.724,139,2.455,140,2.455,141,2.161,176,1.635,300,2.602,313,3.09,321,4.351,341,4.129,342,3.821,343,3.403,358,3.821,359,3.821,360,4.457,361,4.457,362,4.457]],["title/injectables/ClientService.html",[28,0.723,341,2.149]],["body/injectables/ClientService.html",[3,0.129,4,0.111,5,0.111,7,0.27,8,1.031,13,0.722,15,1.546,16,0.02,17,1.195,18,0.685,19,1.546,21,1.455,27,0.288,28,0.882,31,0.412,32,0.129,33,0.11,35,1.693,45,0.008,46,0.012,47,0.008,78,0.879,94,2.063,98,0.755,106,2.087,124,1.873,146,1.196,150,1.917,160,3.313,173,1.396,176,2.562,179,1.032,188,1.697,201,0.882,207,1.917,210,1.917,211,2.029,228,2.029,231,1.413,271,2.596,273,2.918,283,1.595,293,3.079,294,3.808,324,3.391,325,3.808,336,3.391,341,2.624,343,2.36,363,2.65,364,3.391,365,5.198,366,5.198,367,5.681,368,5.681,369,3.091,370,3.091,371,3.091,372,3.091,373,3.091,374,3.091,375,3.091,376,3.091,377,4.441,378,3.091,379,2.65,380,3.091,381,4.441,382,3.091,383,3.091,384,3.808,385,3.091,386,3.091,387,3.091]],["title/injectables/ClusterService.html",[28,0.723,69,2.319]],["body/injectables/ClusterService.html",[3,0.192,4,0.165,5,0.165,7,0.401,8,1.349,13,0.503,15,1.182,16,0.02,17,0.914,18,0.503,19,1.182,21,1.068,27,0.304,28,1.154,31,0.613,32,0.192,33,0.164,45,0.012,46,0.015,47,0.012,69,3.704,123,2.535,146,1.78,388,3.513,389,5.461,390,5.811,391,5.811,392,5.461,393,4.601,394,5.811,395,4.983,396,5.811,397,5.811,398,3.513,399,3.945,400,4.601,401,4.601,402,3.945,403,4.601,404,4.601,405,2.933,406,4.601,407,4.601,408,4.601,409,4.601,410,4.601]],["title/classes/CurrentMonthDashboard.html",[33,0.129,411,2.778]],["body/classes/CurrentMonthDashboard.html",[3,0.157,4,0.134,5,0.134,7,0.327,13,0.745,16,0.02,18,0.783,27,0.179,32,0.157,33,0.133,45,0.01,46,0.013,47,0.01,98,1.664,171,1.307,173,1.598,179,1.145,181,2.414,188,1.712,193,2.231,197,1.451,198,2.717,201,0.745,405,3.94,411,3.882,412,3.216,413,4.403,414,5.766,415,5.766,416,5.766,417,5.766,418,5.766,419,3.751,420,3.751,421,3.94,422,4.72,423,3.94,424,4.72,425,3.94,426,4.72,427,3.94,428,3.751,429,5.3,430,3.751,431,3.751,432,3.751,433,3.751,434,3.751]],["title/classes/Device.html",[33,0.129,300,1.662]],["body/classes/Device.html",[3,0.15,4,0.129,5,0.129,7,0.314,13,0.75,16,0.02,17,0.983,18,0.75,27,0.291,32,0.15,33,0.128,45,0.009,46,0.013,47,0.009,98,1.677,115,1.133,171,1.255,173,1.555,176,2.519,177,4.864,179,1.122,181,1.723,182,3.764,188,1.811,193,2.185,197,1.914,198,2.546,200,3.111,201,0.716,202,1.86,203,3.625,300,2.911,308,3.137,314,2.752,435,3.09,436,5.648,437,5.463,438,5.648,439,3.777,440,3.777,441,3.604,442,3.604,443,3.604,444,3.604,445,3.604,446,3.604,447,3.604,448,3.604,449,4.313,450,3.604,451,3.09]],["title/controllers/DeviceController.html",[89,1.034,452,2.522]],["body/controllers/DeviceController.html",[0,1.241,3,0.113,4,0.097,5,0.097,7,0.498,8,0.938,13,0.624,15,1.373,16,0.02,17,1.231,18,0.584,19,1.373,21,1.326,27,0.296,31,0.362,32,0.113,33,0.097,35,1.543,45,0.007,46,0.01,47,0.007,88,0.734,89,0.772,92,1.317,94,1.989,98,1.395,106,1.98,107,2.225,108,1.496,112,1.317,114,1.317,115,0.854,119,1.401,121,2.769,124,1.707,137,1.05,179,1.265,201,0.539,207,2.306,208,2.801,209,2.801,210,2.082,211,1.241,214,3.374,216,1.883,217,3.417,220,2.084,222,1.883,228,1.241,231,1.241,233,1.604,234,1.883,236,1.401,237,1.604,238,1.604,239,3.198,240,3.088,241,3.156,242,2.85,243,2.833,244,1.401,249,1.317,252,3.297,254,1.604,255,1.883,258,1.604,259,1.731,261,1.604,262,1.731,300,3.22,326,2.073,328,4.222,331,1.883,337,1.883,339,1.883,344,1.883,348,3.64,355,2.328,452,2.801,453,2.328,454,2.715,455,3.464,456,2.715,457,2.328,458,2.715,459,2.715,460,2.715,461,4.039,462,2.073,463,2.715,464,2.715,465,2.85,466,2.328,467,2.073,468,2.715,469,2.715,470,2.715,471,2.715,472,2.073,473,2.715,474,2.715,475,2.715]],["title/modules/DeviceModule.html",[48,0.935,63,2.319]],["body/modules/DeviceModule.html",[3,0.187,4,0.16,5,0.16,16,0.02,27,0.34,31,0.595,32,0.187,33,0.159,45,0.012,46,0.015,47,0.012,48,1.615,50,1.729,51,1.729,52,1.929,53,1.929,54,1.729,55,2.712,56,1.929,63,4.458,70,2.462,71,1.929,72,1.929,74,2.042,77,2.042,78,1.27,88,1.542,176,2.093,202,2.306,300,2.042,308,2.607,314,3.413,452,4.357,465,4.132,466,3.832,467,3.413,476,3.832,477,3.832,478,4.47,479,4.47,480,4.47]],["title/injectables/DeviceService.html",[28,0.723,465,2.149]],["body/injectables/DeviceService.html",[3,0.137,4,0.118,5,0.118,7,0.287,8,1.077,13,0.718,15,1.583,16,0.02,17,1.224,18,0.673,19,1.583,21,1.484,27,0.279,28,0.921,31,0.438,32,0.137,33,0.117,35,1.728,45,0.009,46,0.012,47,0.009,78,0.934,94,2.079,106,2.111,124,1.911,146,1.271,150,2.002,159,1.502,179,1.068,188,1.753,201,0.653,207,2.002,210,2.002,211,2.12,228,2.12,231,2.12,249,1.593,270,3.217,271,2.669,273,2.832,279,3.217,283,1.695,300,3.253,465,2.741,467,2.509,481,2.818,482,5.841,483,3.286,484,3.286,485,4.639,486,4.639,487,3.286,488,3.286,489,3.286,490,3.286,491,3.286,492,3.286,493,3.286,494,4.639,495,3.286,496,3.286,497,3.286,498,3.286]],["title/classes/IoCtl.html",[33,0.129,499,2.004]],["body/classes/IoCtl.html",[3,0.068,4,0.059,5,0.059,7,0.143,13,0.762,16,0.02,18,0.803,27,0.078,32,0.113,33,0.096,45,0.004,46,0.007,47,0.004,98,1.702,171,0.57,173,0.853,179,0.689,181,1.988,188,1.885,190,2.384,193,1.343,197,1.049,198,2.66,201,0.325,413,2.65,421,4.475,423,4.641,425,4.641,499,1.912,500,1.25,501,2.976,502,2.976,503,2.976,504,2.976,505,2.976,506,2.976,507,2.976,508,2.976,509,2.976,510,2.976,511,2.976,512,2.976,513,2.976,514,2.976,515,2.976,516,2.976,517,2.976,518,2.976,519,2.976,520,2.976,521,2.976,522,2.976,523,2.976,524,2.976,525,2.976,526,2.976,527,1.638,528,1.638,529,1.638,530,6.242,531,5.048,532,6.242,533,1.638,534,1.638,535,1.638,536,1.638,537,1.638,538,1.638,539,1.638,540,1.638,541,3.46,542,1.638,543,1.638,544,1.638,545,1.638,546,1.638,547,1.638,548,1.638,549,1.638,550,1.638,551,1.638,552,1.638,553,1.638,554,1.638,555,1.638,556,1.638,557,1.638,558,1.638,559,1.638,560,0.967,561,1.135,562,1.044,563,1.044,564,1.25]],["title/controllers/IoCtlController.html",[89,1.034,565,2.522]],["body/controllers/IoCtlController.html",[0,1.581,3,0.144,4,0.124,5,0.124,7,0.548,8,1.117,13,0.526,15,0.889,16,0.02,17,1.098,18,0.686,19,0.889,21,1.117,27,0.311,31,0.461,32,0.144,33,0.123,35,1.3,45,0.009,46,0.012,47,0.009,88,0.935,89,0.984,92,1.678,94,1.847,98,1.175,106,1.786,112,1.678,114,2.332,115,1.088,119,1.785,121,3.152,124,1.438,188,1.236,214,2.842,215,4.562,217,3.083,220,2.482,236,1.785,239,3.083,240,2.852,243,2.73,252,3.045,348,3.066,499,2.65,531,3.335,560,3.266,562,4.002,563,4.002,565,3.335,566,2.967,567,3.461,568,3.461,569,3.461,570,3.461,571,3.808,572,3.461,573,5.975,574,5.975,575,3.461,576,3.461,577,3.461,578,4.124,579,3.461,580,3.266,581,2.967,582,3.461,583,5.528,584,2.642,585,2.967,586,3.461,587,3.461,588,3.461,589,4.124,590,3.461,591,4.74,592,3.461,593,3.461,594,3.461]],["title/modules/IoCtlModule.html",[48,0.935,64,2.319]],["body/modules/IoCtlModule.html",[3,0.201,4,0.173,5,0.173,16,0.019,27,0.334,31,0.643,32,0.201,33,0.172,45,0.013,46,0.016,47,0.013,48,1.673,50,1.868,51,1.868,52,2.084,53,2.084,54,1.868,55,2.81,56,2.084,64,4.546,70,2.585,71,2.084,72,2.084,74,2.206,77,2.206,78,1.372,88,1.619,499,2.66,565,4.515,580,4.213,581,4.14,584,3.687,595,4.14,596,4.14,597,4.828,598,4.828,599,4.828]],["title/injectables/IoctlService.html",[28,0.723,580,2.149]],["body/injectables/IoctlService.html",[3,0.167,4,0.144,5,0.144,7,0.35,8,1.234,13,0.652,15,1.366,16,0.02,17,1.056,18,0.581,19,1.366,21,1.234,27,0.316,28,1.056,31,0.534,32,0.167,33,0.143,35,1.437,45,0.01,46,0.014,47,0.01,78,1.14,94,1.93,106,1.898,123,3.286,124,1.783,146,1.552,150,1.731,159,1.833,160,2.557,201,0.797,271,2.902,273,3.08,283,2.069,499,3.286,560,2.37,561,2.781,562,2.557,563,2.557,564,4.06,571,4.048,578,3.439,580,3.141,584,3.063,585,3.439,589,4.559,591,4.559,600,3.439,601,5.317,602,4.011,603,4.011,604,4.011,605,5.317,606,4.011,607,4.011,608,4.011,609,3.439,610,4.011,611,4.011,612,5.317,613,4.011,614,4.011,615,4.011,616,4.011,617,4.011,618,4.011,619,4.011]],["title/injectables/JwtAuthGuard.html",[28,0.723,243,1.662]],["body/injectables/JwtAuthGuard.html",[3,0.276,4,0.16,5,0.16,7,0.39,8,1.324,9,4.892,10,4.892,11,4.892,12,5.676,13,0.624,15,1.466,16,0.02,17,1.133,18,0.489,19,1.466,20,3.832,21,1.324,23,4.892,24,2.793,26,5.388,27,0.273,28,1.133,31,0.595,32,0.187,33,0.159,35,1.542,39,3.099,40,2.849,45,0.012,46,0.015,47,0.012,137,1.729,146,1.729,158,4.356,243,2.607,244,3.242,344,3.099,364,3.413,620,3.832,621,4.47,622,4.47,623,4.47,624,4.47]],["title/injectables/JwtStrategy.html",[28,0.723,129,2.319]],["body/injectables/JwtStrategy.html",[3,0.18,4,0.154,5,0.154,7,0.376,8,1.294,13,0.609,15,1.432,16,0.02,17,1.107,18,0.609,19,1.432,21,1.001,27,0.312,28,1.107,31,0.574,32,0.18,33,0.153,45,0.011,46,0.014,47,0.011,94,1.755,123,2.374,129,3.552,130,3.359,137,1.667,141,2.09,145,3.695,146,1.667,150,2.405,151,3.695,158,3.29,159,1.969,160,2.747,179,0.856,364,3.29,625,3.695,626,6.176,627,4.309,628,4.309,629,6.53,630,6.176,631,4.309,632,4.309,633,4.309,634,3.695,635,4.309,636,4.309,637,4.309,638,4.309,639,4.309,640,4.309,641,4.309,642,5.573,643,5.573,644,5.573]],["title/classes/Mail.html",[33,0.129,645,2.149]],["body/classes/Mail.html",[3,0.152,4,0.13,5,0.13,7,0.317,13,0.772,16,0.02,18,0.791,27,0.238,32,0.152,33,0.129,45,0.009,46,0.013,47,0.009,98,1.725,115,1.144,171,1.267,173,1.565,178,4.334,179,1.127,180,4.334,181,2.535,182,3.992,188,1.279,190,3.606,191,4.334,193,2.196,195,4.334,197,1.926,198,2.662,201,0.723,203,3.79,645,2.941,646,3.119,647,5.675,648,3.936,649,5.675,650,5.675,651,5.675,652,3.936,653,3.638,654,3.638,655,3.638,656,3.638,657,3.638,658,3.638,659,3.638,660,3.638,661,3.638,662,3.638]],["title/controllers/MailController.html",[89,1.034,663,2.522]],["body/controllers/MailController.html",[0,1.228,3,0.112,4,0.096,5,0.096,7,0.496,8,0.931,13,0.621,15,1.366,16,0.02,17,1.227,18,0.581,19,1.366,21,1.32,27,0.285,31,0.358,32,0.112,33,0.096,35,1.537,45,0.007,46,0.01,47,0.007,88,0.726,89,0.764,92,1.303,94,1.985,98,1.389,106,1.975,107,2.208,108,2.208,112,2.891,114,1.303,115,0.845,119,1.387,121,3.203,124,1.699,179,1.289,201,0.534,207,2.294,208,2.779,209,2.779,210,2.069,211,1.228,212,2.304,213,3.437,214,3.359,216,1.863,217,3.409,219,2.052,220,2.068,222,1.863,223,2.304,226,2.052,228,1.228,231,1.228,232,2.304,233,1.588,234,1.863,236,1.387,237,1.588,238,1.588,239,3.187,240,3.076,241,3.14,242,2.832,243,2.823,244,1.387,248,1.48,249,1.303,252,3.284,254,1.588,255,1.863,258,1.588,259,1.713,261,1.588,262,1.713,328,4.211,462,2.052,472,2.052,645,4.182,663,2.779,664,2.304,665,2.687,666,2.687,667,2.687,668,2.687,669,4.008,670,2.687,671,2.687,672,2.832,673,2.304,674,2.052,675,2.687,676,2.687,677,2.687,678,2.687,679,2.687,680,2.687,681,2.687]],["title/modules/MailModule.html",[48,0.935,65,2.319]],["body/modules/MailModule.html",[3,0.188,4,0.161,5,0.161,16,0.02,27,0.335,31,0.601,32,0.188,33,0.16,45,0.012,46,0.015,47,0.012,48,1.621,50,1.744,51,1.744,52,1.946,53,1.946,54,1.744,55,2.723,56,1.946,65,4.468,70,2.476,71,1.946,72,1.946,74,2.06,77,2.06,78,1.281,88,1.55,136,2.483,137,1.744,139,2.483,140,2.483,141,2.186,645,2.663,663,4.375,672,4.141,673,3.866,674,3.442,682,3.866,683,3.866,684,4.508,685,4.508,686,4.508]],["title/injectables/MailService.html",[28,0.723,672,2.149]],["body/injectables/MailService.html",[3,0.145,4,0.124,5,0.124,7,0.303,8,1.118,13,0.711,15,1.615,16,0.02,17,1.248,18,0.687,19,1.615,21,1.459,27,0.286,28,0.957,31,0.462,32,0.145,33,0.123,35,1.698,45,0.009,46,0.013,47,0.009,78,0.986,94,2.066,106,2.091,124,1.878,146,1.342,150,1.497,159,1.585,179,1.099,188,1.775,201,0.689,207,2.079,210,2.079,211,2.201,228,2.201,231,2.201,248,1.911,249,1.682,270,3.34,271,2.733,273,2.9,279,3.34,283,1.789,645,4.211,672,2.846,674,2.648,687,2.974,688,3.468,689,3.468,690,4.817,691,4.817,692,3.468,693,3.468,694,3.468,695,3.468,696,3.468,697,3.468,698,3.468,699,3.468,700,3.468,701,3.468,702,3.468]],["title/classes/PaginateIoctl.html",[33,0.129,560,2.149]],["body/classes/PaginateIoctl.html",[3,0.113,4,0.097,5,0.097,7,0.237,13,0.584,16,0.019,18,0.805,27,0.13,32,0.169,33,0.144,45,0.007,46,0.01,47,0.007,171,0.946,173,1.27,179,0.539,181,1.989,188,1.905,190,2.387,193,1.563,197,1.563,198,2.834,201,0.539,413,2.073,421,3.405,423,4.641,425,4.641,499,2.657,500,2.073,501,2.328,502,2.328,503,2.328,504,2.328,505,2.328,506,2.328,507,2.328,508,2.328,509,2.328,510,2.328,511,2.328,512,2.328,513,2.328,514,2.328,515,2.328,516,2.328,517,2.328,518,2.328,519,2.328,520,2.328,521,2.328,522,2.328,523,2.328,524,2.328,525,2.328,526,2.328,530,6.243,531,5.049,532,6.243,541,3.464,560,2.387,561,3.345,562,3.075,563,3.075,564,3.683,703,2.715,704,2.715,705,2.715,706,2.715]],["title/classes/Pagination.html",[33,0.129,571,2.319]],["body/classes/Pagination.html",[3,0.221,4,0.189,5,0.189,7,0.461,13,0.692,16,0.019,18,0.692,32,0.221,33,0.188,45,0.014,46,0.016,47,0.014,171,1.841,173,1.99,188,1.804,562,4.318,563,4.318,571,4.034,707,4.532,708,5.285,709,5.285]],["title/classes/Panel.html",[33,0.129,308,1.662]],["body/classes/Panel.html",[3,0.128,4,0.11,5,0.11,7,0.269,13,0.755,16,0.02,17,1.127,18,0.755,27,0.287,32,0.128,33,0.11,45,0.008,46,0.011,47,0.008,98,1.687,115,0.968,171,1.072,173,1.392,176,2.42,179,1.03,181,2.179,182,3.809,188,1.608,190,3.351,193,2.006,197,1.713,198,2.552,200,2.439,201,0.612,202,1.589,203,3.634,293,3.596,300,2.859,301,3.797,302,3.797,303,4.863,304,5.657,305,4.863,308,2.024,312,4.447,313,2.135,439,2.351,440,2.351,449,3.381,710,2.64,711,5.186,712,5.152,713,5.186,714,5.186,715,4.283,716,5.186,717,5.186,718,3.079,719,3.079,720,3.079,721,3.079,722,3.079,723,3.079,724,3.079,725,3.079,726,3.079,727,3.079,728,3.079,729,3.079,730,3.079,731,3.079,732,3.079]],["title/controllers/PanelController.html",[89,1.034,733,2.522]],["body/controllers/PanelController.html",[0,1.228,3,0.112,4,0.096,5,0.096,7,0.496,8,0.931,13,0.621,15,1.366,16,0.02,17,1.227,18,0.581,19,1.366,21,1.32,27,0.285,31,0.358,32,0.112,33,0.096,35,1.537,45,0.007,46,0.01,47,0.007,88,0.726,89,0.764,92,1.303,94,1.985,98,1.389,106,1.975,107,2.208,108,2.208,112,2.891,114,1.944,115,0.845,119,1.387,121,3.203,124,1.699,179,1.289,201,0.534,207,2.294,208,2.779,209,2.779,210,2.069,211,1.228,214,3.359,216,1.863,217,3.409,220,2.068,222,1.863,228,1.228,231,1.228,233,1.588,234,1.863,236,1.387,237,1.588,238,1.588,239,3.187,240,3.076,241,3.14,242,2.832,243,2.823,244,1.387,248,1.48,249,1.303,252,3.284,254,1.588,255,1.863,258,1.588,259,1.713,261,1.588,262,1.713,308,3.214,326,2.052,328,4.211,331,1.863,337,1.863,339,1.863,455,3.437,457,2.304,462,2.052,472,2.052,733,2.779,734,2.304,735,2.687,736,2.687,737,2.687,738,2.687,739,2.687,740,4.008,741,2.687,742,2.687,743,2.052,744,2.832,745,2.304,746,2.687,747,2.687,748,2.687,749,2.687,750,2.687,751,2.687]],["title/modules/PanelModule.html",[48,0.935,66,2.319]],["body/modules/PanelModule.html",[3,0.183,4,0.157,5,0.157,16,0.02,27,0.343,31,0.584,32,0.183,33,0.156,45,0.011,46,0.015,47,0.011,48,1.6,50,1.695,51,1.695,52,1.891,53,1.891,54,1.695,55,2.687,56,1.891,66,4.435,70,2.431,71,1.891,72,1.891,74,2.002,77,2.002,78,1.245,88,1.522,136,2.414,137,1.695,139,2.414,140,2.414,141,2.125,176,2.067,202,2.261,300,2.574,308,2.002,313,3.038,733,4.317,743,3.346,744,4.11,745,3.757,752,3.757,753,3.757,754,4.382,755,4.382,756,4.382]],["title/injectables/PanelService.html",[28,0.723,744,2.149]],["body/injectables/PanelService.html",[3,0.143,4,0.123,5,0.123,7,0.3,8,1.112,13,0.709,15,1.61,16,0.02,17,1.244,18,0.685,19,1.61,21,1.454,27,0.285,28,0.951,31,0.458,32,0.143,33,0.122,35,1.693,45,0.009,46,0.012,47,0.009,78,0.977,94,2.063,106,2.087,124,1.872,146,1.33,150,1.484,159,1.571,179,1.094,188,1.771,201,0.683,207,2.066,210,2.066,211,2.188,228,2.188,231,2.188,248,1.894,249,1.667,270,3.32,271,2.722,273,2.889,279,3.32,283,1.774,293,3.32,308,3.252,384,4.105,743,2.625,744,2.829,757,2.948,758,3.438,759,3.438,760,4.788,761,4.788,762,3.438,763,3.438,764,3.438,765,3.438,766,3.438,767,3.438,768,3.438,769,3.438,770,3.438,771,3.438,772,3.438]],["title/classes/ReportSaving.html",[33,0.129,773,2.522]],["body/classes/ReportSaving.html",[3,0.14,4,0.12,5,0.12,7,0.294,13,0.75,16,0.02,18,0.775,27,0.225,32,0.14,33,0.12,45,0.009,46,0.012,47,0.009,98,1.676,171,1.172,173,1.483,179,1.082,181,2.055,185,2.144,186,2.144,188,1.822,193,2.106,197,1.824,198,2.743,199,3.006,200,2.598,201,0.668,405,4.106,421,3.471,422,4.918,423,4.106,424,4.918,425,4.106,426,4.918,427,4.106,712,4.669,715,4.303,773,3.27,774,2.884,775,5.445,776,5.445,777,5.445,778,5.445,779,5.445,780,5.445,781,3.364,782,3.364,783,3.364,784,3.364,785,3.364,786,3.364,787,3.364,788,3.364,789,3.364,790,3.364,791,3.364]],["title/classes/ReportSavingDetail.html",[33,0.129,715,2.319]],["body/classes/ReportSavingDetail.html",[3,0.1,4,0.086,5,0.086,7,0.21,13,0.76,16,0.02,17,0.478,18,0.795,27,0.214,32,0.1,33,0.086,45,0.006,46,0.01,47,0.006,98,1.699,171,0.838,173,1.159,179,0.89,181,2.308,185,1.534,186,1.534,188,1.799,193,1.734,197,1.426,198,2.724,199,2.35,200,2.469,201,0.478,308,2.805,405,4.224,421,4.093,422,5.06,423,4.224,424,5.06,425,4.224,426,5.06,427,4.224,429,5.262,437,4.645,439,1.837,440,1.837,449,2.815,451,2.063,715,2.35,773,4.256,792,2.063,793,4.482,794,4.482,795,4.482,796,4.482,797,4.482,798,4.482,799,4.482,800,4.482,801,4.482,802,4.482,803,4.482,804,4.482,805,4.482,806,2.406,807,2.406,808,2.406,809,2.406,810,2.406,811,2.406,812,2.406,813,2.406,814,2.406,815,2.406,816,2.406,817,2.406,818,2.406,819,2.406,820,2.406,821,2.406,822,2.406,823,2.406,824,2.406,825,2.406]],["title/classes/User.html",[24,1.485,33,0.129]],["body/classes/User.html",[3,0.159,4,0.136,5,0.136,7,0.332,8,1.192,13,0.747,16,0.02,17,1.154,18,0.731,21,0.884,24,2.096,27,0.278,32,0.214,33,0.183,45,0.01,46,0.013,47,0.01,97,2.249,98,1.67,115,1.197,171,1.326,173,1.614,179,1.154,181,2.521,182,3.836,188,1.319,193,2.247,197,1.472,198,2.588,201,0.756,203,3.83,395,3.263,648,4.312,652,4.028,826,2.906,827,4.748,828,4.436,829,5.332,830,3.806,831,3.806,832,3.806,833,3.806,834,3.806,835,3.806,836,4.981,837,3.806,838,3.56,839,3.263,840,3.263,841,2.906,842,3.263]],["title/controllers/UserController.html",[89,1.034,843,2.522]],["body/controllers/UserController.html",[3,0.101,4,0.086,5,0.205,7,0.211,8,0.858,13,0.625,15,1.394,16,0.02,17,1.22,18,0.625,19,1.394,21,1.329,24,2.82,27,0.294,31,0.322,32,0.101,33,0.086,35,1.61,45,0.006,46,0.01,47,0.006,88,0.652,89,0.686,92,1.17,94,1.99,98,1.398,106,1.921,107,2.036,108,2.036,112,1.17,114,1.17,115,0.759,119,1.245,121,2.631,123,1.33,124,1.622,130,2.178,137,0.934,165,2.069,173,0.759,179,1.317,181,0.841,207,1.042,217,3.316,220,1.907,226,1.843,233,1.426,236,1.245,237,1.426,238,1.426,239,2.952,240,2.952,241,2.973,242,2.973,254,1.426,258,1.426,261,1.426,271,2.3,324,2.822,328,3.208,331,1.674,332,3.169,334,2.069,336,1.843,337,1.674,339,1.674,344,1.674,347,4.651,348,3.458,350,2.069,561,1.674,843,2.563,844,2.069,845,2.414,846,3.169,847,3.169,848,3.696,849,3.696,850,2.069,851,2.414,852,2.069,853,3.696,854,2.414,855,2.414,856,2.414,857,2.414,858,2.414,859,2.414,860,2.414,861,2.414,862,2.414,863,2.414,864,2.414,865,2.414,866,2.414,867,2.414,868,3.696,869,2.069,870,2.069,871,2.414,872,3.696,873,2.069,874,2.414,875,2.414,876,2.414,877,2.069,878,2.069,879,2.414,880,2.414,881,2.414,882,2.414,883,2.414,884,2.414,885,2.414,886,3.696,887,2.414,888,2.414,889,2.414,890,2.414,891,2.414,892,2.414,893,2.414,894,2.414,895,2.414,896,2.414,897,2.414,898,2.414,899,2.414,900,2.414,901,2.414,902,2.414,903,2.069,904,2.414,905,2.414,906,2.414,907,2.414,908,2.414,909,2.414,910,2.414,911,2.414,912,2.414,913,2.414,914,2.414]],["title/classes/UserLogin.html",[33,0.129,97,2.149]],["body/classes/UserLogin.html",[3,0.182,4,0.156,5,0.156,7,0.381,13,0.615,16,0.02,17,0.868,18,0.615,24,1.784,27,0.297,32,0.235,33,0.2,45,0.011,46,0.015,47,0.011,97,3.322,98,1.374,115,1.374,171,1.522,173,1.768,179,0.868,181,2.521,188,1.123,193,2.175,197,1.69,198,2.689,201,0.868,203,4.02,648,4.552,652,3.03,826,3.336,827,5.012,828,3.336,829,3.747,836,4.821,838,3.899,839,3.747,840,3.747,841,3.336,842,3.747,915,4.37,916,4.37]],["title/modules/UserModule.html",[48,0.935,67,2.319]],["body/modules/UserModule.html",[3,0.189,4,0.162,5,0.162,16,0.02,24,1.851,27,0.335,31,0.604,32,0.189,33,0.161,45,0.012,46,0.015,47,0.012,48,1.626,50,1.754,51,1.754,52,1.957,53,1.957,54,1.754,55,2.73,56,2.485,67,4.474,70,2.485,71,1.957,72,1.957,74,2.072,77,2.631,78,1.289,88,1.556,130,3.404,136,2.498,137,1.754,139,2.498,140,2.498,141,2.199,142,3.888,843,4.387,869,3.888,917,4.534,918,4.534,919,4.534,920,4.534,921,4.534]],["title/injectables/UserService.html",[28,0.723,130,1.764]],["body/injectables/UserService.html",[3,0.101,4,0.087,5,0.087,7,0.212,8,0.863,13,0.716,15,1.622,16,0.02,17,1.254,18,0.704,19,1.622,21,1.465,24,2.801,27,0.26,28,0.738,31,0.324,32,0.101,33,0.087,35,1.706,39,2.578,40,2.37,45,0.006,46,0.01,47,0.006,78,0.691,94,2.069,106,1.716,123,2.486,124,1.958,130,1.803,146,0.941,150,1.05,159,2.309,160,2.876,173,1.169,179,0.896,181,2.389,188,1.622,201,0.483,210,1.605,248,1.34,249,1.179,271,2.309,273,2.45,283,1.255,427,1.55,648,3.504,652,3.504,827,4.56,828,1.857,838,2.578,841,1.857,846,3.188,847,3.188,850,3.188,852,3.188,870,2.086,922,2.086,923,3.718,924,3.718,925,3.718,926,3.718,927,3.718,928,2.432,929,3.718,930,3.718,931,2.432,932,2.432,933,3.718,934,2.432,935,2.432,936,3.718,937,2.432,938,3.718,939,2.432,940,3.718,941,2.432,942,3.718,943,5.053,944,2.432,945,3.718,946,2.432,947,2.086,948,4.512,949,2.432,950,2.432,951,4.512,952,3.718,953,2.432,954,2.432,955,2.432,956,2.432,957,2.432,958,2.432,959,2.432,960,3.718,961,2.432,962,2.432,963,2.432,964,2.432,965,2.432,966,2.432,967,2.432,968,2.432]],["title/classes/Zona.html",[33,0.129,296,2.004]],["body/classes/Zona.html",[3,0.156,4,0.134,5,0.134,7,0.326,13,0.767,16,0.02,18,0.767,27,0.242,32,0.156,33,0.133,45,0.01,46,0.013,47,0.01,98,1.714,171,1.3,173,1.593,176,2.54,177,4.392,178,4.392,179,1.143,180,4.392,181,2.411,185,2.38,186,2.38,188,1.585,190,3.645,191,4.392,193,2.225,195,4.392,197,1.96,198,2.77,199,3.23,200,2.791,201,0.742,202,1.926,296,2.791,969,3.201,970,5.752,971,5.752,972,5.752,973,5.752,974,3.733,975,3.733,976,3.733,977,3.733,978,3.733,979,3.733,980,3.733,981,3.733,982,3.733,983,3.733]],["title/controllers/ZonaController.html",[89,1.034,984,2.522]],["body/controllers/ZonaController.html",[0,2.031,3,0.185,4,0.159,5,0.159,7,0.596,8,1.32,13,0.486,16,0.02,21,1.032,27,0.326,31,0.592,32,0.185,33,0.158,35,1.201,45,0.012,46,0.015,47,0.012,88,1.201,89,1.263,92,2.155,94,1.781,98,1.086,106,1.699,112,2.155,114,2.155,115,1.397,119,2.293,124,1.328,214,2.626,215,4.34,217,2.933,219,3.393,220,2.293,236,2.293,239,3.233,240,2.293,243,2.864,244,2.293,252,3.131,296,3.452,348,2.833,984,3.941,985,3.811,986,4.444,987,3.703,988,3.811,989,3.393,990,4.444,991,4.444,992,4.444,993,4.444]],["title/modules/ZonaModule.html",[48,0.935,68,2.319]],["body/modules/ZonaModule.html",[3,0.185,4,0.159,5,0.159,16,0.02,27,0.339,31,0.592,32,0.185,33,0.158,45,0.012,46,0.015,47,0.012,48,1.611,50,1.719,51,1.719,52,1.918,53,1.918,54,1.719,55,2.705,56,1.918,68,4.451,70,2.453,71,1.918,72,1.918,74,2.031,77,2.031,78,1.263,88,1.536,136,2.448,137,1.719,139,2.448,140,2.448,141,2.155,176,2.086,202,2.293,296,2.448,984,4.346,987,4.126,988,3.811,989,3.393,994,3.811,995,3.811,996,4.444,997,4.444,998,4.444]],["title/injectables/ZonaService.html",[28,0.723,987,2.149]],["body/injectables/ZonaService.html",[3,0.195,4,0.168,5,0.168,7,0.409,8,1.364,13,0.642,15,1.204,16,0.02,17,0.93,18,0.512,19,1.204,21,1.087,27,0.322,28,1.167,31,0.624,32,0.195,33,0.167,35,1.266,45,0.012,46,0.015,47,0.012,78,1.331,94,1.825,106,1.757,124,1.4,146,1.812,150,2.021,159,2.14,201,0.93,271,3.077,273,3.265,283,2.417,296,2.58,987,3.472,989,3.576,999,4.016,1000,4.684,1001,4.684,1002,5.876,1003,4.684,1004,4.684,1005,4.684]],["title/coverage.html",[1006,3.801]],["body/coverage.html",[0,1.407,1,2.351,5,0.11,6,2.64,16,0.02,18,0.337,24,1.257,28,1.386,33,0.252,40,1.963,45,0.008,46,0.011,47,0.008,54,1.191,69,1.963,89,1.91,90,2.135,91,2.64,97,1.819,109,1.819,129,1.963,130,1.493,147,2.64,170,1.696,172,2.64,176,1.13,205,2.135,206,2.64,243,1.407,244,1.589,245,1.819,269,2.64,290,2.64,296,1.696,300,1.407,308,1.407,321,2.135,322,2.64,341,1.819,363,2.64,388,3.381,392,2.64,398,2.351,405,4.832,411,2.351,412,2.64,435,2.64,452,2.135,453,2.64,465,1.819,481,2.64,499,1.696,500,3.381,560,1.819,565,2.135,566,2.64,571,1.963,580,1.819,600,2.64,620,2.64,625,2.64,645,1.819,646,2.64,663,2.135,664,2.64,672,1.819,687,2.64,707,2.64,710,2.64,715,1.963,733,2.135,734,2.64,744,1.819,757,2.64,773,2.135,774,2.64,792,2.64,826,3.381,843,2.135,844,2.64,922,2.64,969,2.64,984,2.135,985,2.64,987,1.819,999,2.64,1006,2.351,1007,3.079,1008,3.079,1009,3.079,1010,2.64,1011,5.186,1012,6.447,1013,5.186,1014,4.428,1015,4.428,1016,6.008,1017,5.671,1018,5.671,1019,5.186,1020,3.079,1021,3.079,1022,3.079,1023,4.428,1024,4.428,1025,2.64,1026,2.64,1027,3.079,1028,3.079,1029,3.079]],["title/dependencies.html",[51,1.694,1030,3.031]],["body/dependencies.html",[16,0.02,31,0.592,33,0.202,45,0.012,46,0.015,47,0.012,51,1.719,78,1.263,115,1.397,133,3.393,137,1.719,141,2.155,201,1.129,379,4.874,389,3.811,634,4.874,838,3.082,873,3.811,877,3.811,878,5.374,1031,4.444,1032,4.444,1033,5.684,1034,4.444,1035,4.444,1036,4.444,1037,6.267,1038,4.444,1039,4.444,1040,4.444,1041,4.444,1042,5.684,1043,4.444,1044,4.444,1045,4.444,1046,4.444,1047,4.444,1048,4.444,1049,4.444,1050,4.444,1051,4.444,1052,4.444,1053,4.444,1054,4.444,1055,4.444,1056,4.444,1057,4.444,1058,4.444,1059,4.444,1060,4.444,1061,4.444,1062,4.444,1063,4.444,1064,4.444,1065,4.444,1066,4.444]],["title/miscellaneous/functions.html",[1067,2.102,1068,3.755]],["body/miscellaneous/functions.html",[7,0.502,16,0.017,45,0.015,46,0.017,47,0.015,54,2.715,1010,4.932,1067,3.989,1068,4.932,1069,5.752]],["title/index.html",[7,0.264,1070,3.031,1071,3.031]],["body/index.html",[4,0.156,16,0.019,45,0.011,46,0.015,47,0.011,121,2.113,273,2.113,402,3.736,1006,3.327,1072,4.357,1073,4.357,1074,5.613,1075,4.357,1076,4.357,1077,4.357,1078,4.357,1079,4.357,1080,4.357,1081,4.357,1082,4.357,1083,6.209,1084,4.357,1085,4.357,1086,4.357,1087,7.067,1088,4.357,1089,4.357,1090,4.357,1091,6.947,1092,4.357,1093,4.357,1094,5.613,1095,4.357,1096,4.357,1097,4.357,1098,4.357,1099,5.613,1100,5.613,1101,4.357,1102,4.357,1103,4.357,1104,5.613,1105,5.613,1106,4.357,1107,4.357,1108,4.357,1109,4.357,1110,4.357,1111,3.736,1112,4.357,1113,4.357,1114,4.357,1115,4.357,1116,4.357,1117,4.357,1118,4.357,1119,4.357,1120,4.357,1121,4.357,1122,4.357,1123,4.357,1124,4.357,1125,4.357,1126,4.357,1127,4.357,1128,4.357,1129,4.357]],["title/modules.html",[50,1.926]],["body/modules.html",[16,0.016,45,0.013,46,0.016,47,0.013,49,3.444,50,1.921,60,3.166,61,3.166,62,3.166,63,3.166,64,3.166,65,3.166,66,3.166,67,3.166,68,3.166,1111,6.385,1130,7.446,1131,7.446,1132,7.446]],["title/overview.html",[1133,4.269]],["body/overview.html",[0,1.658,16,0.019,45,0.009,46,0.013,47,0.009,48,0.933,49,5.19,50,1.404,51,1.404,52,1.566,53,1.566,54,1.404,55,1.566,56,1.566,57,3.112,58,3.112,59,3.112,60,4.446,61,4.071,62,4.071,63,4.071,64,4.071,65,4.071,66,4.071,67,4.071,68,4.071,69,3.613,70,2.145,71,1.566,72,1.566,88,0.981,109,3.349,127,3.112,128,3.112,129,3.613,130,2.956,146,1.404,171,1.264,245,3.349,264,3.112,265,3.112,341,3.349,358,3.112,359,3.112,465,3.349,476,3.112,477,3.112,531,2.517,580,3.349,595,3.112,596,3.112,609,3.112,672,3.349,682,3.112,683,3.112,744,3.349,752,3.112,753,3.112,987,3.349,994,3.112,995,3.112,1133,3.112,1134,3.629,1135,3.629,1136,3.629]],["title/miscellaneous/variables.html",[1067,2.102,1137,3.755]],["body/miscellaneous/variables.html",[7,0.477,16,0.019,45,0.014,46,0.017,47,0.014,388,4.177,398,4.932,399,4.691,427,4.117,903,4.691,947,5.538,1025,4.691,1026,5.538,1067,3.793,1137,4.691,1138,5.47,1139,5.47,1140,5.47,1141,5.47]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":405,"title":{},"body":{"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":609,"title":{},"body":{"injectables/IoctlService.html":{},"overview.html":{}}}],["1.0.1",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":531,"title":{},"body":{"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"classes/PaginateIoctl.html":{},"overview.html":{}}}],["12",{"_index":1135,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1136,"title":{},"body":{"overview.html":{}}}],["16)).tostring(16)).join",{"_index":908,"title":{},"body":{"controllers/UserController.html":{}}}],["2",{"_index":426,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{}}}],["2.1.0",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["3.0.0",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["3660",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.0.0",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":424,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{}}}],["6",{"_index":532,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["6.10.14",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["7.0.9",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1134,"title":{},"body":{"overview.html":{}}}],["__utils/jwt",{"_index":582,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["access",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{}}}],["accesstoken",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":291,"title":{},"body":{"classes/Client.html":{}}}],["admin",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["administrator",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{}}}],["all'})@apiunauthorizedresponse({description",{"_index":220,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["already",{"_index":960,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":1112,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1082,"title":{},"body":{"index.html":{}}}],["api/auth",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/client",{"_index":323,"title":{},"body":{"controllers/ClientController.html":{}}}],["api/device",{"_index":454,"title":{},"body":{"controllers/DeviceController.html":{}}}],["api/ioctl",{"_index":567,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["api/panel",{"_index":735,"title":{},"body":{"controllers/PanelController.html":{}}}],["api/user",{"_index":845,"title":{},"body":{"controllers/UserController.html":{}}}],["apibadrequestresponse",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth",{"_index":239,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["apibearerauth()@delete('/:id')@apiparam({name",{"_index":331,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@get('/')@useguards(new",{"_index":457,"title":{},"body":{"controllers/DeviceController.html":{},"controllers/PanelController.html":{}}}],["apibearerauth()@get('/')@useguards(undefined)@apiokresponse({description",{"_index":334,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@get('/:id')@apiparam({name",{"_index":337,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@post('/')@apibody({type",{"_index":326,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/PanelController.html":{}}}],["apibearerauth()@put('/:id')@apiparam({name",{"_index":339,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@useguards(undefined)@post('/foto/:id')@apiconsumes('multipart/form",{"_index":861,"title":{},"body":{"controllers/UserController.html":{}}}],["apibody",{"_index":242,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["apiconsumes",{"_index":871,"title":{},"body":{"controllers/UserController.html":{}}}],["apiconsumes('multipart/form",{"_index":893,"title":{},"body":{"controllers/UserController.html":{}}}],["apiokresponse",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["apiokresponse({description",{"_index":348,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["apiparam",{"_index":241,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["apiparam({name",{"_index":350,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":203,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/Device.html":{},"classes/Mail.html":{},"classes/Panel.html":{},"classes/User.html":{},"classes/UserLogin.html":{}}}],["apiproperty()@column",{"_index":182,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/Device.html":{},"classes/Mail.html":{},"classes/Panel.html":{},"classes/User.html":{}}}],["apiquery",{"_index":583,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["apitags",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["apitags('&#x1f468",{"_index":880,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('&#x1f4b0",{"_index":251,"title":{},"body":{"controllers/BillingController.html":{}}}],["apitags('&#x1f4e7",{"_index":676,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('&#x1f512",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('&#x1f5a5",{"_index":468,"title":{},"body":{"controllers/DeviceController.html":{}}}],["apitags('&#x1f647",{"_index":345,"title":{},"body":{"controllers/ClientController.html":{}}}],["apitags('&#x1f6a5",{"_index":991,"title":{},"body":{"controllers/ZonaController.html":{}}}],["apiunauthorizedresponse",{"_index":240,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["apiunauthorizedresponse({description",{"_index":992,"title":{},"body":{"controllers/ZonaController.html":{}}}],["app",{"_index":1089,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1079,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array(32).fill(null).map",{"_index":906,"title":{},"body":{"controllers/UserController.html":{}}}],["async",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{}}}],["auth",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authcontroller",{"_index":90,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":344,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["authguard('jwt",{"_index":623,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":60,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1122,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":109,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{}}}],["backers",{"_index":1113,"title":{},"body":{"index.html":{}}}],["beforeinsert",{"_index":836,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["billing",{"_index":170,"title":{"classes/Billing.html":{}},"body":{"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"coverage.html":{}}}],["billing'})@apiunauthorizedresponse({description",{"_index":229,"title":{},"body":{"controllers/BillingController.html":{}}}],["billing.client",{"_index":317,"title":{},"body":{"classes/Client.html":{}}}],["billing.controller",{"_index":267,"title":{},"body":{"modules/BillingModule.html":{}}}],["billing.entity",{"_index":247,"title":{},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{}}}],["billing.service",{"_index":246,"title":{},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{}}}],["billing/billing.entity",{"_index":315,"title":{},"body":{"classes/Client.html":{}}}],["billing_id",{"_index":775,"title":{},"body":{"classes/ReportSaving.html":{}}}],["billing_name",{"_index":174,"title":{},"body":{"classes/Billing.html":{}}}],["billing_number",{"_index":175,"title":{},"body":{"classes/Billing.html":{}}}],["billingcontroller",{"_index":205,"title":{"controllers/BillingController.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"coverage.html":{}}}],["billingmodule",{"_index":61,"title":{"modules/BillingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BillingModule.html":{},"modules.html":{},"overview.html":{}}}],["billingrepo",{"_index":275,"title":{},"body":{"injectables/BillingService.html":{}}}],["billingservice",{"_index":245,"title":{"injectables/BillingService.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"coverage.html":{},"overview.html":{}}}],["billing})@apibearerauth()@useguards(new",{"_index":227,"title":{},"body":{"controllers/BillingController.html":{}}}],["binary",{"_index":897,"title":{},"body":{"controllers/UserController.html":{}}}],["body",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{}}}],["bootstrap",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1132,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1130,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1075,"title":{},"body":{"index.html":{}}}],["callback",{"_index":394,"title":{},"body":{"injectables/ClusterService.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["capacity",{"_index":711,"title":{},"body":{"classes/Panel.html":{}}}],["cascade",{"_index":304,"title":{},"body":{"classes/Client.html":{},"classes/Panel.html":{}}}],["cb",{"_index":904,"title":{},"body":{"controllers/UserController.html":{}}}],["cb(null",{"_index":909,"title":{},"body":{"controllers/UserController.html":{}}}],["class",{"_index":33,"title":{"classes/Billing.html":{},"classes/Client.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/Zona.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":171,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/Zona.html":{},"overview.html":{}}}],["client",{"_index":176,"title":{"classes/Client.html":{}},"body":{"classes/Billing.html":{},"modules/BillingModule.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"classes/Device.html":{},"modules/DeviceModule.html":{},"classes/Panel.html":{},"modules/PanelModule.html":{},"classes/Zona.html":{},"modules/ZonaModule.html":{},"coverage.html":{}}}],["client'})@apiunauthorizedresponse({description",{"_index":329,"title":{},"body":{"controllers/ClientController.html":{}}}],["client.billing",{"_index":204,"title":{},"body":{"classes/Billing.html":{}}}],["client.controller",{"_index":361,"title":{},"body":{"modules/ClientModule.html":{}}}],["client.devices",{"_index":450,"title":{},"body":{"classes/Device.html":{}}}],["client.entity",{"_index":343,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{}}}],["client.panels",{"_index":730,"title":{},"body":{"classes/Panel.html":{}}}],["client.service",{"_index":342,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{}}}],["client.zona",{"_index":983,"title":{},"body":{"classes/Zona.html":{}}}],["client_id",{"_index":712,"title":{},"body":{"classes/Panel.html":{},"classes/ReportSaving.html":{}}}],["clientcontroller",{"_index":321,"title":{"controllers/ClientController.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"coverage.html":{}}}],["clientid",{"_index":177,"title":{},"body":{"classes/Billing.html":{},"classes/Device.html":{},"classes/Zona.html":{}}}],["clientmodule",{"_index":62,"title":{"modules/ClientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules.html":{},"overview.html":{}}}],["clientrepo",{"_index":367,"title":{},"body":{"injectables/ClientService.html":{}}}],["clients/client.entity",{"_index":202,"title":{},"body":{"classes/Billing.html":{},"modules/BillingModule.html":{},"classes/Device.html":{},"modules/DeviceModule.html":{},"classes/Panel.html":{},"modules/PanelModule.html":{},"classes/Zona.html":{},"modules/ZonaModule.html":{}}}],["clientservice",{"_index":341,"title":{"injectables/ClientService.html":{}},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"coverage.html":{},"overview.html":{}}}],["client})@useguards(undefined)@apiokresponse({description",{"_index":327,"title":{},"body":{"controllers/ClientController.html":{}}}],["cluster",{"_index":396,"title":{},"body":{"injectables/ClusterService.html":{}}}],["cluster.fork",{"_index":410,"title":{},"body":{"injectables/ClusterService.html":{}}}],["cluster_appmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_billingmodule",{"_index":264,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_billingmodule_providers",{"_index":265,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_clientmodule",{"_index":358,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_providers",{"_index":359,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_devicemodule",{"_index":476,"title":{},"body":{"modules/DeviceModule.html":{},"overview.html":{}}}],["cluster_devicemodule_providers",{"_index":477,"title":{},"body":{"modules/DeviceModule.html":{},"overview.html":{}}}],["cluster_ioctlmodule",{"_index":595,"title":{},"body":{"modules/IoCtlModule.html":{},"overview.html":{}}}],["cluster_ioctlmodule_providers",{"_index":596,"title":{},"body":{"modules/IoCtlModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":682,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":683,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_panelmodule",{"_index":752,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_panelmodule_providers",{"_index":753,"title":{},"body":{"modules/PanelModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":917,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":918,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_zonamodule",{"_index":994,"title":{},"body":{"modules/ZonaModule.html":{},"overview.html":{}}}],["cluster_zonamodule_providers",{"_index":995,"title":{},"body":{"modules/ZonaModule.html":{},"overview.html":{}}}],["clusterize",{"_index":390,"title":{},"body":{"injectables/ClusterService.html":{}}}],["clusterize(callback",{"_index":391,"title":{},"body":{"injectables/ClusterService.html":{}}}],["clusterservice",{"_index":69,"title":{"injectables/ClusterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ClusterService.html":{},"coverage.html":{},"overview.html":{}}}],["column",{"_index":198,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/Zona.html":{}}}],["column({type",{"_index":421,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{}}}],["combination",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["company",{"_index":292,"title":{},"body":{"classes/Client.html":{}}}],["compodoc/compodoc",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["components/panels/panel.entity",{"_index":823,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["components/users/user.service",{"_index":636,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(`master",{"_index":401,"title":{},"body":{"injectables/ClusterService.html":{}}}],["console.log(`worker",{"_index":406,"title":{},"body":{"injectables/ClusterService.html":{}}}],["console.log(skippeditems",{"_index":610,"title":{},"body":{"injectables/IoctlService.html":{}}}],["const",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClusterService.html":{},"injectables/IoctlService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}}}],["constructor(@injectrepository(billing",{"_index":284,"title":{},"body":{"injectables/BillingService.html":{}}}],["constructor(@injectrepository(ioctl",{"_index":607,"title":{},"body":{"injectables/IoctlService.html":{}}}],["constructor(@injectrepository(mail",{"_index":697,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(@injectrepository(panel",{"_index":767,"title":{},"body":{"injectables/PanelService.html":{}}}],["constructor(@injectrepository(user",{"_index":949,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectrepository(zona",{"_index":1004,"title":{},"body":{"injectables/ZonaService.html":{}}}],["constructor(billingrepo",{"_index":272,"title":{},"body":{"injectables/BillingService.html":{}}}],["constructor(clientrepo",{"_index":369,"title":{},"body":{"injectables/ClientService.html":{}}}],["constructor(devicerepo",{"_index":483,"title":{},"body":{"injectables/DeviceService.html":{}}}],["constructor(ioctl",{"_index":602,"title":{},"body":{"injectables/IoctlService.html":{}}}],["constructor(mailrepo",{"_index":688,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(panelrepo",{"_index":758,"title":{},"body":{"injectables/PanelService.html":{}}}],["constructor(private",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["constructor(userrepo",{"_index":928,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(zonarepo",{"_index":1000,"title":{},"body":{"injectables/ZonaService.html":{}}}],["context",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":89,"title":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{},"coverage.html":{}}}],["controller('/billing",{"_index":250,"title":{},"body":{"controllers/BillingController.html":{}}}],["controller('/mail",{"_index":675,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('/zona",{"_index":990,"title":{},"body":{"controllers/ZonaController.html":{}}}],["controller('api/auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api/client",{"_index":346,"title":{},"body":{"controllers/ClientController.html":{}}}],["controller('api/device",{"_index":469,"title":{},"body":{"controllers/DeviceController.html":{}}}],["controller('api/ioctl",{"_index":586,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["controller('api/panel",{"_index":746,"title":{},"body":{"controllers/PanelController.html":{}}}],["controller('api/user",{"_index":879,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["coverage",{"_index":1006,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":228,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{}}}],["create'})@apiunauthorizedresponse({description",{"_index":462,"title":{},"body":{"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["create(@body",{"_index":353,"title":{},"body":{"controllers/ClientController.html":{}}}],["create(billing",{"_index":276,"title":{},"body":{"injectables/BillingService.html":{}}}],["create(client",{"_index":325,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{}}}],["create(device",{"_index":486,"title":{},"body":{"injectables/DeviceService.html":{}}}],["create(mail",{"_index":691,"title":{},"body":{"injectables/MailService.html":{}}}],["create(panel",{"_index":761,"title":{},"body":{"injectables/PanelService.html":{}}}],["created_at",{"_index":178,"title":{},"body":{"classes/Billing.html":{},"classes/Mail.html":{},"classes/Zona.html":{}}}],["createdatecolumn",{"_index":191,"title":{},"body":{"classes/Billing.html":{},"classes/Mail.html":{},"classes/Zona.html":{}}}],["createparamdecorator((data",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtoken",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(user",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser",{"_index":846,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":882,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(user",{"_index":850,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["crypto",{"_index":838,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["crypto.createhmac('sha256",{"_index":841,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["currentmonthdashboard",{"_index":411,"title":{"classes/CurrentMonthDashboard.html":{}},"body":{"classes/CurrentMonthDashboard.html":{},"coverage.html":{}}}],["data",{"_index":561,"title":{},"body":{"classes/IoCtl.html":{},"injectables/IoctlService.html":{},"classes/PaginateIoctl.html":{},"controllers/UserController.html":{}}}],["data')@apiparam({name",{"_index":862,"title":{},"body":{"controllers/UserController.html":{}}}],["date",{"_index":190,"title":{},"body":{"classes/Billing.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"classes/Zona.html":{}}}],["date_kwh",{"_index":501,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["date_server",{"_index":502,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["datetime",{"_index":429,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/ReportSavingDetail.html":{}}}],["decimal",{"_index":422,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{}}}],["declarations",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["decorators",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{}}}],["default",{"_index":427,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{}}}],["delete",{"_index":207,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{}}}],["delete'})@apiunauthorizedresponse({description",{"_index":216,"title":{},"body":{"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["delete('/:id",{"_index":261,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["delete('/:id')@apiparam({name",{"_index":212,"title":{},"body":{"controllers/BillingController.html":{},"controllers/MailController.html":{}}}],["delete(@param('id",{"_index":262,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["delete(id",{"_index":211,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{}}}],["deleted",{"_index":886,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted'})@apiunauthorizedresponse({description",{"_index":853,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteresult",{"_index":249,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":847,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@param",{"_index":887,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":852,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delta_in",{"_index":793,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["delta_out",{"_index":794,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["dependencies",{"_index":51,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":615,"title":{},"body":{"injectables/IoctlService.html":{}}}],["description",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["destination",{"_index":900,"title":{},"body":{"controllers/UserController.html":{}}}],["development",{"_index":1090,"title":{},"body":{"index.html":{}}}],["device",{"_index":300,"title":{"classes/Device.html":{}},"body":{"classes/Client.html":{},"modules/ClientModule.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/Panel.html":{},"modules/PanelModule.html":{},"coverage.html":{}}}],["device.client",{"_index":319,"title":{},"body":{"classes/Client.html":{}}}],["device.controller",{"_index":479,"title":{},"body":{"modules/DeviceModule.html":{}}}],["device.entity",{"_index":467,"title":{},"body":{"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{}}}],["device.panel",{"_index":731,"title":{},"body":{"classes/Panel.html":{}}}],["device.service",{"_index":466,"title":{},"body":{"controllers/DeviceController.html":{},"modules/DeviceModule.html":{}}}],["device/device.entity",{"_index":313,"title":{},"body":{"classes/Client.html":{},"modules/ClientModule.html":{},"classes/Panel.html":{},"modules/PanelModule.html":{}}}],["device_id",{"_index":413,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["device_in",{"_index":795,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["device_out",{"_index":796,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["devicecontroller",{"_index":452,"title":{"controllers/DeviceController.html":{}},"body":{"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"coverage.html":{}}}],["devicemodule",{"_index":63,"title":{"modules/DeviceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeviceModule.html":{},"modules.html":{},"overview.html":{}}}],["devicerepo",{"_index":485,"title":{},"body":{"injectables/DeviceService.html":{}}}],["devices",{"_index":293,"title":{},"body":{"classes/Client.html":{},"injectables/ClientService.html":{},"classes/Panel.html":{},"injectables/PanelService.html":{}}}],["deviceservice",{"_index":465,"title":{"injectables/DeviceService.html":{}},"body":{"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"coverage.html":{},"overview.html":{}}}],["device})@useguards(new",{"_index":461,"title":{},"body":{"controllers/DeviceController.html":{}}}],["died",{"_index":408,"title":{},"body":{"injectables/ClusterService.html":{}}}],["diskstorage",{"_index":872,"title":{},"body":{"controllers/UserController.html":{}}}],["documentation",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":630,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["duplicateemail",{"_index":955,"title":{},"body":{"injectables/UserService.html":{}}}],["duplicateusername",{"_index":957,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":1101,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1076,"title":{},"body":{"index.html":{}}}],["email",{"_index":827,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":197,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/Zona.html":{}}}],["entity('current_month_dashboard",{"_index":434,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["entity('users",{"_index":839,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["err",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["executioncontext",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["exp",{"_index":643,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{}}}],["exports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["express",{"_index":878,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":364,"title":{},"body":{"injectables/ClientService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extname",{"_index":874,"title":{},"body":{"controllers/UserController.html":{}}}],["extractjwt",{"_index":632,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":640,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":574,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{}}}],["file.path",{"_index":914,"title":{},"body":{"controllers/UserController.html":{}}}],["fileinterceptor",{"_index":876,"title":{},"body":{"controllers/UserController.html":{}}}],["filename",{"_index":902,"title":{},"body":{"controllers/UserController.html":{}}}],["filter",{"_index":482,"title":{},"body":{"injectables/DeviceService.html":{}}}],["findbyid",{"_index":923,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":933,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":270,"title":{},"body":{"injectables/BillingService.html":{},"injectables/DeviceService.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{}}}],["findone(id",{"_index":279,"title":{},"body":{"injectables/BillingService.html":{},"injectables/DeviceService.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{}}}],["float",{"_index":530,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["format",{"_index":896,"title":{},"body":{"controllers/UserController.html":{}}}],["framework",{"_index":1074,"title":{},"body":{"index.html":{}}}],["freq",{"_index":503,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["function",{"_index":392,"title":{},"body":{"injectables/ClusterService.html":{},"coverage.html":{}}}],["functions",{"_index":1068,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('')@apibearerauth()@useguards(new",{"_index":568,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["get('/')@apibearerauth()@useguards(new",{"_index":219,"title":{},"body":{"controllers/BillingController.html":{},"controllers/MailController.html":{},"controllers/ZonaController.html":{}}}],["get('/:id",{"_index":254,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["get('/:id')@apiparam({name",{"_index":223,"title":{},"body":{"controllers/BillingController.html":{},"controllers/MailController.html":{}}}],["get('/paginate",{"_index":587,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["get('/paginate')@apibearerauth()@apiquery({name",{"_index":572,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["getall",{"_index":271,"title":{},"body":{"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}}}],["getbyemail",{"_index":924,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyemail(email",{"_index":936,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyemailandpass",{"_index":925,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyemailandpass(email",{"_index":938,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyid",{"_index":324,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{}}}],["getbyid(@param",{"_index":884,"title":{},"body":{"controllers/UserController.html":{}}}],["getbyid(@param('id",{"_index":351,"title":{},"body":{"controllers/ClientController.html":{}}}],["getbyid(id",{"_index":336,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/UserController.html":{}}}],["getbyusername",{"_index":926,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyusername(username",{"_index":940,"title":{},"body":{"injectables/UserService.html":{}}}],["getdevices",{"_index":368,"title":{},"body":{"injectables/ClientService.html":{}}}],["getmany",{"_index":618,"title":{},"body":{"injectables/IoctlService.html":{}}}],["getting",{"_index":1070,"title":{"index.html":{}},"body":{}}],["grow",{"_index":1108,"title":{},"body":{"index.html":{}}}],["gsm_number",{"_index":713,"title":{},"body":{"classes/Panel.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{}},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/ZonaController.html":{},"coverage.html":{},"overview.html":{}}}],["guard.ts",{"_index":620,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["guard.ts:10",{"_index":622,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guard.ts:6",{"_index":621,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{}}}],["handlerequest",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["hashpassword",{"_index":829,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["heavily",{"_index":1080,"title":{},"body":{"index.html":{}}}],["here",{"_index":1119,"title":{},"body":{"index.html":{}}}],["host",{"_index":647,"title":{},"body":{"classes/Mail.html":{}}}],["httpexception",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{}}}],["httpexception('unauthorized",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{}}}],["https://nestjs.com",{"_index":1126,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{}}}],["httpstatus.unauthorized",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{}}}],["iat",{"_index":642,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":179,"title":{},"body":{"classes/Billing.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{}}}],["id'})@apibearerauth()@useguards(new",{"_index":213,"title":{},"body":{"controllers/BillingController.html":{},"controllers/MailController.html":{}}}],["id'})@apibody({schema",{"_index":863,"title":{},"body":{"controllers/UserController.html":{}}}],["id'})@apibody({type",{"_index":233,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["id'})@useguards(new",{"_index":455,"title":{},"body":{"controllers/DeviceController.html":{},"controllers/PanelController.html":{}}}],["id'})@useguards(undefined)@apiokresponse({description",{"_index":332,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["id,@body",{"_index":355,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{}}}],["identifier",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["if(cluster.ismaster",{"_index":400,"title":{},"body":{"injectables/ClusterService.html":{}}}],["if(duplicateemail",{"_index":959,"title":{},"body":{"injectables/UserService.html":{}}}],["if(duplicateusername",{"_index":962,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{}}}],["import",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{}}}],["imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{}}}],["in_out",{"_index":436,"title":{},"body":{"classes/Device.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{}}}],["injectable",{"_index":28,"title":{"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{},"coverage.html":{}}}],["injectables",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{},"overview.html":{}}}],["injectrepository",{"_index":283,"title":{},"body":{"injectables/BillingService.html":{},"injectables/ClientService.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}}}],["injectrepository(client",{"_index":377,"title":{},"body":{"injectables/ClientService.html":{}}}],["injectrepository(device",{"_index":493,"title":{},"body":{"injectables/DeviceService.html":{}}}],["inspired",{"_index":1081,"title":{},"body":{"index.html":{}}}],["install_date",{"_index":714,"title":{},"body":{"classes/Panel.html":{}}}],["installation",{"_index":1086,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1088,"title":{},"body":{"index.html":{}}}],["ioctl",{"_index":499,"title":{"classes/IoCtl.html":{}},"body":{"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"classes/PaginateIoctl.html":{},"coverage.html":{}}}],["ioctl.controller",{"_index":598,"title":{},"body":{"modules/IoCtlModule.html":{}}}],["ioctl.entity",{"_index":584,"title":{},"body":{"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{}}}],["ioctl.service",{"_index":581,"title":{},"body":{"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{}}}],["ioctlcontroller",{"_index":565,"title":{"controllers/IoCtlController.html":{}},"body":{"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"coverage.html":{}}}],["ioctlmodule",{"_index":64,"title":{"modules/IoCtlModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IoCtlModule.html":{},"modules.html":{},"overview.html":{}}}],["ioctlresult",{"_index":612,"title":{},"body":{"injectables/IoctlService.html":{}}}],["ioctlservice",{"_index":580,"title":{"injectables/IoctlService.html":{}},"body":{"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"coverage.html":{},"overview.html":{}}}],["ir",{"_index":504,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["irms",{"_index":505,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["isc",{"_index":506,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["join",{"_index":1115,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":200,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/Device.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/Zona.html":{}}}],["jwt",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":243,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/ZonaController.html":{},"coverage.html":{}}}],["jwtauthguard())@apiokresponse({description",{"_index":214,"title":{},"body":{"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/ZonaController.html":{}}}],["jwtfromrequest",{"_index":639,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":629,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":129,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1123,"title":{},"body":{"index.html":{}}}],["kwh",{"_index":507,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["latittude",{"_index":970,"title":{},"body":{"classes/Zona.html":{}}}],["legend",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["license",{"_index":1129,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1105,"title":{},"body":{"index.html":{}}}],["limit",{"_index":563,"title":{},"body":{"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{}}}],["limit(paginate.limit",{"_index":617,"title":{},"body":{"injectables/IoctlService.html":{}}}],["login",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login'})@apibadrequestresponse({description",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["longitude",{"_index":971,"title":{},"body":{"classes/Zona.html":{}}}],["mail",{"_index":645,"title":{"classes/Mail.html":{}},"body":{"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{}}}],["mail.controller",{"_index":685,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.entity",{"_index":674,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["mail.service",{"_index":673,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mailcontroller",{"_index":663,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailmodule",{"_index":65,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailrepo",{"_index":690,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":672,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["mail})@apibearerauth()@useguards(new",{"_index":669,"title":{},"body":{"controllers/MailController.html":{}}}],["manytoone",{"_index":449,"title":{},"body":{"classes/Device.html":{},"classes/Panel.html":{},"classes/ReportSavingDetail.html":{}}}],["manytoone(undefined",{"_index":439,"title":{},"body":{"classes/Device.html":{},"classes/Panel.html":{},"classes/ReportSavingDetail.html":{}}}],["matching",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":907,"title":{},"body":{"controllers/UserController.html":{}}}],["max_kwh",{"_index":414,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["max_kwh_in",{"_index":797,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["max_kwh_out",{"_index":798,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["max_time",{"_index":415,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["max_time_in",{"_index":799,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["max_time_out",{"_index":800,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["metadata",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{}}}],["min_kwh",{"_index":416,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["min_kwh_in",{"_index":801,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["min_kwh_out",{"_index":802,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["min_time",{"_index":417,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["min_time_in",{"_index":803,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["min_time_out",{"_index":804,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["miscellaneous",{"_index":1067,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1104,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1094,"title":{},"body":{"index.html":{}}}],["module",{"_index":48,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/__utils/cluster.service",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/auth/auth.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/billing/billing.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/clients/client.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/device/device.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/ioctl/ioctl.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/mail/mail.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/panels/panel.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/users/users.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/components/zona/zona.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["month_periode",{"_index":418,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["more",{"_index":1118,"title":{},"body":{"index.html":{}}}],["multer",{"_index":873,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["mysql",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1124,"title":{},"body":{"index.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}}}],["nest",{"_index":1083,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1128,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"controllers/DeviceController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":877,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"controllers/ZonaController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":379,"title":{},"body":{"injectables/ClientService.html":{},"dependencies.html":{}}}],["new",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":1073,"title":{},"body":{"index.html":{}}}],["notacceptableexception",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":1087,"title":{},"body":{"index.html":{}}}],["number",{"_index":188,"title":{},"body":{"classes/Billing.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{}}}],["number(id",{"_index":890,"title":{},"body":{"controllers/UserController.html":{}}}],["number(paginate.limit",{"_index":592,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["number(paginate.page",{"_index":590,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["number})@apiquery({name",{"_index":575,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["number})@useguards(new",{"_index":576,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["numcpus",{"_index":398,"title":{},"body":{"injectables/ClusterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":895,"title":{},"body":{"controllers/UserController.html":{}}}],["offset(skippeditems",{"_index":616,"title":{},"body":{"injectables/IoctlService.html":{}}}],["ondelete",{"_index":305,"title":{},"body":{"classes/Client.html":{},"classes/Panel.html":{}}}],["onetomany",{"_index":312,"title":{},"body":{"classes/Client.html":{},"classes/Panel.html":{}}}],["onetomany(undefined",{"_index":301,"title":{},"body":{"classes/Client.html":{},"classes/Panel.html":{}}}],["onetoone",{"_index":199,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/Zona.html":{}}}],["onetoone(undefined",{"_index":185,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/Zona.html":{}}}],["onupdate",{"_index":303,"title":{},"body":{"classes/Client.html":{},"classes/Panel.html":{}}}],["open",{"_index":1106,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}}}],["orderby('id",{"_index":614,"title":{},"body":{"injectables/IoctlService.html":{}}}],["os",{"_index":397,"title":{},"body":{"injectables/ClusterService.html":{}}}],["os.cpus().length",{"_index":399,"title":{},"body":{"injectables/ClusterService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["overview",{"_index":1133,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1030,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":562,"title":{},"body":{"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{}}}],["paginate",{"_index":578,"title":{},"body":{"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{}}}],["paginate.limit",{"_index":591,"title":{},"body":{"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{}}}],["paginate.page",{"_index":589,"title":{},"body":{"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{}}}],["paginategetall",{"_index":601,"title":{},"body":{"injectables/IoctlService.html":{}}}],["paginategetall(paginate",{"_index":605,"title":{},"body":{"injectables/IoctlService.html":{}}}],["paginateioctl",{"_index":560,"title":{"classes/PaginateIoctl.html":{}},"body":{"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"classes/PaginateIoctl.html":{},"coverage.html":{}}}],["paginateioctl(@query",{"_index":588,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["paginateioctl(paginate",{"_index":570,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["pagination",{"_index":571,"title":{"classes/Pagination.html":{}},"body":{"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"classes/Pagination.html":{},"coverage.html":{}}}],["panel",{"_index":308,"title":{"classes/Panel.html":{}},"body":{"classes/Client.html":{},"classes/Device.html":{},"modules/DeviceModule.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSavingDetail.html":{},"coverage.html":{}}}],["panel.client",{"_index":320,"title":{},"body":{"classes/Client.html":{}}}],["panel.controller",{"_index":755,"title":{},"body":{"modules/PanelModule.html":{}}}],["panel.devices",{"_index":451,"title":{},"body":{"classes/Device.html":{},"classes/ReportSavingDetail.html":{}}}],["panel.entity",{"_index":743,"title":{},"body":{"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{}}}],["panel.service",{"_index":745,"title":{},"body":{"controllers/PanelController.html":{},"modules/PanelModule.html":{}}}],["panelcontroller",{"_index":733,"title":{"controllers/PanelController.html":{}},"body":{"controllers/PanelController.html":{},"modules/PanelModule.html":{},"coverage.html":{}}}],["panelid",{"_index":437,"title":{},"body":{"classes/Device.html":{},"classes/ReportSavingDetail.html":{}}}],["panelmodule",{"_index":66,"title":{"modules/PanelModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PanelModule.html":{},"modules.html":{},"overview.html":{}}}],["panelrepo",{"_index":760,"title":{},"body":{"injectables/PanelService.html":{}}}],["panels",{"_index":294,"title":{},"body":{"classes/Client.html":{},"injectables/ClientService.html":{}}}],["panels/panel.entity",{"_index":314,"title":{},"body":{"classes/Client.html":{},"classes/Device.html":{},"modules/DeviceModule.html":{}}}],["panelservice",{"_index":744,"title":{"injectables/PanelService.html":{}},"body":{"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"coverage.html":{},"overview.html":{}}}],["panel})@useguards(new",{"_index":740,"title":{},"body":{"controllers/PanelController.html":{}}}],["param",{"_index":237,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}}}],["passhash",{"_index":952,"title":{},"body":{"injectables/UserService.html":{}}}],["passport",{"_index":634,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{}}}],["passportmodule.register",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{}}}],["passportstrategy",{"_index":635,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":637,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":648,"title":{},"body":{"classes/Mail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["password).digest('hex",{"_index":953,"title":{},"body":{"injectables/UserService.html":{}}}],["path",{"_index":875,"title":{},"body":{"controllers/UserController.html":{}}}],["payload",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["payload.password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["periode",{"_index":776,"title":{},"body":{"classes/ReportSaving.html":{}}}],["periode_type",{"_index":777,"title":{},"body":{"classes/ReportSaving.html":{}}}],["pf",{"_index":508,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["phone",{"_index":295,"title":{},"body":{"classes/Client.html":{}}}],["photo",{"_index":828,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["please",{"_index":1116,"title":{},"body":{"index.html":{}}}],["port",{"_index":649,"title":{},"body":{"classes/Mail.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["post('/')@apibody({type",{"_index":226,"title":{},"body":{"controllers/BillingController.html":{},"controllers/MailController.html":{},"controllers/UserController.html":{}}}],["post('/foto/:id",{"_index":892,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/login",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login')@apiokresponse({description",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["precision",{"_index":423,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{}}}],["prefix",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["primarygeneratedcolumn",{"_index":193,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"classes/Zona.html":{}}}],["primasaver2020",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["private",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{}}}],["process.pid",{"_index":403,"title":{},"body":{"injectables/ClusterService.html":{}}}],["production",{"_index":1096,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1072,"title":{},"body":{"index.html":{}}}],["project",{"_index":1107,"title":{},"body":{"index.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{}}}],["properties",{"_index":173,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{}}}],["providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["public",{"_index":366,"title":{},"body":{"injectables/ClientService.html":{}}}],["public/uploads",{"_index":901,"title":{},"body":{"controllers/UserController.html":{}}}],["put",{"_index":238,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["put('/:id",{"_index":258,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["put('/:id')@apiparam({name",{"_index":232,"title":{},"body":{"controllers/BillingController.html":{},"controllers/MailController.html":{}}}],["query",{"_index":579,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["randomname",{"_index":905,"title":{},"body":{"controllers/UserController.html":{}}}],["randomname}${extname(file.originalname",{"_index":910,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":1117,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/IoctlService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":961,"title":{},"body":{"injectables/UserService.html":{}}}],["relations",{"_index":384,"title":{},"body":{"injectables/ClientService.html":{},"injectables/PanelService.html":{}}}],["reportid",{"_index":805,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["reportsaving",{"_index":773,"title":{"classes/ReportSaving.html":{}},"body":{"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"coverage.html":{}}}],["reportsaving.entity",{"_index":824,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["reportsaving.reportsavingdetail",{"_index":825,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["reportsavingdetail",{"_index":715,"title":{"classes/ReportSavingDetail.html":{}},"body":{"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"coverage.html":{}}}],["reportsavingdetail.entity",{"_index":790,"title":{},"body":{"classes/ReportSaving.html":{}}}],["reportsavingdetail.panel",{"_index":732,"title":{},"body":{"classes/Panel.html":{}}}],["reportsavingdetail.reportsaving",{"_index":791,"title":{},"body":{"classes/ReportSaving.html":{}}}],["repository",{"_index":273,"title":{},"body":{"injectables/BillingService.html":{},"injectables/ClientService.html":{},"injectables/DeviceService.html":{},"injectables/IoctlService.html":{},"injectables/MailService.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{},"injectables/ZonaService.html":{},"index.html":{}}}],["req",{"_index":903,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":573,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["reset",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}],["restarting",{"_index":409,"title":{},"body":{"injectables/ClusterService.html":{}}}],["result",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{}}}],["returns",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/ZonaController.html":{},"injectables/ZonaService.html":{}}}],["rimraf",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1091,"title":{},"body":{"index.html":{}}}],["running",{"_index":404,"title":{},"body":{"injectables/ClusterService.html":{}}}],["rxjs",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["saving",{"_index":778,"title":{},"body":{"classes/ReportSaving.html":{}}}],["scalable",{"_index":1077,"title":{},"body":{"index.html":{}}}],["scale",{"_index":425,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{}}}],["schema",{"_index":894,"title":{},"body":{"controllers/UserController.html":{}}}],["secret",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":641,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["serial_number",{"_index":716,"title":{},"body":{"classes/Panel.html":{}}}],["server",{"_index":402,"title":{},"body":{"injectables/ClusterService.html":{},"index.html":{}}}],["setphoto",{"_index":927,"title":{},"body":{"injectables/UserService.html":{}}}],["setphoto(id",{"_index":942,"title":{},"body":{"injectables/UserService.html":{}}}],["show",{"_index":208,"title":{},"body":{"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["show(@param('id",{"_index":255,"title":{},"body":{"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["show(id",{"_index":222,"title":{},"body":{"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["side",{"_index":1078,"title":{},"body":{"index.html":{}}}],["skippeditems",{"_index":608,"title":{},"body":{"injectables/IoctlService.html":{}}}],["smtp_auth",{"_index":650,"title":{},"body":{"classes/Mail.html":{}}}],["smtp_secure",{"_index":651,"title":{},"body":{"classes/Mail.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"modules/DeviceModule.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"modules/IoCtlModule.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"modules/PanelModule.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"index.html":{}}}],["sponsors",{"_index":1110,"title":{},"body":{"index.html":{}}}],["src/.../cluster.service.ts",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":1010,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/__utils/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/modules/__utils/admin.guard.ts:5",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/modules/__utils/admin.guard.ts:9",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/modules/__utils/cluster.service.ts",{"_index":388,"title":{},"body":{"injectables/ClusterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/__utils/cluster.service.ts:8",{"_index":393,"title":{},"body":{"injectables/ClusterService.html":{}}}],["src/modules/__utils/jwt",{"_index":244,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/ZonaController.html":{},"coverage.html":{}}}],["src/modules/__utils/jwt.strategy",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/__utils/jwt.strategy.ts",{"_index":625,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/__utils/jwt.strategy.ts:17",{"_index":631,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/__utils/jwt.strategy.ts:7",{"_index":627,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/__utils/pagination",{"_index":585,"title":{},"body":{"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{}}}],["src/modules/__utils/pagination.ts",{"_index":707,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["src/modules/__utils/pagination.ts:2",{"_index":709,"title":{},"body":{"classes/Pagination.html":{}}}],["src/modules/__utils/pagination.ts:3",{"_index":708,"title":{},"body":{"classes/Pagination.html":{}}}],["src/modules/components/auth/auth.controller.ts",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/components/auth/auth.controller.ts:14",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/components/auth/auth.module.ts",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/components/auth/auth.service.ts",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/components/auth/auth.service.ts:13",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/components/auth/auth.service.ts:21",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/components/auth/auth.service.ts:7",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/components/billing/billing.controller.ts",{"_index":206,"title":{},"body":{"controllers/BillingController.html":{},"coverage.html":{}}}],["src/modules/components/billing/billing.controller.ts:24",{"_index":221,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/modules/components/billing/billing.controller.ts:38",{"_index":224,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/modules/components/billing/billing.controller.ts:52",{"_index":230,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/modules/components/billing/billing.controller.ts:67",{"_index":235,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/modules/components/billing/billing.controller.ts:81",{"_index":218,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/modules/components/billing/billing.entity.ts",{"_index":172,"title":{},"body":{"classes/Billing.html":{},"coverage.html":{}}}],["src/modules/components/billing/billing.entity.ts:12",{"_index":183,"title":{},"body":{"classes/Billing.html":{}}}],["src/modules/components/billing/billing.entity.ts:16",{"_index":184,"title":{},"body":{"classes/Billing.html":{}}}],["src/modules/components/billing/billing.entity.ts:20",{"_index":189,"title":{},"body":{"classes/Billing.html":{}}}],["src/modules/components/billing/billing.entity.ts:24",{"_index":187,"title":{},"body":{"classes/Billing.html":{}}}],["src/modules/components/billing/billing.entity.ts:27",{"_index":192,"title":{},"body":{"classes/Billing.html":{}}}],["src/modules/components/billing/billing.entity.ts:30",{"_index":196,"title":{},"body":{"classes/Billing.html":{}}}],["src/modules/components/billing/billing.entity.ts:8",{"_index":194,"title":{},"body":{"classes/Billing.html":{}}}],["src/modules/components/billing/billing.module.ts",{"_index":266,"title":{},"body":{"modules/BillingModule.html":{}}}],["src/modules/components/billing/billing.service.ts",{"_index":269,"title":{},"body":{"injectables/BillingService.html":{},"coverage.html":{}}}],["src/modules/components/billing/billing.service.ts:10",{"_index":281,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/modules/components/billing/billing.service.ts:14",{"_index":280,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/modules/components/billing/billing.service.ts:18",{"_index":277,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/modules/components/billing/billing.service.ts:22",{"_index":282,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/modules/components/billing/billing.service.ts:26",{"_index":278,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/modules/components/billing/billing.service.ts:7",{"_index":274,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/modules/components/clients/client.controller.ts",{"_index":322,"title":{},"body":{"controllers/ClientController.html":{},"coverage.html":{}}}],["src/modules/components/clients/client.controller.ts:20",{"_index":335,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/components/clients/client.controller.ts:30",{"_index":338,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/components/clients/client.controller.ts:40",{"_index":330,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/components/clients/client.controller.ts:51",{"_index":340,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/components/clients/client.controller.ts:61",{"_index":333,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/modules/components/clients/client.entity.ts",{"_index":290,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/modules/components/clients/client.entity.ts:11",{"_index":307,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.entity.ts:15",{"_index":299,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.entity.ts:19",{"_index":297,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.entity.ts:23",{"_index":310,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.entity.ts:27",{"_index":298,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.entity.ts:31",{"_index":311,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.entity.ts:41",{"_index":306,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.entity.ts:51",{"_index":309,"title":{},"body":{"classes/Client.html":{}}}],["src/modules/components/clients/client.module.ts",{"_index":360,"title":{},"body":{"modules/ClientModule.html":{}}}],["src/modules/components/clients/client.service.ts",{"_index":363,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/modules/components/clients/client.service.ts:12",{"_index":378,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/clients/client.service.ts:17",{"_index":373,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/clients/client.service.ts:21",{"_index":371,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/clients/client.service.ts:25",{"_index":374,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/clients/client.service.ts:29",{"_index":376,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/clients/client.service.ts:33",{"_index":372,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/clients/client.service.ts:37",{"_index":375,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/clients/client.service.ts:8",{"_index":370,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/modules/components/device/device.controller.ts",{"_index":453,"title":{},"body":{"controllers/DeviceController.html":{},"coverage.html":{}}}],["src/modules/components/device/device.controller.ts:21",{"_index":458,"title":{},"body":{"controllers/DeviceController.html":{}}}],["src/modules/components/device/device.controller.ts:31",{"_index":459,"title":{},"body":{"controllers/DeviceController.html":{}}}],["src/modules/components/device/device.controller.ts:41",{"_index":463,"title":{},"body":{"controllers/DeviceController.html":{}}}],["src/modules/components/device/device.controller.ts:52",{"_index":464,"title":{},"body":{"controllers/DeviceController.html":{}}}],["src/modules/components/device/device.controller.ts:62",{"_index":456,"title":{},"body":{"controllers/DeviceController.html":{}}}],["src/modules/components/device/device.entity.ts",{"_index":435,"title":{},"body":{"classes/Device.html":{},"coverage.html":{}}}],["src/modules/components/device/device.entity.ts:19",{"_index":444,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.entity.ts:23",{"_index":443,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.entity.ts:27",{"_index":448,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.entity.ts:31",{"_index":445,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.entity.ts:35",{"_index":442,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.entity.ts:39",{"_index":447,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.entity.ts:45",{"_index":441,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.entity.ts:51",{"_index":446,"title":{},"body":{"classes/Device.html":{}}}],["src/modules/components/device/device.module.ts",{"_index":478,"title":{},"body":{"modules/DeviceModule.html":{}}}],["src/modules/components/device/device.service.ts",{"_index":481,"title":{},"body":{"injectables/DeviceService.html":{},"coverage.html":{}}}],["src/modules/components/device/device.service.ts:13",{"_index":491,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/modules/components/device/device.service.ts:17",{"_index":490,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/modules/components/device/device.service.ts:21",{"_index":487,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/modules/components/device/device.service.ts:25",{"_index":492,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/modules/components/device/device.service.ts:29",{"_index":488,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/modules/components/device/device.service.ts:33",{"_index":489,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/modules/components/device/device.service.ts:7",{"_index":484,"title":{},"body":{"injectables/DeviceService.html":{}}}],["src/modules/components/ioctl/ioctl.controller.ts",{"_index":566,"title":{},"body":{"controllers/IoCtlController.html":{},"coverage.html":{}}}],["src/modules/components/ioctl/ioctl.controller.ts:38",{"_index":577,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["src/modules/components/ioctl/ioctl.controller.ts:52",{"_index":569,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts",{"_index":500,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{},"coverage.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:12",{"_index":543,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:15",{"_index":527,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:18",{"_index":542,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:21",{"_index":529,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:24",{"_index":535,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:27",{"_index":537,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:30",{"_index":538,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:33",{"_index":536,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:36",{"_index":552,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:39",{"_index":554,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:42",{"_index":555,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:45",{"_index":553,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:48",{"_index":533,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:51",{"_index":559,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:54",{"_index":556,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:57",{"_index":557,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:6",{"_index":534,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:60",{"_index":558,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:63",{"_index":551,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:66",{"_index":548,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:69",{"_index":549,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:72",{"_index":550,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:75",{"_index":547,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:78",{"_index":544,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:81",{"_index":545,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:84",{"_index":546,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:87",{"_index":539,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:9",{"_index":528,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:90",{"_index":540,"title":{},"body":{"classes/IoCtl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:94",{"_index":703,"title":{},"body":{"classes/PaginateIoctl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:95",{"_index":705,"title":{},"body":{"classes/PaginateIoctl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:96",{"_index":704,"title":{},"body":{"classes/PaginateIoctl.html":{}}}],["src/modules/components/ioctl/ioctl.entity.ts:97",{"_index":706,"title":{},"body":{"classes/PaginateIoctl.html":{}}}],["src/modules/components/ioctl/ioctl.module.ts",{"_index":597,"title":{},"body":{"modules/IoCtlModule.html":{}}}],["src/modules/components/ioctl/ioctl.service.ts",{"_index":600,"title":{},"body":{"injectables/IoctlService.html":{},"coverage.html":{}}}],["src/modules/components/ioctl/ioctl.service.ts:11",{"_index":606,"title":{},"body":{"injectables/IoctlService.html":{}}}],["src/modules/components/ioctl/ioctl.service.ts:29",{"_index":604,"title":{},"body":{"injectables/IoctlService.html":{}}}],["src/modules/components/ioctl/ioctl.service.ts:8",{"_index":603,"title":{},"body":{"injectables/IoctlService.html":{}}}],["src/modules/components/mail/mail.controller.ts",{"_index":664,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/modules/components/mail/mail.controller.ts:25",{"_index":666,"title":{},"body":{"controllers/MailController.html":{}}}],["src/modules/components/mail/mail.controller.ts:39",{"_index":667,"title":{},"body":{"controllers/MailController.html":{}}}],["src/modules/components/mail/mail.controller.ts:54",{"_index":670,"title":{},"body":{"controllers/MailController.html":{}}}],["src/modules/components/mail/mail.controller.ts:69",{"_index":671,"title":{},"body":{"controllers/MailController.html":{}}}],["src/modules/components/mail/mail.controller.ts:83",{"_index":665,"title":{},"body":{"controllers/MailController.html":{}}}],["src/modules/components/mail/mail.entity.ts",{"_index":646,"title":{},"body":{"classes/Mail.html":{},"coverage.html":{}}}],["src/modules/components/mail/mail.entity.ts:11",{"_index":658,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:15",{"_index":660,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:19",{"_index":659,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:23",{"_index":654,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:27",{"_index":657,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:31",{"_index":662,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:35",{"_index":656,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:38",{"_index":653,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:41",{"_index":661,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.entity.ts:7",{"_index":655,"title":{},"body":{"classes/Mail.html":{}}}],["src/modules/components/mail/mail.module.ts",{"_index":684,"title":{},"body":{"modules/MailModule.html":{}}}],["src/modules/components/mail/mail.service.ts",{"_index":687,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/modules/components/mail/mail.service.ts:11",{"_index":695,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/components/mail/mail.service.ts:15",{"_index":694,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/components/mail/mail.service.ts:19",{"_index":692,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/components/mail/mail.service.ts:23",{"_index":696,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/components/mail/mail.service.ts:27",{"_index":693,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/components/mail/mail.service.ts:7",{"_index":689,"title":{},"body":{"injectables/MailService.html":{}}}],["src/modules/components/panels/panel.controller.ts",{"_index":734,"title":{},"body":{"controllers/PanelController.html":{},"coverage.html":{}}}],["src/modules/components/panels/panel.controller.ts:100",{"_index":742,"title":{},"body":{"controllers/PanelController.html":{}}}],["src/modules/components/panels/panel.controller.ts:116",{"_index":736,"title":{},"body":{"controllers/PanelController.html":{}}}],["src/modules/components/panels/panel.controller.ts:49",{"_index":737,"title":{},"body":{"controllers/PanelController.html":{}}}],["src/modules/components/panels/panel.controller.ts:65",{"_index":738,"title":{},"body":{"controllers/PanelController.html":{}}}],["src/modules/components/panels/panel.controller.ts:81",{"_index":741,"title":{},"body":{"controllers/PanelController.html":{}}}],["src/modules/components/panels/panel.entity.ts",{"_index":710,"title":{},"body":{"classes/Panel.html":{},"coverage.html":{}}}],["src/modules/components/panels/panel.entity.ts:21",{"_index":723,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:25",{"_index":725,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:29",{"_index":727,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:33",{"_index":722,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:37",{"_index":724,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:41",{"_index":718,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:45",{"_index":728,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:49",{"_index":720,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:55",{"_index":719,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:64",{"_index":721,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.entity.ts:73",{"_index":726,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/components/panels/panel.module.ts",{"_index":754,"title":{},"body":{"modules/PanelModule.html":{}}}],["src/modules/components/panels/panel.service.ts",{"_index":757,"title":{},"body":{"injectables/PanelService.html":{},"coverage.html":{}}}],["src/modules/components/panels/panel.service.ts:11",{"_index":765,"title":{},"body":{"injectables/PanelService.html":{}}}],["src/modules/components/panels/panel.service.ts:15",{"_index":764,"title":{},"body":{"injectables/PanelService.html":{}}}],["src/modules/components/panels/panel.service.ts:19",{"_index":762,"title":{},"body":{"injectables/PanelService.html":{}}}],["src/modules/components/panels/panel.service.ts:23",{"_index":766,"title":{},"body":{"injectables/PanelService.html":{}}}],["src/modules/components/panels/panel.service.ts:27",{"_index":763,"title":{},"body":{"injectables/PanelService.html":{}}}],["src/modules/components/panels/panel.service.ts:7",{"_index":759,"title":{},"body":{"injectables/PanelService.html":{}}}],["src/modules/components/users/user.controller.ts",{"_index":844,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/components/users/user.controller.ts:21",{"_index":855,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/components/users/user.controller.ts:27",{"_index":851,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/components/users/user.controller.ts:37",{"_index":856,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/components/users/user.controller.ts:47",{"_index":854,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/components/users/user.controller.ts:58",{"_index":859,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/components/users/user.controller.ts:91",{"_index":866,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/components/users/user.entity",{"_index":920,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/components/users/user.entity.ts",{"_index":826,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{},"coverage.html":{}}}],["src/modules/components/users/user.entity.ts:12",{"_index":832,"title":{},"body":{"classes/User.html":{}}}],["src/modules/components/users/user.entity.ts:16",{"_index":835,"title":{},"body":{"classes/User.html":{}}}],["src/modules/components/users/user.entity.ts:19",{"_index":837,"title":{},"body":{"classes/User.html":{}}}],["src/modules/components/users/user.entity.ts:24",{"_index":833,"title":{},"body":{"classes/User.html":{}}}],["src/modules/components/users/user.entity.ts:28",{"_index":830,"title":{},"body":{"classes/User.html":{}}}],["src/modules/components/users/user.entity.ts:32",{"_index":834,"title":{},"body":{"classes/User.html":{}}}],["src/modules/components/users/user.entity.ts:37",{"_index":915,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/modules/components/users/user.entity.ts:40",{"_index":916,"title":{},"body":{"classes/UserLogin.html":{}}}],["src/modules/components/users/user.entity.ts:8",{"_index":831,"title":{},"body":{"classes/User.html":{}}}],["src/modules/components/users/user.service.ts",{"_index":922,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/components/users/user.service.ts:13",{"_index":935,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:17",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:25",{"_index":941,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:33",{"_index":939,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:43",{"_index":934,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:47",{"_index":931,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:65",{"_index":946,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:69",{"_index":932,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:73",{"_index":944,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/user.service.ts:9",{"_index":929,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/components/users/users.module.ts",{"_index":919,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/components/zona/zona.controller.ts",{"_index":985,"title":{},"body":{"controllers/ZonaController.html":{},"coverage.html":{}}}],["src/modules/components/zona/zona.controller.ts:19",{"_index":986,"title":{},"body":{"controllers/ZonaController.html":{}}}],["src/modules/components/zona/zona.entity.ts",{"_index":969,"title":{},"body":{"classes/Zona.html":{},"coverage.html":{}}}],["src/modules/components/zona/zona.entity.ts:10",{"_index":982,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:13",{"_index":981,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:16",{"_index":978,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:19",{"_index":979,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:22",{"_index":975,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:25",{"_index":976,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:28",{"_index":980,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:32",{"_index":974,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.entity.ts:7",{"_index":977,"title":{},"body":{"classes/Zona.html":{}}}],["src/modules/components/zona/zona.module.ts",{"_index":996,"title":{},"body":{"modules/ZonaModule.html":{}}}],["src/modules/components/zona/zona.service.ts",{"_index":999,"title":{},"body":{"injectables/ZonaService.html":{},"coverage.html":{}}}],["src/modules/components/zona/zona.service.ts:10",{"_index":1003,"title":{},"body":{"injectables/ZonaService.html":{}}}],["src/modules/components/zona/zona.service.ts:7",{"_index":1001,"title":{},"body":{"injectables/ZonaService.html":{}}}],["src/modules/decorators/user.decorator.ts",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/models/currentmonthdashboard.ts",{"_index":412,"title":{},"body":{"classes/CurrentMonthDashboard.html":{},"coverage.html":{}}}],["src/modules/models/currentmonthdashboard.ts:12",{"_index":433,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["src/modules/models/currentmonthdashboard.ts:20",{"_index":431,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["src/modules/models/currentmonthdashboard.ts:28",{"_index":428,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["src/modules/models/currentmonthdashboard.ts:33",{"_index":432,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["src/modules/models/currentmonthdashboard.ts:38",{"_index":430,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["src/modules/models/currentmonthdashboard.ts:6",{"_index":420,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["src/modules/models/currentmonthdashboard.ts:9",{"_index":419,"title":{},"body":{"classes/CurrentMonthDashboard.html":{}}}],["src/modules/models/reportsaving.entity.ts",{"_index":774,"title":{},"body":{"classes/ReportSaving.html":{},"coverage.html":{}}}],["src/modules/models/reportsaving.entity.ts:10",{"_index":782,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:13",{"_index":781,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:21",{"_index":787,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:24",{"_index":785,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:27",{"_index":784,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:35",{"_index":788,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:43",{"_index":789,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:47",{"_index":786,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsaving.entity.ts:7",{"_index":783,"title":{},"body":{"classes/ReportSaving.html":{}}}],["src/modules/models/reportsavingdetail.entity",{"_index":729,"title":{},"body":{"classes/Panel.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts",{"_index":792,"title":{},"body":{"classes/ReportSavingDetail.html":{},"coverage.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:16",{"_index":806,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:24",{"_index":807,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:32",{"_index":815,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:40",{"_index":811,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:48",{"_index":816,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:56",{"_index":812,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:61",{"_index":817,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:66",{"_index":813,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:71",{"_index":818,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:76",{"_index":814,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:79",{"_index":808,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:8",{"_index":810,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:82",{"_index":809,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:85",{"_index":821,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:88",{"_index":820,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:92",{"_index":822,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["src/modules/models/reportsavingdetail.entity.ts:98",{"_index":819,"title":{},"body":{"classes/ReportSavingDetail.html":{}}}],["start",{"_index":1092,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1095,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1097,"title":{},"body":{"index.html":{}}}],["start_report",{"_index":717,"title":{},"body":{"classes/Panel.html":{}}}],["started",{"_index":1071,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1085,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":389,"title":{},"body":{"injectables/ClusterService.html":{},"dependencies.html":{}}}],["status",{"_index":438,"title":{},"body":{"classes/Device.html":{}}}],["stay",{"_index":1120,"title":{},"body":{"index.html":{}}}],["storage",{"_index":899,"title":{},"body":{"controllers/UserController.html":{}}}],["store",{"_index":209,"title":{},"body":{"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["store(@body",{"_index":472,"title":{},"body":{"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["store(billing",{"_index":225,"title":{},"body":{"controllers/BillingController.html":{}}}],["store(device",{"_index":460,"title":{},"body":{"controllers/DeviceController.html":{}}}],["store(mail",{"_index":668,"title":{},"body":{"controllers/MailController.html":{}}}],["store(panel",{"_index":739,"title":{},"body":{"controllers/PanelController.html":{}}}],["strategy",{"_index":633,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":181,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"classes/IoCtl.html":{},"classes/Mail.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{}}}],["success",{"_index":215,"title":{},"body":{"controllers/BillingController.html":{},"controllers/IoCtlController.html":{},"controllers/ZonaController.html":{}}}],["successful",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["sucess",{"_index":328,"title":{},"body":{"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{}}}],["sum_delta_in",{"_index":779,"title":{},"body":{"classes/ReportSaving.html":{}}}],["sum_delta_out",{"_index":780,"title":{},"body":{"classes/ReportSaving.html":{}}}],["super",{"_index":638,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(clientrepo",{"_index":380,"title":{},"body":{"injectables/ClientService.html":{}}}],["super.canactivate(context",{"_index":624,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1111,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1131,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":963,"title":{},"body":{"injectables/UserService.html":{}}}],["test",{"_index":1100,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1103,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1102,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1099,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1109,"title":{},"body":{"index.html":{}}}],["this.authservice.createtoken(user",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.billingrepo.delete(id",{"_index":289,"title":{},"body":{"injectables/BillingService.html":{}}}],["this.billingrepo.find",{"_index":285,"title":{},"body":{"injectables/BillingService.html":{}}}],["this.billingrepo.findone(id",{"_index":286,"title":{},"body":{"injectables/BillingService.html":{}}}],["this.billingrepo.save(billing",{"_index":287,"title":{},"body":{"injectables/BillingService.html":{}}}],["this.billingrepo.update(id",{"_index":288,"title":{},"body":{"injectables/BillingService.html":{}}}],["this.billingservice.create(billing",{"_index":257,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.delete(id",{"_index":263,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.findone(id",{"_index":256,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.getall",{"_index":253,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.update(id",{"_index":260,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.clientrepo.delete(id",{"_index":387,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.find",{"_index":381,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.findone(id",{"_index":383,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.save(client",{"_index":382,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepo.update(id",{"_index":386,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientservice.create(client",{"_index":354,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.delete(id",{"_index":357,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.getbyid(id",{"_index":352,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.getdevices",{"_index":349,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.update(id",{"_index":356,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.devicerepo.delete(id",{"_index":498,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.devicerepo.find",{"_index":494,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.devicerepo.findone(id",{"_index":495,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.devicerepo.save(device",{"_index":496,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.devicerepo.update(id",{"_index":497,"title":{},"body":{"injectables/DeviceService.html":{}}}],["this.deviceservice.create(device",{"_index":473,"title":{},"body":{"controllers/DeviceController.html":{}}}],["this.deviceservice.delete(id",{"_index":475,"title":{},"body":{"controllers/DeviceController.html":{}}}],["this.deviceservice.findone(id",{"_index":471,"title":{},"body":{"controllers/DeviceController.html":{}}}],["this.deviceservice.getall",{"_index":470,"title":{},"body":{"controllers/DeviceController.html":{}}}],["this.deviceservice.update(id",{"_index":474,"title":{},"body":{"controllers/DeviceController.html":{}}}],["this.getbyemail(user.email",{"_index":956,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getbyusername(user.username",{"_index":958,"title":{},"body":{"injectables/UserService.html":{}}}],["this.ioctl.count",{"_index":611,"title":{},"body":{"injectables/IoctlService.html":{}}}],["this.ioctl.createquerybuilder",{"_index":613,"title":{},"body":{"injectables/IoctlService.html":{}}}],["this.ioctl.find",{"_index":619,"title":{},"body":{"injectables/IoctlService.html":{}}}],["this.ioctlservice.getall",{"_index":594,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["this.ioctlservice.paginategetall",{"_index":593,"title":{},"body":{"controllers/IoCtlController.html":{}}}],["this.jwtservice.sign({id",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailrepo.delete(id",{"_index":702,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailrepo.find",{"_index":698,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailrepo.findone(id",{"_index":699,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailrepo.save(mail",{"_index":700,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailrepo.update(id",{"_index":701,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.create(mail",{"_index":679,"title":{},"body":{"controllers/MailController.html":{}}}],["this.mailservice.delete(id",{"_index":681,"title":{},"body":{"controllers/MailController.html":{}}}],["this.mailservice.findone(id",{"_index":678,"title":{},"body":{"controllers/MailController.html":{}}}],["this.mailservice.getall",{"_index":677,"title":{},"body":{"controllers/MailController.html":{}}}],["this.mailservice.update(id",{"_index":680,"title":{},"body":{"controllers/MailController.html":{}}}],["this.panelrepo.delete(id",{"_index":772,"title":{},"body":{"injectables/PanelService.html":{}}}],["this.panelrepo.find",{"_index":768,"title":{},"body":{"injectables/PanelService.html":{}}}],["this.panelrepo.findone(id",{"_index":769,"title":{},"body":{"injectables/PanelService.html":{}}}],["this.panelrepo.save(panel",{"_index":770,"title":{},"body":{"injectables/PanelService.html":{}}}],["this.panelrepo.update(id",{"_index":771,"title":{},"body":{"injectables/PanelService.html":{}}}],["this.panelservice.create(panel",{"_index":749,"title":{},"body":{"controllers/PanelController.html":{}}}],["this.panelservice.delete(id",{"_index":751,"title":{},"body":{"controllers/PanelController.html":{}}}],["this.panelservice.findone(id",{"_index":748,"title":{},"body":{"controllers/PanelController.html":{}}}],["this.panelservice.getall",{"_index":747,"title":{},"body":{"controllers/PanelController.html":{}}}],["this.panelservice.update(id",{"_index":750,"title":{},"body":{"controllers/PanelController.html":{}}}],["this.password",{"_index":840,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["this.password).digest('hex",{"_index":842,"title":{},"body":{"classes/User.html":{},"classes/UserLogin.html":{}}}],["this.userrepo.create(user",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.delete(id",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.find",{"_index":950,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findone",{"_index":951,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findone(id",{"_index":954,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.save",{"_index":964,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.update(id",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.update(user.id",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(user",{"_index":883,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(id",{"_index":888,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(id",{"_index":885,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getall",{"_index":881,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyemailandpass(payload.email",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.setphoto(number(id",{"_index":913,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(user",{"_index":891,"title":{},"body":{"controllers/UserController.html":{}}}],["this.zonarepo.find",{"_index":1005,"title":{},"body":{"injectables/ZonaService.html":{}}}],["this.zonaservice.getall",{"_index":993,"title":{},"body":{"controllers/ZonaController.html":{}}}],["throw",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UserService.html":{}}}],["time",{"_index":541,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["time_kwh",{"_index":509,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["time_server",{"_index":510,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["timediff",{"_index":644,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["totalcount",{"_index":564,"title":{},"body":{"classes/IoCtl.html":{},"injectables/IoctlService.html":{},"classes/PaginateIoctl.html":{}}}],["touch",{"_index":1121,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{}}}],["twitter",{"_index":1127,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"injectables/ClusterService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"controllers/IoCtlController.html":{},"injectables/IoctlService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Pagination.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"injectables/ZonaService.html":{},"coverage.html":{}}}],["typeorm",{"_index":201,"title":{},"body":{"classes/Billing.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Client.html":{},"injectables/ClientService.html":{},"classes/CurrentMonthDashboard.html":{},"classes/Device.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"classes/IoCtl.html":{},"injectables/IoctlService.html":{},"classes/Mail.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/PaginateIoctl.html":{},"classes/Panel.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{},"classes/Zona.html":{},"injectables/ZonaService.html":{},"dependencies.html":{}}}],["typeormcrudservice",{"_index":365,"title":{},"body":{"injectables/ClientService.html":{}}}],["typeormmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{}}}],["typeormmodule.forfeature([billing",{"_index":268,"title":{},"body":{"modules/BillingModule.html":{}}}],["typeormmodule.forfeature([client",{"_index":362,"title":{},"body":{"modules/ClientModule.html":{}}}],["typeormmodule.forfeature([device",{"_index":480,"title":{},"body":{"modules/DeviceModule.html":{}}}],["typeormmodule.forfeature([ioctl",{"_index":599,"title":{},"body":{"modules/IoCtlModule.html":{}}}],["typeormmodule.forfeature([mail",{"_index":686,"title":{},"body":{"modules/MailModule.html":{}}}],["typeormmodule.forfeature([panel",{"_index":756,"title":{},"body":{"modules/PanelModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([zona",{"_index":998,"title":{},"body":{"modules/ZonaModule.html":{}}}],["typeormmodule.forroot",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":1084,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":217,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["unauthorizedexception",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('wrong",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":302,"title":{},"body":{"classes/Client.html":{},"classes/Panel.html":{}}}],["undefined)@joincolumn",{"_index":186,"title":{},"body":{"classes/Billing.html":{},"classes/Client.html":{},"classes/ReportSaving.html":{},"classes/ReportSavingDetail.html":{},"classes/Zona.html":{}}}],["undefined)@joincolumn({name",{"_index":440,"title":{},"body":{"classes/Device.html":{},"classes/Panel.html":{},"classes/ReportSavingDetail.html":{}}}],["undefined})@useinterceptors(undefined)@apiokresponse({description",{"_index":864,"title":{},"body":{"controllers/UserController.html":{}}}],["unit",{"_index":1098,"title":{},"body":{"index.html":{}}}],["update",{"_index":210,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{}}}],["update'})@apiunauthorizedresponse({description",{"_index":234,"title":{},"body":{"controllers/BillingController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["update(@param('id",{"_index":259,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{}}}],["update(id",{"_index":231,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/DeviceController.html":{},"injectables/DeviceService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{}}}],["update(id:number",{"_index":385,"title":{},"body":{"injectables/ClientService.html":{}}}],["update(user",{"_index":945,"title":{},"body":{"injectables/UserService.html":{}}}],["updated_at",{"_index":180,"title":{},"body":{"classes/Billing.html":{},"classes/Mail.html":{},"classes/Zona.html":{}}}],["updatedatecolumn",{"_index":195,"title":{},"body":{"classes/Billing.html":{},"classes/Mail.html":{},"classes/Zona.html":{}}}],["updateresult",{"_index":248,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PanelController.html":{},"injectables/PanelService.html":{},"injectables/UserService.html":{}}}],["updateuser",{"_index":848,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(@param('id",{"_index":889,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(id",{"_index":857,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadavatar",{"_index":849,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadavatar(@param('id",{"_index":912,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadavatar(id",{"_index":860,"title":{},"body":{"controllers/UserController.html":{}}}],["uploaded",{"_index":911,"title":{},"body":{"controllers/UserController.html":{}}}],["uploaded'})@apiunauthorizedresponse({description",{"_index":865,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadedfile",{"_index":868,"title":{},"body":{"controllers/UserController.html":{}}}],["urlpath",{"_index":943,"title":{},"body":{"injectables/UserService.html":{}}}],["useguards",{"_index":236,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/UserController.html":{},"controllers/ZonaController.html":{}}}],["useguards(authguard",{"_index":347,"title":{},"body":{"controllers/ClientController.html":{},"controllers/UserController.html":{}}}],["useguards(new",{"_index":252,"title":{},"body":{"controllers/BillingController.html":{},"controllers/ClientController.html":{},"controllers/DeviceController.html":{},"controllers/IoCtlController.html":{},"controllers/MailController.html":{},"controllers/PanelController.html":{},"controllers/ZonaController.html":{}}}],["useinterceptors",{"_index":867,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":898,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":24,"title":{"classes/User.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLogin.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":921,"title":{},"body":{"modules/UserModule.html":{}}}],["user.entity",{"_index":870,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user.roles",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{}}}],["user.service",{"_index":869,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":843,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdecor",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlogin",{"_index":97,"title":{"classes/UserLogin.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"coverage.html":{}}}],["usermodule",{"_index":67,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":652,"title":{},"body":{"classes/Mail.html":{},"classes/User.html":{},"classes/UserLogin.html":{},"injectables/UserService.html":{}}}],["userrepo",{"_index":930,"title":{},"body":{"injectables/UserService.html":{}}}],["users/user.entity",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["users/user.service",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["userservice",{"_index":130,"title":{"injectables/UserService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["user})@useguards(undefined)@apiokresponse({description",{"_index":858,"title":{},"body":{"controllers/UserController.html":{}}}],["vahr",{"_index":511,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["vahs",{"_index":512,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["vaht",{"_index":513,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["vahtot",{"_index":514,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["validate",{"_index":626,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":628,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":947,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["varhr",{"_index":515,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["varhs",{"_index":516,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["varht",{"_index":517,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["varhtot",{"_index":518,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["variable",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1137,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":395,"title":{},"body":{"injectables/ClusterService.html":{},"classes/User.html":{}}}],["vr",{"_index":519,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["vrms",{"_index":520,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["vs",{"_index":521,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["vt",{"_index":522,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["watch",{"_index":1093,"title":{},"body":{"index.html":{}}}],["website",{"_index":1125,"title":{},"body":{"index.html":{}}}],["whr",{"_index":523,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["whs",{"_index":524,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["wht",{"_index":525,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["worker.process.pid",{"_index":407,"title":{},"body":{"injectables/ClusterService.html":{}}}],["wrong",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["wtot",{"_index":526,"title":{},"body":{"classes/IoCtl.html":{},"classes/PaginateIoctl.html":{}}}],["you'd",{"_index":1114,"title":{},"body":{"index.html":{}}}],["zona",{"_index":296,"title":{"classes/Zona.html":{}},"body":{"classes/Client.html":{},"classes/Zona.html":{},"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{}}}],["zona.client",{"_index":318,"title":{},"body":{"classes/Client.html":{}}}],["zona.controller",{"_index":997,"title":{},"body":{"modules/ZonaModule.html":{}}}],["zona.entity",{"_index":989,"title":{},"body":{"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{}}}],["zona.service",{"_index":988,"title":{},"body":{"controllers/ZonaController.html":{},"modules/ZonaModule.html":{}}}],["zona/zona.entity",{"_index":316,"title":{},"body":{"classes/Client.html":{}}}],["zona_desc",{"_index":972,"title":{},"body":{"classes/Zona.html":{}}}],["zona_name",{"_index":973,"title":{},"body":{"classes/Zona.html":{}}}],["zonacontroller",{"_index":984,"title":{"controllers/ZonaController.html":{}},"body":{"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"coverage.html":{}}}],["zonamodule",{"_index":68,"title":{"modules/ZonaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ZonaModule.html":{},"modules.html":{},"overview.html":{}}}],["zonarepo",{"_index":1002,"title":{},"body":{"injectables/ZonaService.html":{}}}],["zonaservice",{"_index":987,"title":{"injectables/ZonaService.html":{}},"body":{"controllers/ZonaController.html":{},"modules/ZonaModule.html":{},"injectables/ZonaService.html":{},"coverage.html":{},"overview.html":{}}}],["zoom",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/ClientModule.html":{},"modules/DeviceModule.html":{},"modules/IoCtlModule.html":{},"modules/MailModule.html":{},"modules/PanelModule.html":{},"modules/UserModule.html":{},"modules/ZonaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/__utils/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/admin.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/admin.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, HttpException, HttpStatus } from \"@nestjs/common\";\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n    canActivate(context: ExecutionContext): boolean {\n        return true;\n    }\n\n    handleRequest(err, user, info) {\n        if (user && user.roles == 'admin') {\n            return user;\n        }\n        throw new HttpException('Unauthorized Access! Only administrator!', HttpStatus.UNAUTHORIZED)\n\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBillingModule\n\nBillingModule\n\nAppModule -->\n\nBillingModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nDeviceModule\n\nDeviceModule\n\nAppModule -->\n\nDeviceModule->AppModule\n\n\n\n\n\nIoCtlModule\n\nIoCtlModule\n\nAppModule -->\n\nIoCtlModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPanelModule\n\nPanelModule\n\nAppModule -->\n\nPanelModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nZonaModule\n\nZonaModule\n\nAppModule -->\n\nZonaModule->AppModule\n\n\n\n\n\nClusterService\n\nClusterService\n\nAppModule -->\n\nClusterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClusterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BillingModule\n                        \n                        \n                            ClientModule\n                        \n                        \n                            DeviceModule\n                        \n                        \n                            IoCtlModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PanelModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            ZonaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ZonaModule } from './modules/components/zona/zona.module';\nimport { MailModule } from './modules/components/mail/mail.module';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './modules/components/users/users.module';\nimport { AuthModule } from './modules/components/auth/auth.module';\nimport { ClientModule } from './modules/components/clients/client.module';\nimport { DeviceModule } from './modules/components/device/device.module';\nimport { PanelModule } from './modules/components/panels/panel.module';\nimport { BillingModule } from './modules/components/billing/billing.module';\nimport { ClusterService } from './modules/__utils/cluster.service';\nimport {IoCtlModule} from \"./modules/components/ioctl/ioctl.module\";\n\n@Module({\n  imports: [\n      TypeOrmModule.forRoot(),\n      UserModule,\n      AuthModule,\n      ClientModule,\n      DeviceModule,\n      PanelModule,\n      MailModule,\n      BillingModule,\n      ZonaModule,\n      IoCtlModule\n  ],\n  controllers: [],\n  providers: [\n    ClusterService\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: UserLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')@ApiOkResponse({description: 'Successful Login'})@ApiBadRequestResponse({description: 'Wrong login credential'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/auth/auth.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UserLogin } from '../users/user.entity';\nimport { ApiOkResponse, ApiBadRequestResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('api/auth')\n@ApiTags('&#x1F512; Auth')\nexport class AuthController {\n    constructor(private authService: AuthService) {}\n\n    @Post('/login')\n    @ApiOkResponse({ description: 'Successful Login' })\n    @ApiBadRequestResponse({ description: 'Wrong login credential' })\n    async login(@Body() payload: UserLogin): Promise {\n        const user = await this.authService.validateUser(payload);\n        return await this.authService.createToken(user);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { User } from '../users/user.entity';\nimport { UserService } from '../users/user.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from 'src/modules/__utils/jwt.strategy';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([User]),\n        JwtModule.register({\n            secret: \"primasaver2020\",\n        })\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, UserService, JwtStrategy],\n    exports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n    ],\n})\nexport class AuthModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: UserLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { UserService } from \"../users/user.service\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { User, UserLogin } from \"../users/user.entity\";\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly userService: UserService,\n        private readonly jwtService: JwtService,\n    ) {}\n\n    async createToken(user: User) {\n        return {\n          expiresIn: 3660,\n          accessToken: this.jwtService.sign({id: user.id}),\n          user: user\n        };\n      }\n    \n    async validateUser(payload: UserLogin): Promise {\n      const user = await this.userService.getByEmailAndPass(payload.email, payload.password);\n      if (!user) {\n        throw new UnauthorizedException('Wrong login combination!');\n      }\n      return user;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Billing.html":{"url":"classes/Billing.html","title":"class - Billing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Billing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/billing/billing.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billing_name\n                            \n                            \n                                billing_number\n                            \n                            \n                                client\n                            \n                            \n                                clientId\n                            \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            billing_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/billing/billing.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            billing_number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/billing/billing.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Client\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/billing/billing.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/billing/billing.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/billing/billing.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/billing/billing.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/billing/billing.entity.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn, CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport { Client } from \"../clients/client.entity\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\n@Entity()\nexport class Billing {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty()\n    @Column()\n    billing_name: string\n\n    @ApiProperty()\n    @Column()\n    billing_number: string\n\n    @ApiProperty()\n    @Column()\n    clientId: number\n    \n    @OneToOne(() => Client, client => client.billing)\n    @JoinColumn()\n    client: Client;\n\n    @CreateDateColumn()\n    created_at: Date\n\n    @UpdateDateColumn()\n    updated_at: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BillingController.html":{"url":"controllers/BillingController.html","title":"controller - BillingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BillingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/billing/billing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /billing\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                show\n                            \n                            \n                                    Async\n                                store\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiParam({name: 'id'})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success Delete'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/billing/billing.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/billing/billing.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiParam({name: 'id'})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/billing/billing.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(billing: Billing)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiBody({type: Billing})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success Create Billing'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/billing/billing.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    billing\n                                    \n                                                Billing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, billing: Billing)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')@ApiParam({name: 'id'})@ApiBody({type: Billing})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success Update'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/billing/billing.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    billing\n                                    \n                                                Billing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Param, Post, Put, Body, Delete } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiTags, ApiOkResponse, ApiUnauthorizedResponse, ApiParam, ApiBody } from \"@nestjs/swagger\";\nimport { JwtAuthGuard } from \"src/modules/__utils/jwt-guard\";\nimport { BillingService } from \"./billing.service\";\nimport { Billing } from \"./billing.entity\";\nimport { UpdateResult, DeleteResult } from \"typeorm\";\n\n@Controller('/billing')\n@ApiTags('&#x1F4B0; Billing')\n@ApiBearerAuth()\n@UseGuards(new JwtAuthGuard())\nexport class BillingController {\n    constructor(private billingService: BillingService) {}\n\n    @Get('/')\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Success Get All'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async index(): Promise {\n        return await this.billingService.getAll()\n    }\n\n    @Get('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Success Get All'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async show(@Param('id') id): Promise {\n        return await this.billingService.findOne(id)\n    }\n\n    @Post('/')\n    @ApiBody({ type: Billing })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Success Create Billing'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async store(billing: Billing): Promise {\n        return await this.billingService.create(billing)\n    }\n\n    @Put('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBody({ type: Billing })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Success Update'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async update(@Param('id') id, @Body() billing: Billing): Promise {\n        return await this.billingService.update(id, billing)\n    }\n\n    @Delete('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Success Delete'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async delete(@Param('id') id): Promise {\n        return await this.billingService.delete(id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BillingModule.html":{"url":"modules/BillingModule.html","title":"module - BillingModule","body":"\n                   \n\n\n\n\n    Modules\n    BillingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_providers\n\n\n\n\nBillingService\n\nBillingService\n\n\n\nBillingModule\n\nBillingModule\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/billing/billing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BillingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BillingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BillingService } from './billing.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Billing } from './billing.entity';\nimport { Client } from '../clients/client.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { BillingController } from './billing.controller';\n\n@Module({\n    imports:[\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([Billing, Client])\n    ],\n    controllers: [\n        BillingController\n    ],\n    providers: [\n        BillingService\n    ],\n})\nexport class BillingModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BillingService.html":{"url":"injectables/BillingService.html","title":"injectable - BillingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BillingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/billing/billing.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(billingRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/billing/billing.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        billingRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(billing: Billing)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/billing/billing.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    billing\n                                    \n                                                Billing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/billing/billing.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/billing/billing.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/billing/billing.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, billing: Billing)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/billing/billing.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    billing\n                                    \n                                                Billing\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Billing } from \"./billing.entity\";\nimport { Repository, UpdateResult, DeleteResult } from \"typeorm\";\n\n@Injectable()\nexport class BillingService {\n    constructor(@InjectRepository(Billing) private billingRepo: Repository) {}\n\n    async getAll(): Promise {\n        return await this.billingRepo.find();\n    }\n\n    async findOne(id: number): Promise {\n        return await this.billingRepo.findOne(id)\n    }\n\n    async create(billing: Billing): Promise {\n        return await this.billingRepo.save(billing)\n    }\n\n    async update(id: number, billing: Billing): Promise {\n        return await this.billingRepo.update(id, billing)\n    }\n\n    async delete(id: number): Promise {\n        return await this.billingRepo.delete(id)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/clients/client.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                billing\n                            \n                            \n                                company\n                            \n                            \n                                devices\n                            \n                            \n                                id\n                            \n                            \n                                panels\n                            \n                            \n                                phone\n                            \n                            \n                                zona\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            billing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Billing\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            devices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Device[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Panel[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zona\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Zona\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Entity, Column, OneToMany, OneToOne, JoinColumn } from \"typeorm\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Device } from \"../device/device.entity\";\nimport { Panel } from \"../panels/panel.entity\";\nimport { Billing } from \"../billing/billing.entity\";\nimport { Zona } from \"../zona/zona.entity\";\n\n@Entity()\nexport class Client {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    company: string;\n\n    @ApiProperty()\n    @Column()\n    address: string;\n\n    @ApiProperty()\n    @Column()\n    phone: string;\n\n    @OneToOne(() => Billing, billing => billing.client)\n    @JoinColumn()\n    billing: Billing;\n\n    @OneToOne(() => Zona, zona => zona.client)\n    @JoinColumn()\n    zona: Zona;\n\n    @OneToMany(\n        () => Device, \n        (device: Device) => device.client,\n        {\n            onUpdate: 'CASCADE',\n            onDelete: 'CASCADE'\n        }\n    )\n    devices: Device[];\n\n    @OneToMany(\n        () => Panel, \n        (panel: Panel) => panel.client,\n        {\n            onUpdate: 'CASCADE',\n            onDelete: 'CASCADE'\n        }\n    )\n    panels: Panel[];\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientController.html":{"url":"controllers/ClientController.html","title":"controller - ClientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/clients/client.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/client\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(client: Client)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Post('/')@ApiBody({type: Client})@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Create Client'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/clients/client.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Delete('/:id')@ApiParam({name: 'id'})@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Delete Client'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/clients/client.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/')@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/clients/client.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/:id')@ApiParam({name: 'id'})@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/clients/client.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, client: Client)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Put('/:id')@ApiParam({name: 'id'})@ApiBody({type: Client})@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Update Client'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/clients/client.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Param, Body, Post, Put, Delete } from \"@nestjs/common\";\nimport { ClientService } from \"./client.service\";\nimport { Client } from \"./client.entity\";\nimport { JwtAuthGuard } from \"src/modules/__utils/jwt-guard\";\nimport { ApiTags, ApiBearerAuth, ApiOkResponse, ApiUnauthorizedResponse, ApiParam, ApiBody } from \"@nestjs/swagger\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@ApiTags('&#x1F647; Client')\n@Controller('api/client')\n@ApiBearerAuth()\n@UseGuards(new JwtAuthGuard())\nexport class ClientController {\n    constructor (private clientService: ClientService) {}\n\n    @ApiBearerAuth()\n    @Get('/')\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getAll(): Promise {\n        return await this.clientService.getDevices();\n    }\n\n    @ApiBearerAuth()\n    @Get('/:id')\n    @ApiParam({name : 'id'})\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getById(@Param('id') id): Promise {\n        return await this.clientService.getById(id);\n    }\n\n    @ApiBearerAuth()\n    @Post('/')\n    @ApiBody({ type: Client })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Create Client'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async create(@Body() client: Client): Promise {\n        return await this.clientService.create(client);\n    }\n\n    @ApiBearerAuth()\n    @Put('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBody({ type: Client })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Update Client'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async update(@Param('id') id,@Body() client: Client): Promise {\n        return await this.clientService.update(id, client);\n    }\n\n    @ApiBearerAuth()\n    @Delete('/:id')\n    @ApiParam({ name: 'id' })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Delete Client'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async delete(@Param('id') id): Promise {\n        return await this.clientService.delete(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\n\nClientService\n\nClientService\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/clients/client.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientController } from './client.controller';\nimport { ClientService } from './client.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Client } from './client.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { Device } from '../device/device.entity';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([Client, Device])\n    ],\n    controllers: [ClientController],\n    providers: [ClientService],\n    exports: [TypeOrmModule],\n})\nexport class ClientModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/clients/client.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                clientRepo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getDevices\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/clients/client.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(client: Client)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/clients/client.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/clients/client.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/clients/client.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/clients/client.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getDevices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDevices()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/clients/client.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, client: Client)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/clients/client.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    client\n                                    \n                                                Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            clientRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(Client)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/clients/client.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Client } from \"./client.entity\";\nimport { Repository } from \"typeorm\";\nimport { TypeOrmCrudService } from \"@nestjsx/crud-typeorm\";\n\n@Injectable()\nexport class ClientService extends TypeOrmCrudService {\n\n    constructor(\n        @InjectRepository(Client)\n        public readonly clientRepo: Repository,\n      ) {\n        super(clientRepo);\n      }\n\n    async getAll(): Promise {\n        return await this.clientRepo.find();\n    }\n\n    async create(client: Client): Promise {\n        return await this.clientRepo.save(client);\n    }\n\n    async getById(id: number): Promise {\n        return await this.clientRepo.findOne(id, { relations: ['devices', 'panels'] });\n    }\n\n    async update(id:number, client: Client): Promise {\n        return await this.clientRepo.update(id, client);\n    }\n\n    async delete(id: number): Promise {\n        return await this.clientRepo.delete(id);\n    }\n\n    async getDevices(): Promise {\n        return await this.clientRepo.find({ relations: ['devices', 'panels'] })\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClusterService.html":{"url":"injectables/ClusterService.html","title":"injectable - ClusterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClusterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/__utils/cluster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clusterize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            clusterize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clusterize(callback: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/cluster.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as cluster from 'cluster';\nimport * as os from 'os'\nimport { Injectable } from '@nestjs/common';\nconst numCPUs = os.cpus().length;\n\n@Injectable()\nexport class ClusterService {\n    static clusterize(callback: Function): void {\n        if(cluster.isMaster) {\n            console.log(`MASTER SERVER (${process.pid}) IS RUNNING `)\n\n            for (let i = 0; i  {\n                console.log(`worker ${worker.process.pid} died. Restarting....`);\n                cluster.fork();\n            });\n        } else {\n            callback();\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CurrentMonthDashboard.html":{"url":"classes/CurrentMonthDashboard.html","title":"class - CurrentMonthDashboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CurrentMonthDashboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/models/currentMonthDashboard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                device_id\n                            \n                            \n                                id\n                            \n                            \n                                max_kwh\n                            \n                            \n                                max_time\n                            \n                            \n                                min_kwh\n                            \n                            \n                                min_time\n                            \n                            \n                                month_periode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/currentMonthDashboard.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/currentMonthDashboard.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max_kwh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/currentMonthDashboard.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/currentMonthDashboard.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min_kwh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/currentMonthDashboard.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/currentMonthDashboard.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            month_periode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/currentMonthDashboard.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity('current_month_dashboard')\nexport class CurrentMonthDashboard {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column()\n    device_id: string\n\n    @Column()\n    month_periode: string\n\n    @Column({\n        type: \"decimal\",\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    min_kwh: number\n\n    @Column({\n        type: \"decimal\",\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    max_kwh: number\n\n    @Column({\n        type: \"datetime\"\n    })\n    min_time: string\n\n    @Column({\n        type: \"datetime\"\n    })\n    max_time: string\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Device.html":{"url":"classes/Device.html","title":"class - Device","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Device\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/device/device.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                clientId\n                            \n                            \n                                device\n                            \n                            \n                                id\n                            \n                            \n                                in_out\n                            \n                            \n                                panel\n                            \n                            \n                                panelId\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Client\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@JoinColumn({name: 'clientId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            in_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Panel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@JoinColumn({name: 'panelId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panelId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/device/device.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    PrimaryGeneratedColumn,\n    Entity,\n    Column,\n    JoinColumn,\n    ManyToOne\n} from \"typeorm\";\nimport {\n    Client\n} from \"../clients/client.entity\";\nimport {\n    ApiProperty\n} from \"@nestjs/swagger\";\nimport { Panel } from \"../panels/panel.entity\";\n\n@Entity()\nexport class Device {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    device: string;\n\n    @ApiProperty()\n    @Column()\n    status: number;\n\n    @ApiProperty()\n    @Column()\n    in_out: number;\n\n    @ApiProperty()\n    @Column()\n    clientId: number;\n\n    @ApiProperty()\n    @Column()\n    panelId: number;\n\n    @ManyToOne(() => Client, client => client.devices)\n    @JoinColumn({\n        name: 'clientId'\n    })\n    client: Client;\n\n    @ManyToOne(() => Panel, panel => panel.devices)\n    @JoinColumn({\n        name: 'panelId'\n    })\n    panel: Panel;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeviceController.html":{"url":"controllers/DeviceController.html","title":"controller - DeviceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeviceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/device/device.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/device\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                show\n                            \n                            \n                                    Async\n                                store\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Delete('/:id')@ApiParam({name: 'id'})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Delete'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/device/device.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/')@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/device/device.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/:id')@ApiParam({name: 'id'})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/device/device.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(device: Device)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Post('/')@ApiBody({type: Device})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Create'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/device/device.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    device\n                                    \n                                                Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, device: Device)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Put('/:id')@ApiParam({name: 'id'})@ApiBody({type: Device})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Update'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/device/device.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    device\n                                    \n                                                Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Param, Post, Body, Put, Delete } from '@nestjs/common';\nimport { DeviceService } from './device.service';\nimport { Device } from './device.entity';\nimport { JwtAuthGuard } from 'src/modules/__utils/jwt-guard';\nimport { ApiTags, ApiBearerAuth, ApiOkResponse, ApiUnauthorizedResponse, ApiParam, ApiBody } from '@nestjs/swagger';\nimport { DeleteResult } from 'typeorm';\n// import { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('&#x1F5A5; Device')\n@ApiBearerAuth()\n@Controller('api/device')\n@UseGuards(new JwtAuthGuard())\nexport class DeviceController {\n    constructor(private deviceService: DeviceService) {}\n\n    @ApiBearerAuth()\n    @Get('/')\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async index(): Promise {\n      return await this.deviceService.getAll();\n    }\n\n    @ApiBearerAuth()\n    @Get('/:id')\n    @ApiParam({ name: 'id' })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async show(@Param('id') id): Promise {\n      return await this.deviceService.findOne(id);\n    }\n\n    @ApiBearerAuth()\n    @Post('/')\n    @ApiBody({ type: Device })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: 'Sucess Create'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async store(@Body() device: Device): Promise {\n      return await this.deviceService.create(device);\n    }\n\n    @ApiBearerAuth()\n    @Put('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBody({ type: Device })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: 'Sucess Update'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async update(@Param('id') id,@Body() device: Device): Promise {\n      return await this.deviceService.update(id, device);\n    }\n\n    @ApiBearerAuth()\n    @Delete('/:id')\n    @ApiParam({ name: 'id' })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: 'Sucess Delete'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async delete(@Param('id') id): Promise {\n      return await this.deviceService.delete(id);\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeviceModule.html":{"url":"modules/DeviceModule.html","title":"module - DeviceModule","body":"\n                   \n\n\n\n\n    Modules\n    DeviceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeviceModule\n\n\n\ncluster_DeviceModule_providers\n\n\n\n\nDeviceService\n\nDeviceService\n\n\n\nDeviceModule\n\nDeviceModule\n\nDeviceModule -->\n\nDeviceService->DeviceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/device/device.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeviceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeviceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DeviceService } from './device.service';\nimport { DeviceController } from './device.controller';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Device } from './device.entity';\nimport { Client } from '../clients/client.entity';\nimport { Panel } from '../panels/panel.entity';\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([Device, Client, Panel])\n    ],\n    controllers: [\n        DeviceController\n    ],\n    providers: [\n        DeviceService\n    ],\n})\nexport class DeviceModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceService.html":{"url":"injectables/DeviceService.html","title":"injectable - DeviceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeviceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/device/device.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                filter\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/device/device.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(device: Device)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/device/device.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    device\n                                    \n                                                Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/device/device.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/device/device.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/device/device.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/device/device.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, device: Device)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/device/device.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    device\n                                    \n                                                Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, DeleteResult, Like } from 'typeorm';\nimport { Device } from './device.entity';\n\n@Injectable()\nexport class DeviceService {\n    constructor(\n        @InjectRepository(Device)\n        private deviceRepo: Repository,\n      ) {}\n\n    async getAll(): Promise {\n      return await this.deviceRepo.find();\n    }\n\n    async findOne(id: number): Promise {\n      return await this.deviceRepo.findOne(id)\n    }\n\n    async create(device: Device): Promise {\n      return await this.deviceRepo.save(device);\n    }\n\n    async update(id: number, device: Device): Promise {\n      return await this.deviceRepo.update(id, device);\n    }\n\n    async delete(id: number): Promise {\n      return await this.deviceRepo.delete(id);\n    }\n\n    async filter(): Promise {\n      return await this.deviceRepo.find({\n        where : [{\n          device : Like('%%'),\n        }]\n      })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IoCtl.html":{"url":"classes/IoCtl.html","title":"class - IoCtl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IoCtl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/ioctl/ioctl.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date_kwh\n                            \n                            \n                                date_server\n                            \n                            \n                                device_id\n                            \n                            \n                                Freq\n                            \n                            \n                                id\n                            \n                            \n                                IR\n                            \n                            \n                                IRMS\n                            \n                            \n                                ISc\n                            \n                            \n                                IT\n                            \n                            \n                                kWh\n                            \n                            \n                                Pf\n                            \n                            \n                                time_kwh\n                            \n                            \n                                time_server\n                            \n                            \n                                VAhR\n                            \n                            \n                                VAhS\n                            \n                            \n                                VAhT\n                            \n                            \n                                VAhTot\n                            \n                            \n                                VarhR\n                            \n                            \n                                VarhS\n                            \n                            \n                                VarhT\n                            \n                            \n                                VarhTot\n                            \n                            \n                                VR\n                            \n                            \n                                VRMS\n                            \n                            \n                                VS\n                            \n                            \n                                VT\n                            \n                            \n                                WhR\n                            \n                            \n                                WhS\n                            \n                            \n                                WhT\n                            \n                            \n                                WTot\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_kwh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Freq\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IRMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ISc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kWh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Pf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time_kwh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time_server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VAhR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VAhS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VAhT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VAhTot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VarhR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VarhS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VarhT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VarhTot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VRMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WhR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WhS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WhT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WTot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'float', precision: 10, scale: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, PrimaryGeneratedColumn} from \"typeorm\";\n\n@Entity()\nexport class IoCtl {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'date'})\n    date_server: string;\n\n    @Column({type: 'time'})\n    time_server: string;\n\n    @Column({type: 'date'})\n    date_kwh: string;\n\n    @Column({type: 'time'})\n    time_kwh: string;\n\n    @Column()\n    device_id: string;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    IR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    ISc: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    IT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    IRMS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VRMS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    Freq: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WTot: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WhR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WhS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WhT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhTot: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhTot: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    kWh: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    Pf: number;\n}\n\nexport class PaginateIoctl {\n    data: IoCtl[]\n    page: number\n    limit: number\n    totalCount: number\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IoCtlController.html":{"url":"controllers/IoCtlController.html","title":"controller - IoCtlController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IoCtlController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/ioctl/ioctl.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/ioctl\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                paginateIoCtl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/ioctl/ioctl.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginateIoCtl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginateIoCtl(paginate: Pagination)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/paginate')@ApiBearerAuth()@ApiQuery({name: 'page', description: 'Page', required: false, type: Number})@ApiQuery({name: 'limit', description: 'Limit', required: false, type: Number})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/ioctl/ioctl.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginate\n                                    \n                                                Pagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Get, UseGuards, Query} from \"@nestjs/common\";\nimport {IoctlService} from \"./ioctl.service\";\nimport {JwtAuthGuard} from \"../../__utils/jwt-guard\";\nimport {ApiBearerAuth, ApiOkResponse, ApiTags, ApiUnauthorizedResponse, ApiQuery} from \"@nestjs/swagger\";\nimport {IoCtl, PaginateIoctl} from \"./ioctl.entity\";\nimport { Pagination } from \"src/modules/__utils/pagination\";\n\n@ApiTags('⚡ IOctl')\n@ApiBearerAuth()\n@Controller('api/ioctl')\n@UseGuards(new JwtAuthGuard())\nexport class IoCtlController {\n    constructor(private ioctlService: IoctlService) {}\n\n    @Get('/paginate')\n    @ApiBearerAuth()\n    @ApiQuery(\n        {\n            name: \"page\",\n            description: \"Page\",\n            required: false,\n            type: Number\n        },\n        \n    )\n    @ApiQuery(\n        {\n            name: \"limit\",\n            description: \"Limit\",\n            required: false,\n            type: Number\n        },\n        \n    )\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: 'Success Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async paginateIoCtl(@Query() paginate: Pagination): Promise {\n        paginate.page = Number(paginate.page)\n        paginate.limit = Number(paginate.limit)\n        return await this.ioctlService.paginateGetAll({\n            page: paginate.page,\n            limit: paginate.limit > 10 ? 10 : paginate.limit\n        });\n    }\n\n    @Get('')\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: 'Success Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async index(): Promise {\n        return await this.ioctlService.getAll();\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoCtlModule.html":{"url":"modules/IoCtlModule.html","title":"module - IoCtlModule","body":"\n                   \n\n\n\n\n    Modules\n    IoCtlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoCtlModule\n\n\n\ncluster_IoCtlModule_providers\n\n\n\n\nIoctlService\n\nIoctlService\n\n\n\nIoCtlModule\n\nIoCtlModule\n\nIoCtlModule -->\n\nIoctlService->IoCtlModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/ioctl/ioctl.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IoctlService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IoCtlController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from \"@nestjs/common\";\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {IoCtl} from \"./ioctl.entity\";\nimport {IoctlService} from \"./ioctl.service\";\nimport {IoCtlController} from \"./ioctl.controller\";\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([IoCtl])\n    ],\n    controllers: [IoCtlController],\n    providers: [IoctlService]\n})\n\nexport class IoCtlModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IoctlService.html":{"url":"injectables/IoctlService.html","title":"injectable - IoctlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IoctlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/ioctl/ioctl.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                paginateGetAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ioCtl: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/ioctl/ioctl.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ioCtl\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/ioctl/ioctl.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginateGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginateGetAll(paginate: Pagination)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/ioctl/ioctl.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginate\n                                    \n                                                Pagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from \"@nestjs/common\";\nimport {IoCtl, PaginateIoctl} from \"./ioctl.entity\";\nimport {InjectRepository} from \"@nestjs/typeorm\";\nimport {Repository} from \"typeorm\";\nimport { Pagination } from \"src/modules/__utils/pagination\";\n\n@Injectable()\nexport class IoctlService {\n    constructor(@InjectRepository(IoCtl) private readonly ioCtl: Repository) {}\n\n    async paginateGetAll(paginate: Pagination): Promise {\n        const skippedItems = (paginate.page - 1) * paginate.limit;\n        console.log(skippedItems);\n        const totalCount = await this.ioCtl.count();\n        const ioctlResult = await this.ioCtl.createQueryBuilder()\n            .orderBy('id', \"DESC\")\n            .offset(skippedItems)\n            .limit(paginate.limit)\n            .getMany()\n\n        return {\n            totalCount,\n            page: paginate.page,\n            limit: paginate.limit,\n            data: ioctlResult\n        }\n    }\n\n    async getAll(): Promise {\n        return await this.ioCtl.find();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/__utils/jwt-guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/jwt-guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/jwt-guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n  \n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    canActivate(context: ExecutionContext) {\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info) {\n        if (err || !user) {\n            throw err || new UnauthorizedException();\n        }\n        return user;\n    }\n}\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/__utils/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/__utils/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: JwtPayload, done)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/__utils/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy, JwtPayload } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserService } from '../components/users/user.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly userService: UserService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'primasaver2020',\n    });\n  }\n\n  async validate({ iat, exp, id }: JwtPayload, done) {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mail.html":{"url":"classes/Mail.html","title":"class - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/mail/mail.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                host\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                port\n                            \n                            \n                                smtp_auth\n                            \n                            \n                                smtp_secure\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            port\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            smtp_auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            smtp_secure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/mail/mail.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from \"typeorm\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\n@Entity()\nexport class Mail {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    smtp_auth: string;\n\n    @ApiProperty()\n    @Column()\n    type: string;\n\n    @ApiProperty()\n    @Column()\n    smtp_secure: string;\n\n    @ApiProperty()\n    @Column()\n    host: string\n\n    @ApiProperty()\n    @Column()\n    port: string\n\n    @ApiProperty()\n    @Column()\n    username: string\n\n    @ApiProperty()\n    @Column()\n    password: string\n\n    @CreateDateColumn()\n    created_at: Date\n\n    @UpdateDateColumn()\n    updated_at: Date\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /mail\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                show\n                            \n                            \n                                    Async\n                                store\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiParam({name: 'id'})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Delete'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/mail/mail.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/mail/mail.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiParam({name: 'id'})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/mail/mail.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(mail: Mail)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiBody({type: Mail})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Create'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/mail/mail.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, mail: Mail)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')@ApiParam({name: 'id'})@ApiBody({type: Mail})@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Update'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/mail/mail.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mail\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards, Param, Post, Body, Put, Delete } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Mail } from './mail.entity';\nimport { ApiTags, ApiBearerAuth, ApiOkResponse, ApiUnauthorizedResponse, ApiParam, ApiBody } from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/modules/__utils/jwt-guard';\nimport { UpdateResult, DeleteResult } from 'typeorm';\n\n@Controller('/mail')\n@ApiTags('&#x1F4E7; Mail')\n@ApiBearerAuth()\n@UseGuards(new JwtAuthGuard())\nexport class MailController {\n\n    constructor(private mailService: MailService) {}\n\n    @Get('/')\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Get All'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async index(): Promise {\n        return await this.mailService.getAll();\n    }\n\n    @Get('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Get All'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async show(@Param('id') id): Promise {\n        return await this.mailService.findOne(id);\n    }\n\n    @Post('/')\n    @ApiBody({ type: Mail })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Create'\n    })\n\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async store(@Body() mail: Mail): Promise {\n        return await this.mailService.create(mail);\n    }\n\n    @Put('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBody({ type: Mail })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Update'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async update(@Param('id') id, @Body() mail: Mail): Promise {\n        return await this.mailService.update(id, mail);\n    }\n\n    @Delete('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Delete'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async delete(@Param('id') id): Promise {\n        return await this.mailService.delete(id);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Mail } from './mail.entity';\nimport { MailController } from './mail.controller';\nimport { MailService } from './mail.service';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([Mail])\n    ],\n    controllers: [\n        MailController\n    ],\n    providers: [\n        MailService\n    ],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/mail/mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(mail: Mail)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/mail/mail.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/mail/mail.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/mail/mail.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/mail/mail.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, mail: Mail)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/mail/mail.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mail\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult, DeleteResult } from 'typeorm';\nimport { Mail } from './mail.entity';\n\n@Injectable()\nexport class MailService {\n\n    constructor(@InjectRepository(Mail) private mailRepo: Repository) {}\n\n    async getAll(): Promise {\n        return await this.mailRepo.find();\n    }\n\n    async findOne(id: number): Promise {\n        return await this.mailRepo.findOne(id);\n    }\n\n    async create(mail: Mail): Promise {\n        return await this.mailRepo.save(mail);\n    }\n\n    async update(id: number, mail: Mail): Promise {\n        return await this.mailRepo.update(id, mail);\n    }\n\n    async delete(id: number): Promise {\n        return await this.mailRepo.delete(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginateIoctl.html":{"url":"classes/PaginateIoctl.html","title":"class - PaginateIoctl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginateIoctl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/ioctl/ioctl.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IoCtl[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/ioctl/ioctl.entity.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Column, Entity, PrimaryGeneratedColumn} from \"typeorm\";\n\n@Entity()\nexport class IoCtl {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({type: 'date'})\n    date_server: string;\n\n    @Column({type: 'time'})\n    time_server: string;\n\n    @Column({type: 'date'})\n    date_kwh: string;\n\n    @Column({type: 'time'})\n    time_kwh: string;\n\n    @Column()\n    device_id: string;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    IR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    ISc: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    IT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    IRMS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VRMS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    Freq: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WTot: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WhR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WhS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    WhT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhTot: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VarhT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhTot: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhR: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhS: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    VAhT: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    kWh: number;\n\n    @Column({ type: \"float\", precision: 10, scale: 6 })\n    Pf: number;\n}\n\nexport class PaginateIoctl {\n    data: IoCtl[]\n    page: number\n    limit: number\n    totalCount: number\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/__utils/pagination.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/__utils/pagination.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/__utils/pagination.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Pagination {\n    page: number\n    limit: number\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Panel.html":{"url":"classes/Panel.html","title":"class - Panel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Panel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/panels/panel.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capacity\n                            \n                            \n                                client\n                            \n                            \n                                client_id\n                            \n                            \n                                devices\n                            \n                            \n                                gsm_number\n                            \n                            \n                                id\n                            \n                            \n                                install_date\n                            \n                            \n                                name\n                            \n                            \n                                reportSavingDetail\n                            \n                            \n                                serial_number\n                            \n                            \n                                start_report\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            capacity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Client\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@JoinColumn({name: 'client_id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            devices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Device[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gsm_number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            install_date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportSavingDetail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReportSavingDetail[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serial_number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start_report\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/panels/panel.entity.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Entity,\n    PrimaryGeneratedColumn,\n    Column,\n    ManyToOne,\n    JoinColumn,\n    OneToMany\n} from \"typeorm\";\nimport {\n    Client\n} from \"../clients/client.entity\";\nimport {\n    Device\n} from \"../device/device.entity\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { ReportSavingDetail } from \"src/modules/models/reportSavingDetail.entity\";\n\n@Entity()\nexport class Panel {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    name: string;\n\n    @ApiProperty()\n    @Column()\n    serial_number: string;\n\n    @ApiProperty()\n    @Column()\n    gsm_number: string;\n\n    @ApiProperty()\n    @Column()\n    install_date: Date;\n\n    @ApiProperty()\n    @Column()\n    capacity: number;\n\n    @ApiProperty()\n    @Column()\n    start_report: Date;\n\n    @ApiProperty()\n    @Column()\n    client_id: number;\n\n    @ManyToOne(() => Client, client => client.panels)\n    @JoinColumn({\n        name: 'client_id'\n    })\n    client: Client;\n\n    @OneToMany(\n        () => Device,\n        (device: Device) => device.panel, {\n            onUpdate: 'CASCADE',\n            onDelete: 'CASCADE'\n        }\n    )\n    devices: Device[];\n\n    @OneToMany(\n        () => ReportSavingDetail,\n        (reportSavingDetail: ReportSavingDetail) => reportSavingDetail.panel, {\n            onUpdate: 'CASCADE',\n            onDelete: 'CASCADE'\n        }\n    )\n    reportSavingDetail: ReportSavingDetail[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PanelController.html":{"url":"controllers/PanelController.html","title":"controller - PanelController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PanelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/panels/panel.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/panel\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                show\n                            \n                            \n                                    Async\n                                store\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Delete('/:id')@ApiParam({name: 'id'})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Delete'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/panels/panel.controller.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/')@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/panels/panel.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/:id')@ApiParam({name: 'id'})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/panels/panel.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(panel: Panel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Post('/')@ApiBody({type: Panel})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Create'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/panels/panel.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    panel\n                                    \n                                                Panel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, panel: Panel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Put('/:id')@ApiParam({name: 'id'})@ApiBody({type: Panel})@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Sucess Update'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/panels/panel.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    panel\n                                    \n                                                Panel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    UseGuards,\n    Get,\n    Param,\n    Post,\n    Body,\n    Put,\n    Delete\n} from '@nestjs/common';\nimport {\n    JwtAuthGuard\n} from 'src/modules/__utils/jwt-guard';\nimport {\n    Panel\n} from './panel.entity';\nimport {\n    PanelService\n} from './panel.service';\nimport {\n    ApiTags,\n    ApiBearerAuth,\n    ApiOkResponse,\n    ApiUnauthorizedResponse,\n    ApiParam,\n    ApiBody\n} from '@nestjs/swagger';\nimport {\n    UpdateResult,\n    DeleteResult\n} from 'typeorm';\n\n@ApiTags('⛽ Panel')\n@ApiBearerAuth()\n@Controller('api/panel')\n@UseGuards(new JwtAuthGuard())\nexport class PanelController {\n    constructor(private panelService: PanelService) {}\n\n    @ApiBearerAuth()\n    @Get('/')\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Get All'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async index(): Promise  {\n        return await this.panelService.getAll();\n    }\n\n    @ApiBearerAuth()\n    @Get('/:id')\n    @ApiParam({\n        name: 'id'\n    })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Get All'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async show(@Param('id') id): Promise  {\n        return await this.panelService.findOne(id);\n    }\n\n    @ApiBearerAuth()\n    @Post('/')\n    @ApiBody({\n        type: Panel\n    })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Create'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async store(@Body() panel: Panel): Promise  {\n        return await this.panelService.create(panel);\n    }\n\n    @ApiBearerAuth()\n    @Put('/:id')\n    @ApiParam({\n        name: 'id'\n    })\n    @ApiBody({\n        type: Panel\n    })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Update'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async update(@Param('id') id, @Body() panel: Panel): Promise  {\n        return await this.panelService.update(id, panel);\n    }\n\n    @ApiBearerAuth()\n    @Delete('/:id')\n    @ApiParam({\n        name: 'id'\n    })\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({\n        description: 'Sucess Delete'\n    })\n    @ApiUnauthorizedResponse({\n        description: 'Unauthorized'\n    })\n    async delete(@Param('id') id): Promise  {\n        return await this.panelService.delete(id);\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PanelModule.html":{"url":"modules/PanelModule.html","title":"module - PanelModule","body":"\n                   \n\n\n\n\n    Modules\n    PanelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_providers\n\n\n\n\nPanelService\n\nPanelService\n\n\n\nPanelModule\n\nPanelModule\n\nPanelModule -->\n\nPanelService->PanelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/panels/panel.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PanelService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PanelController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PanelService } from './panel.service';\nimport { PanelController } from './panel.controller';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Panel } from './panel.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { Device } from '../device/device.entity';\nimport { Client } from '../clients/client.entity';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([Panel, Device, Client])\n    ],\n    controllers: [\n        PanelController],\n    providers: [\n        PanelService],\n})\nexport class PanelModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PanelService.html":{"url":"injectables/PanelService.html","title":"injectable - PanelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PanelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/panels/panel.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(panelRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/panels/panel.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        panelRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(panel: Panel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/panels/panel.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    panel\n                                    \n                                                Panel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/panels/panel.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/panels/panel.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/panels/panel.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, panel: Panel)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/panels/panel.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    panel\n                                    \n                                                Panel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Panel } from './panel.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult, DeleteResult } from 'typeorm';\n\n@Injectable()\nexport class PanelService {\n\n    constructor(@InjectRepository(Panel) private panelRepo: Repository){}\n\n    async getAll(): Promise {\n        return await this.panelRepo.find({ relations: ['devices'] });\n    }\n\n    async findOne(id: number): Promise {\n        return await this.panelRepo.findOne(id, {relations: ['devices']})\n    }\n\n    async create(panel: Panel): Promise {\n        return await this.panelRepo.save(panel);\n    }\n\n    async update(id: number, panel: Panel): Promise {\n        return await this.panelRepo.update(id, panel);\n    }\n\n    async delete(id: number): Promise {\n        return await this.panelRepo.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportSaving.html":{"url":"classes/ReportSaving.html","title":"class - ReportSaving","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportSaving\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/models/reportSaving.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billing_id\n                            \n                            \n                                client_id\n                            \n                            \n                                id\n                            \n                            \n                                periode\n                            \n                            \n                                periode_type\n                            \n                            \n                                reportSavingDetail\n                            \n                            \n                                saving\n                            \n                            \n                                sum_delta_in\n                            \n                            \n                                sum_delta_out\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            billing_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periode_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportSavingDetail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReportSavingDetail\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sum_delta_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sum_delta_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSaving.entity.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn } from \"typeorm\";\nimport { ReportSavingDetail } from \"./reportSavingDetail.entity\";\n\n@Entity()\nexport class ReportSaving {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column()\n    client_id: number\n    \n    @Column()\n    billing_id: number\n    \n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    saving: number\n    \n    @Column()\n    periode_type: string\n    \n    @Column()\n    periode: string\n    \n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    sum_delta_in: number\n    \n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    sum_delta_out: number\n\n    @OneToOne(() => ReportSavingDetail, reportSavingDetail => reportSavingDetail.reportSaving)\n    @JoinColumn()\n    reportSavingDetail: ReportSavingDetail;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportSavingDetail.html":{"url":"classes/ReportSavingDetail.html","title":"class - ReportSavingDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportSavingDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/models/reportSavingDetail.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delta_in\n                            \n                            \n                                delta_out\n                            \n                            \n                                device_in\n                            \n                            \n                                device_out\n                            \n                            \n                                id\n                            \n                            \n                                max_kwh_in\n                            \n                            \n                                max_kwh_out\n                            \n                            \n                                max_time_in\n                            \n                            \n                                max_time_out\n                            \n                            \n                                min_kwh_in\n                            \n                            \n                                min_kwh_out\n                            \n                            \n                                min_time_in\n                            \n                            \n                                min_time_out\n                            \n                            \n                                panel\n                            \n                            \n                                panelId\n                            \n                            \n                                reportId\n                            \n                            \n                                reportSaving\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delta_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delta_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max_kwh_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max_kwh_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max_time_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max_time_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min_kwh_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min_kwh_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'decimal', precision: 5, scale: 2, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min_time_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min_time_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Panel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@JoinColumn({name: 'panelId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panelId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReportSaving\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/models/reportSavingDetail.entity.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, JoinColumn } from \"typeorm\";\nimport { Panel } from \"../components/panels/panel.entity\";\nimport { ReportSaving } from \"./reportSaving.entity\";\n\n@Entity()\nexport class ReportSavingDetail {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    delta_in: number\n\n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    delta_out: number\n\n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    min_kwh_in: number\n\n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    max_kwh_in: number\n\n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    min_kwh_out: number\n\n    @Column({\n        type: 'decimal',\n        precision: 5,\n        scale: 2,\n        default: 0\n    })\n    max_kwh_out: number\n\n    @Column({\n        type: \"datetime\"\n    })\n    min_time_in: string\n\n    @Column({\n        type: \"datetime\"\n    })\n    max_time_in: string\n\n    @Column({\n        type: \"datetime\"\n    })\n    min_time_out: string\n\n    @Column({\n        type: \"datetime\"\n    })\n    max_time_out: string\n\n    @Column()\n    device_in: string\n\n    @Column()\n    device_out: string\n\n    @Column()\n    reportId: number\n\n    @Column()\n    panelId: number\n\n    @OneToOne(() => ReportSaving, reportSaving => reportSaving.reportSavingDetail)\n    @JoinColumn()\n    reportSaving: ReportSaving;\n\n    @ManyToOne(() => Panel, panel => panel.devices)\n    @JoinColumn({\n        name: 'panelId'\n    })\n    panel: Panel;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/users/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                photo\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \nhashPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/modules/components/users/user.entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, BeforeInsert } from 'typeorm';\nimport * as crypto from 'crypto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity('users')\nexport class User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    name: string;\n\n    @ApiProperty()\n    @Column()\n    username: string;\n\n    @BeforeInsert()\n    hashPassword() {\n        this.password = crypto.createHmac('sha256', this.password).digest('hex');\n      }\n    @ApiProperty()\n    @Column()\n    password: string;\n\n    @ApiProperty()\n    @Column()\n    email: string;\n\n    @ApiProperty()\n    @Column()\n    photo: string;\n}\n\nexport class UserLogin {\n    @ApiProperty()\n    email: string;\n\n    @ApiProperty()\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiBody({type: User})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/users/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Delete('/:id')@ApiParam({name: 'id'})@UseGuards(undefined)@ApiOkResponse({description: 'Deleted'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/users/user.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/')@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/users/user.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/:id')@ApiParam({name: 'id'})@UseGuards(undefined)@ApiOkResponse({description: 'Sucess Get All'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/users/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Put('/:id')@ApiParam({name: 'id'})@ApiBody({type: User})@UseGuards(undefined)@ApiOkResponse({description: 'Deleted'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/users/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(id, file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Post('/foto/:id')@ApiConsumes('multipart/form-data')@ApiParam({name: 'id'})@ApiBody({schema: undefined})@UseInterceptors(undefined)@ApiOkResponse({description: 'Uploaded'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/users/user.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, UseGuards, Delete, Put, UseInterceptors, UploadedFile } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { User } from './user.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBody, ApiTags, ApiBearerAuth, ApiOkResponse, ApiUnauthorizedResponse, ApiParam, ApiConsumes } from '@nestjs/swagger';\nimport { diskStorage } from  'multer';\nimport { extname } from  'path';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@Controller('api/user')\n@ApiTags('&#x1F468; User')\nexport class UserController {\n    \n    constructor(private userService: UserService){}\n\n    @ApiBearerAuth()\n    @Get('/')\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getAll(): Promise {\n        return await this.userService.getAll();\n    }\n\n    @Post('/')\n    @ApiBody({ type: User })\n    async createUser(@Body() user: User): Promise {\n        return await this.userService.createUser(user);\n    }\n\n    @ApiBearerAuth()\n    @Get('/:id')\n    @ApiParam({ name: 'id' })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Sucess Get All'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async getById(@Param() id): Promise {\n        return await this.userService.findById(id)\n    }\n\n    @ApiBearerAuth()\n    @Delete('/:id')\n    @ApiParam({ name: 'id' })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Deleted'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async deleteUser(@Param() id): Promise {\n        return await this.userService.deleteUser(id)\n    }\n\n    @ApiBearerAuth()\n    @Put('/:id')\n    @ApiParam({ name: 'id' })\n    @ApiBody({ type: User })\n    @UseGuards(AuthGuard())\n    @ApiOkResponse({description: 'Deleted'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async updateUser(@Param('id') id, @Body() user: User): Promise {\n        user.id = Number(id);\n        return this.userService.update(user);\n    }\n\n    @ApiBearerAuth()\n    @UseGuards(AuthGuard())\n    @Post('/foto/:id')\n    @ApiConsumes('multipart/form-data')\n    @ApiParam({name: 'id'})\n    @ApiBody({\n        schema: {\n            type: 'object',\n            properties: {\n                file: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })\n    @UseInterceptors(FileInterceptor('file', {\n        storage: diskStorage({\n            destination: './public/uploads', \n            filename: (req, file, cb) => {\n                const randomName = Array(32).fill(null).map(() => (Math.round(Math.random() * 16)).toString(16)).join('')\n                return cb(null, `${randomName}${extname(file.originalname)}`)\n            }\n        })\n      })\n    )\n    @ApiOkResponse({description: 'Uploaded'})\n    @ApiUnauthorizedResponse({ description: 'Unauthorized' })\n    async uploadAvatar(@Param('id') id, @UploadedFile() file) {\n      return await this.userService.setPhoto(Number(id), `${file.path}`);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLogin.html":{"url":"classes/UserLogin.html","title":"class - UserLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/users/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, BeforeInsert } from 'typeorm';\nimport * as crypto from 'crypto';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity('users')\nexport class User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty()\n    @Column()\n    name: string;\n\n    @ApiProperty()\n    @Column()\n    username: string;\n\n    @BeforeInsert()\n    hashPassword() {\n        this.password = crypto.createHmac('sha256', this.password).digest('hex');\n      }\n    @ApiProperty()\n    @Column()\n    password: string;\n\n    @ApiProperty()\n    @Column()\n    email: string;\n\n    @ApiProperty()\n    @Column()\n    photo: string;\n}\n\nexport class UserLogin {\n    @ApiProperty()\n    email: string;\n\n    @ApiProperty()\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/modules/components/users/user.entity';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        TypeOrmModule.forFeature([User])\n    ],\n    controllers: [UserController],\n    providers: [UserService],\n    exports: [TypeOrmModule],\n})\nexport class UserModule {};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/users/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getByEmailAndPass\n                            \n                            \n                                    Async\n                                getByUsername\n                            \n                            \n                                    Async\n                                setPhoto\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/users/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmailAndPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmailAndPass(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setPhoto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPhoto(id: number, urlPath: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    urlPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/users/user.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/users/user.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotAcceptableException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './user.entity';\nimport { Repository, UpdateResult, DeleteResult } from 'typeorm';\nimport * as crypto from 'crypto';\n\n@Injectable()\nexport class UserService {\n    private readonly user: User[] = [];\n\n    constructor(@InjectRepository(User) private userRepo: Repository) {}\n\n    async getAll() {\n        return await this.userRepo.find();\n    }\n\n    async getByEmail(email: string) {\n        return await this.userRepo.findOne({\n            where: {\n                email: email\n            }\n        });\n    }\n\n    async getByUsername(username: string) {\n        return await this.userRepo.findOne({\n            where: {\n                username: username\n            }\n        });\n    }\n\n    async getByEmailAndPass(email: string, password: string) {\n        const passHash = crypto.createHmac('sha256', password).digest('hex');\n        return await this.userRepo.findOne({\n            where: {\n                email: email,\n                password: passHash\n            }\n        })\n      }\n\n    async findById(id: number) {\n        return await this.userRepo.findOne(id)\n    }\n\n    async createUser(user: User) {\n        const duplicateEmail = await this.getByEmail(user.email);\n        const duplicateUsername = await this.getByUsername(user.username);\n\n        if(duplicateEmail) {\n            throw new NotAcceptableException(\n                'Email already registered',\n            )\n        } else if(duplicateUsername) {\n            throw new NotAcceptableException(\n                'Username already taken',\n            )\n        }\n        return await this.userRepo.save(\n            this.userRepo.create(user),\n          );\n    }\n\n    async update(user: User): Promise {\n        return await this.userRepo.update(user.id, user);\n    }\n\n    async deleteUser(id: number): Promise {\n        return await this.userRepo.delete(id);\n    }\n\n    async setPhoto(id: number, urlPath: string): Promise {\n        return await this.userRepo.update(id, {photo: urlPath})\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Zona.html":{"url":"classes/Zona.html","title":"class - Zona","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Zona\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/zona/zona.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                clientId\n                            \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                latittude\n                            \n                            \n                                longitude\n                            \n                            \n                                updated_at\n                            \n                            \n                                zona_desc\n                            \n                            \n                                zona_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Client\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latittude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zona_desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zona_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/components/zona/zona.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToOne, JoinColumn } from \"typeorm\";\nimport { Client } from \"../clients/client.entity\";\n\n@Entity()\nexport class Zona {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column()\n    zona_name: string\n\n    @Column()\n    zona_desc: string\n\n    @Column()\n    latittude: string\n\n    @Column()\n    longitude: string\n\n    @Column()\n    clientId: number\n\n    @CreateDateColumn()\n    created_at: Date\n\n    @UpdateDateColumn()\n    updated_at: Date\n\n    @OneToOne(() => Client, client => client.zona)\n    @JoinColumn()\n    client: Client;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ZonaController.html":{"url":"controllers/ZonaController.html","title":"controller - ZonaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ZonaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/zona/zona.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /zona\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                index\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiBearerAuth()@UseGuards(new JwtAuthGuard())@ApiOkResponse({description: 'Success get all'})@ApiUnauthorizedResponse({description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/components/zona/zona.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { ApiTags, ApiBearerAuth, ApiOkResponse, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { ZonaService } from './zona.service';\nimport { JwtAuthGuard } from 'src/modules/__utils/jwt-guard';\nimport { Zona } from './zona.entity';\n\n@Controller('/zona')\n@ApiTags('&#x1F6A5; Zona')\n@UseGuards(new JwtAuthGuard())\n@ApiBearerAuth()\nexport class ZonaController {\n    constructor(private zonaService: ZonaService) {}\n\n    @Get('/')\n    @ApiBearerAuth()\n    @UseGuards(new JwtAuthGuard())\n    @ApiOkResponse({description: \"Success get all\"})\n    @ApiUnauthorizedResponse({description: \"Unauthorized\"})\n    async index(): Promise {\n        return await this.zonaService.getAll();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZonaModule.html":{"url":"modules/ZonaModule.html","title":"module - ZonaModule","body":"\n                   \n\n\n\n\n    Modules\n    ZonaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ZonaModule\n\n\n\ncluster_ZonaModule_providers\n\n\n\n\nZonaService\n\nZonaService\n\n\n\nZonaModule\n\nZonaModule\n\nZonaModule -->\n\nZonaService->ZonaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/components/zona/zona.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ZonaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ZonaController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Zona } from './zona.entity';\nimport { Client } from '../clients/client.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { ZonaController } from './zona.controller';\nimport { ZonaService } from './zona.service';\n\n@Module({\n    imports: [\n        PassportModule.register({ defaultStrategy: 'jwt'}),\n        TypeOrmModule.forFeature([Zona, Client])\n    ],\n    controllers: [\n        ZonaController\n    ],\n    providers: [\n        ZonaService\n    ],\n})\nexport class ZonaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZonaService.html":{"url":"injectables/ZonaService.html","title":"injectable - ZonaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZonaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/components/zona/zona.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(zonaRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/components/zona/zona.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zonaRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/components/zona/zona.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Zona } from './zona.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ZonaService {\n    constructor(@InjectRepository(Zona) private zonaRepo: Repository) {}\n\n    async getAll(): Promise {\n        return await this.zonaRepo.find();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/__utils/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/__utils/cluster.service.ts\n            \n            injectable\n            ClusterService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/__utils/cluster.service.ts\n            \n            variable\n            numCPUs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/__utils/jwt-guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/__utils/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/__utils/pagination.ts\n            \n            class\n            Pagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/components/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/components/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/components/billing/billing.controller.ts\n            \n            controller\n            BillingController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/components/billing/billing.entity.ts\n            \n            class\n            Billing\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/components/billing/billing.service.ts\n            \n            injectable\n            BillingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/components/clients/client.controller.ts\n            \n            controller\n            ClientController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/components/clients/client.entity.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/components/clients/client.service.ts\n            \n            injectable\n            ClientService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/components/device/device.controller.ts\n            \n            controller\n            DeviceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/components/device/device.entity.ts\n            \n            class\n            Device\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/components/device/device.service.ts\n            \n            injectable\n            DeviceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/components/ioctl/ioctl.controller.ts\n            \n            controller\n            IoCtlController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/components/ioctl/ioctl.entity.ts\n            \n            class\n            IoCtl\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/modules/components/ioctl/ioctl.entity.ts\n            \n            class\n            PaginateIoctl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/components/ioctl/ioctl.service.ts\n            \n            injectable\n            IoctlService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/components/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/components/mail/mail.entity.ts\n            \n            class\n            Mail\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/components/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/components/panels/panel.controller.ts\n            \n            controller\n            PanelController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/components/panels/panel.entity.ts\n            \n            class\n            Panel\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/components/panels/panel.service.ts\n            \n            injectable\n            PanelService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/components/users/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/components/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/components/users/user.entity.ts\n            \n            class\n            UserLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/components/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/components/zona/zona.controller.ts\n            \n            controller\n            ZonaController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/components/zona/zona.entity.ts\n            \n            class\n            Zona\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/components/zona/zona.service.ts\n            \n            injectable\n            ZonaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/decorators/user.decorator.ts\n            \n            variable\n            UserDecor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/models/currentMonthDashboard.ts\n            \n            class\n            CurrentMonthDashboard\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/models/reportSaving.entity.ts\n            \n            class\n            ReportSaving\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/models/reportSavingDetail.entity.ts\n            \n            class\n            ReportSavingDetail\n            \n                0 %\n                (0/18)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^6.10.14\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^6.10.14\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.9\n        \n            @nestjs/serve-static : ^2.1.0\n        \n            @nestjs/swagger : ^4.5.3\n        \n            @nestjs/typeorm : ^7.0.0\n        \n            @nestjsx/crud : ^4.5.0\n        \n            @nestjsx/crud-typeorm : ^4.5.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            crypto : ^1.0.1\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            multer : ^1.4.2\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.24\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BillingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeviceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoCtlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PanelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZonaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_providers\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_DeviceModule\n\n\n\ncluster_DeviceModule_providers\n\n\n\ncluster_IoCtlModule\n\n\n\ncluster_IoCtlModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PanelModule\n\n\n\ncluster_PanelModule_providers\n\n\n\ncluster_ZonaModule\n\n\n\ncluster_ZonaModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBillingModule\n\nBillingModule\n\nAppModule -->\n\nBillingModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nDeviceModule\n\nDeviceModule\n\nAppModule -->\n\nDeviceModule->AppModule\n\n\n\n\n\nIoCtlModule\n\nIoCtlModule\n\nAppModule -->\n\nIoCtlModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPanelModule\n\nPanelModule\n\nAppModule -->\n\nPanelModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nZonaModule\n\nZonaModule\n\nAppModule -->\n\nZonaModule->AppModule\n\n\n\n\n\nClusterService\n\nClusterService\n\nAppModule -->\n\nClusterService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nBillingService\n\nBillingService\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\nDeviceService\n\nDeviceService\n\nDeviceModule -->\n\nDeviceService->DeviceModule\n\n\n\n\n\nIoctlService\n\nIoctlService\n\nIoCtlModule -->\n\nIoctlService->IoCtlModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPanelService\n\nPanelService\n\nPanelModule -->\n\nPanelService->PanelModule\n\n\n\n\n\nZonaService\n\nZonaService\n\nZonaModule -->\n\nZonaService->ZonaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            numCPUs   (src/.../cluster.service.ts)\n                        \n                        \n                            UserDecor   (src/.../user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/__utils/cluster.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            numCPUs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : os.cpus().length\n                        \n                    \n\n\n            \n        \n\n    src/modules/decorators/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserDecor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => req.user)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
